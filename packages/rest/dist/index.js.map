{"version":3,"sources":["../src/platform/node.ts","../src/client/KintoneClientOptions/Proxy.ts","../src/index.ts"],"sourcesContent":["import fs from \"node:fs\";\nimport { UnsupportedPlatformError } from \"./UnsupportedPlatformError.js\";\nimport os from \"os\";\nimport { Agent } from \"undici\";\nimport type { PlatformDeps } from \"./index.js\";\nimport type { ClientCertAuth } from \"../client/KintoneClientOptions/types/CertAuth.js\";\nimport packageJson from \"../../package.json\";\nimport type { Proxy } from \"../client/KintoneClientOptions/types/Proxy.js\";\nimport { buildProxy as _buildProxy } from \"../client/KintoneClientOptions/Proxy.js\";\n\nconst getRequestToken = () => {\n  throw new UnsupportedPlatformError(\"Node.js\");\n};\n\nconst getDefaultAuth = () => {\n  throw new UnsupportedPlatformError(\"Node.js\");\n};\n\nconst buildCertAuth = (certAuth: ClientCertAuth): { dispatcher: Agent } => {\n  const agent = new Agent({\n    connect: {\n      pfx:\n        \"pfx\" in certAuth\n          ? certAuth.pfx\n          : fs.readFileSync(certAuth.pfxFilePath),\n      passphrase: certAuth.password,\n    },\n  });\n\n  return { dispatcher: agent };\n};\n\nconst buildTimeoutHeader = (options: { socketTimeout?: number }) => {\n  if (options.socketTimeout) {\n    return { timeout: options.socketTimeout };\n  }\n\n  return {};\n};\n\nconst buildUserAgentHeader = (options: { userAgent?: string }) => {\n  const { userAgent } = options;\n  return userAgent !== undefined\n    ? {\n        \"User-Agent\": `Node.js/${process.version}(${os.type()}) ${\n          packageJson.name\n        }@${packageJson.version}${userAgent ? ` ${userAgent}` : \"\"}`,\n      }\n    : {};\n};\n\nconst buildBaseUrl = (baseUrl: string | undefined) => {\n  if (typeof baseUrl === \"undefined\") {\n    throw new Error(\"in Node.js environment, baseUrl is required\");\n  }\n  return baseUrl;\n};\n\nconst getVersion = () => {\n  return packageJson.version;\n};\n\nconst buildProxy = (proxy: Proxy) => {\n  return _buildProxy(proxy);\n};\n\nexport default {\n  getRequestToken,\n  getDefaultAuth,\n  buildCertAuth,\n  buildUserAgentHeader,\n  buildTimeoutHeader,\n  buildBaseUrl,\n  getVersion,\n  buildProxy,\n} as PlatformDeps;\n","import { ProxyAgent } from \"undici\";\nimport type { Proxy } from \"./types/Proxy.js\";\n\nexport const buildProxy = (proxy: Proxy): { dispatcher: ProxyAgent } => {\n  const protocol = proxy.protocol ?? \"http\";\n  if (proxy.auth === undefined) {\n    return {\n      dispatcher: new ProxyAgent({\n        uri: `${protocol}://${proxy.host}:${proxy.port}`,\n      }),\n    };\n  }\n  return {\n    dispatcher: new ProxyAgent({\n      uri: `${protocol}://${proxy.auth.username}:${proxy.auth.password}@${proxy.host}:${proxy.port}`,\n    }),\n  };\n};\n","import { injectPlatformDeps } from \"./platform/index.js\";\nimport nodeDeps from \"./platform/node.js\";\n\ninjectPlatformDeps(nodeDeps);\n\nimport { createClient } from \"./client/index.js\";\nimport { iterator } from \"./helpers/iterator.js\";\n\nexport { createClient, iterator };\n"],"mappings":"oEAAA,OAAOA,MAAQ,UAEf,OAAOC,MAAQ,KACf,OAAS,SAAAC,MAAa,SCHtB,OAAS,cAAAC,MAAkB,SAGpB,IAAMC,EAAcC,GAA6C,CACtE,IAAMC,EAAWD,EAAM,UAAY,OACnC,OAAIA,EAAM,OAAS,OACV,CACL,WAAY,IAAIF,EAAW,CACzB,IAAK,GAAGG,CAAQ,MAAMD,EAAM,IAAI,IAAIA,EAAM,IAAI,EAChD,CAAC,CACH,EAEK,CACL,WAAY,IAAIF,EAAW,CACzB,IAAK,GAAGG,CAAQ,MAAMD,EAAM,KAAK,QAAQ,IAAIA,EAAM,KAAK,QAAQ,IAAIA,EAAM,IAAI,IAAIA,EAAM,IAAI,EAC9F,CAAC,CACH,CACF,EDPA,IAAME,EAAkB,IAAM,CAC5B,MAAM,IAAIC,EAAyB,SAAS,CAC9C,EAEMC,EAAiB,IAAM,CAC3B,MAAM,IAAID,EAAyB,SAAS,CAC9C,EAEME,EAAiBC,IAWd,CAAE,WAVK,IAAIC,EAAM,CACtB,QAAS,CACP,IACE,QAASD,EACLA,EAAS,IACTE,EAAG,aAAaF,EAAS,WAAW,EAC1C,WAAYA,EAAS,QACvB,CACF,CAAC,CAE0B,GAGvBG,EAAsBC,GACtBA,EAAQ,cACH,CAAE,QAASA,EAAQ,aAAc,EAGnC,CAAC,EAGJC,EAAwBD,GAAoC,CAChE,GAAM,CAAE,UAAAE,CAAU,EAAIF,EACtB,OAAOE,IAAc,OACjB,CACE,aAAc,WAAW,QAAQ,OAAO,IAAIC,EAAG,KAAK,CAAC,KACnDC,EAAY,IACd,IAAIA,EAAY,OAAO,GAAGF,EAAY,IAAIA,CAAS,GAAK,EAAE,EAC5D,EACA,CAAC,CACP,EAEMG,EAAgBC,GAAgC,CACpD,GAAI,OAAOA,EAAY,IACrB,MAAM,IAAI,MAAM,6CAA6C,EAE/D,OAAOA,CACT,EAEMC,EAAa,IACVH,EAAY,QAGfI,EAAcC,GACXD,EAAYC,CAAK,EAGnBC,EAAQ,CACb,gBAAAlB,EACA,eAAAE,EACA,cAAAC,EACA,qBAAAM,EACA,mBAAAF,EACA,aAAAM,EACA,WAAAE,EACA,WAAAC,CACF,EExEAG,EAAmBC,CAAQ","names":["fs","os","Agent","ProxyAgent","buildProxy","proxy","protocol","getRequestToken","UnsupportedPlatformError","getDefaultAuth","buildCertAuth","certAuth","Agent","fs","buildTimeoutHeader","options","buildUserAgentHeader","userAgent","os","package_default","buildBaseUrl","baseUrl","getVersion","buildProxy","proxy","node_default","injectPlatformDeps","node_default"]}