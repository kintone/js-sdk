/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/k/guest/{guestSpaceId}/v1/app.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets general information of an App, including the name, description, related Space, creator and updater information. */
        get: operations["getAppForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the App permissions of an App.
         *      */
        get: operations["getAppAclForGuestSpace"];
        /** @description Updates the App permissions of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *      */
        put: operations["putAppAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/actions.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Action Settings of the App.
         *      */
        get: operations["getAppActionsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/adminNotes.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets notes for app administrators and their settings.
         *      */
        get: operations["getAppAdminNotesForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/customize.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the JavaScript and CSS Customization settings of an App.
         *      */
        get: operations["getAppCustomizeForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/form/fields.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of fields and field settings of an App.
         *      */
        get: operations["getAppFormFieldsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/form/layout.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the field layout info of a form in an App.
         *      */
        get: operations["getAppFormLayoutForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/move.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Changes the Space to which an App belongs.
         *      */
        post: operations["postAppMoveForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/notifications/general.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the General Notification settings of the App.
         *      */
        get: operations["getAppNotificationsGeneralForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/notifications/perRecord.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Per Record Notification settings of the App.
         *      */
        get: operations["getAppNotificationsPerRecordForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/notifications/reminder.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Reminder Notification settings of the App.
         *      */
        get: operations["getAppNotificationsReminderForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Plug-ins added to an App.
         *      */
        get: operations["getAppPluginsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/reports.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Graph settings of the App.
         *      */
        get: operations["getAppReportsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/settings.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the description, name, icon, revision and color theme of an App.
         *      */
        get: operations["getAppSettingsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the process management settings of an App.
         *      */
        get: operations["getAppStatusForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/app/views.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the View settings of an App.
         *      */
        get: operations["getAppViewsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/apps.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets general information of multiple Apps, including the name, description, related Space, creator and updater information.
         *      */
        get: operations["getAppsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/apps/statistics.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of the usage status of Apps.
         *      */
        get: operations["getAppsStatisticsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/bulkRequest.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Runs multiple API requests sequentially to multiple Apps.
         *      */
        post: operations["postBulkRequestForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/field/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Field permission settings of an App.
         *      */
        get: operations["getFieldAclForGuestSpace"];
        /** @description Updates the Field permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *
         *     When the permissions settings of fields in an App are changed, the updated settings will be applied to the concerned fields sequentially in order of completion.
         *      */
        put: operations["putFieldAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/file.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Downloads files from an attachment field in an App.
         *      */
        get: operations["downloadFileForGuestSpace"];
        put?: never;
        /** @description Uploads a file to Kintone.
         *      */
        post: operations["uploadFileForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/form.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves the form details of an App.
         *      */
        get: operations["getFormForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/guests.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Adds Guest users to Kintone.
         *     This does not affiliate Guest users with any Guest Spaces, and does not send any invitation emails.
         *     To affiliate a Guest user with a Guest Space, follow up this API call with the Update Guest Members API.
         *      */
        post: operations["postGuestsForGuestSpace"];
        /** @description Deletes a Guest user from Kintone. To remove a user from a Guest Space without deleting their account, use the Update Guest Members API.
         *      */
        delete: operations["deleteGuestsForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/plugin.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates an imported plug-in in the Kintone environment.
         *      */
        put: operations["putPluginForGuestSpace"];
        /** @description Imports a plug-in into Kintone.
         *      */
        post: operations["installPluginForGuestSpace"];
        /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
         *      */
        delete: operations["uninstallPluginForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/plugin/apps.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets Apps that have the specified plug-in added.
         *      */
        get: operations["getPluginAppsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of plug-ins imported into Kintone.
         *      */
        get: operations["getPluginsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/plugins/required.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of plug-ins that have been deleted from Kintone, but have already been added to Apps.
         *     This can occur when a plug-in is installed, added to an App, and then proceeded to be uninstalled from the Kintone environment.
         *      */
        get: operations["getPluginsRequiredForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a preview App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        post: operations["postPreviewAppForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the App permissions of an App.
         *      */
        get: operations["getPreviewAppAclForGuestSpace"];
        /** @description Updates the App permissions of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *      */
        put: operations["putPreviewAppAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/actions.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Action Settings of the App.
         *      */
        get: operations["getPreviewAppActionsForGuestSpace"];
        /** @description Updates the Action settings of the App.
         *     This API updates the pre-live settings. After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppActionsForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/adminNotes.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets notes for app administrators and their settings.
         *      */
        get: operations["getPreviewAppAdminNotesForGuestSpace"];
        /** @description Updates the notes for App administrators and their settings.
         *      */
        put: operations["putPreviewAppAdminNotesForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/customize.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the JavaScript and CSS Customization settings of an App.
         *      */
        get: operations["getPreviewAppCustomizeForGuestSpace"];
        /** @description Updates the JavaScript and CSS Customization settings of an App.
         *     This API updates the pre-live settings. After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppCustomizeForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/deploy.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the deployment status of the App settings for multiple Apps.
         *      */
        get: operations["getPreviewAppDeployForGuestSpace"];
        put?: never;
        /** @description Updates the settings of a pre-live App to the live App.
         *     Using this API gives the same results as when users click on "Update App" or "Discard Changes" on the App's settings page.
         *     If multiple apps are specified in this API, and one of the updates to an App fails, all of the specified Apps will rollback to the state before this API was run.
         *     If the record/field permissions of Apps are changed, the updated settings will be applied to the concerned records/fields sequentially, within each App.
         *      */
        post: operations["deployAppForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/form/fields.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of fields and field settings of an App.
         *      */
        get: operations["getPreviewAppFormFieldsForGuestSpace"];
        /** @description Updates the field settings of fields in a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppFormFieldsForGuestSpace"];
        /** @description Adds fields to a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        post: operations["postPreviewAppFormFieldsForGuestSpace"];
        /** @description Deletes fields from a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        delete: operations["deletePreviewAppFormFieldsForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/form/layout.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the field layout info of a form in an App.
         *      */
        get: operations["getPreviewAppFormLayoutForGuestSpace"];
        /** @description Updates the field layout info of a form in an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppFormLayoutForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/notifications/general.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the General Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsGeneralForGuestSpace"];
        /** @description Updates the General Notification settings of the App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsGeneralForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/notifications/perRecord.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Per Record Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsPerRecordForGuestSpace"];
        /** @description Updates the Per Record Notification settings of the App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsPerRecordForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/notifications/reminder.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Reminder Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsReminderForGuestSpace"];
        /** @description Updates the Reminder Notification settings of the App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsReminderForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Plug-ins added to an App.
         *      */
        get: operations["getPreviewAppPluginsForGuestSpace"];
        put?: never;
        /** @description Adds Plug-ins to an App.
         *      */
        post: operations["postPreviewAppPluginsForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/reports.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Graph settings of the App.
         *      */
        get: operations["getPreviewAppReportsForGuestSpace"];
        /** @description Updates the Graph settings of the App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App:
         *      */
        put: operations["putPreviewAppReportsForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/settings.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the description, name, icon, revision and color theme of an App.
         *      */
        get: operations["getPreviewAppSettingsForGuestSpace"];
        /** @description Updates the description, name, icon, revision and color theme of an App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App:
         *      */
        put: operations["putPreviewAppSettingsForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the process management settings of an App.
         *      */
        get: operations["getPreviewAppStatusForGuestSpace"];
        /** @description Updates the process management settings of an App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppStatusForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/app/views.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the View settings of an App.
         *      */
        get: operations["getPreviewAppViewsForGuestSpace"];
        /** @description Updates the View settings of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppViewsForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/field/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Field permission settings of an App.
         *      */
        get: operations["getPreviewFieldAclForGuestSpace"];
        /** @description Updates the Field permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *
         *     When the permissions settings of fields in an App are changed, the updated settings will be applied to the concerned fields sequentially in order of completion.
         *      */
        put: operations["putPreviewFieldAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/form.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves the form details of an App.
         *      */
        get: operations["getPreviewFormForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/preview/record/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Record permission settings of an App.
         *      */
        get: operations["getPreviewRecordAclForGuestSpace"];
        /** @description Updates the Record permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *     When the permissions settings of records in an App are changed, the updated settings will be applied to the concerned records sequentially in order of completion.
         *      */
        put: operations["putPreviewRecordAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details of 1 record from an App by specifying the App ID and Record ID.
         *      */
        get: operations["getRecordForGuestSpace"];
        /** @description Updates details of 1 record in an App by specifying its record number, or a different unique key.
         *      */
        put: operations["putRecordForGuestSpace"];
        /** @description Adds 1 record to an App.
         *      */
        post: operations["postRecordForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Record permission settings of an App.
         *      */
        get: operations["getRecordAclForGuestSpace"];
        /** @description Updates the Record permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *     When the permissions settings of records in an App are changed, the updated settings will be applied to the concerned records sequentially in order of completion.
         *      */
        put: operations["putRecordAclForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record/assignees.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Assignees of a Record status, that was set with Process Management.
         *      */
        put: operations["putRecordAssigneesForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record/comment.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Add a comment to a record in an app.
         *      */
        post: operations["postRecordCommentForGuestSpace"];
        /** @description Delete a comment in a record in an app.
         *      */
        delete: operations["deleteRecordCommentForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record/comments.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves multiple comments from a record in an app.
         *      */
        get: operations["getRecordCommentsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/record/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Status of a record of an App, that was set with Process Management.
         *      */
        put: operations["putRecordStatusForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/records.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details of multiple records from an App by specifying the App ID and a query string.
         *      */
        get: operations["getRecordsForGuestSpace"];
        /** @description Updates details of multiple records in an App, by specifying their record numbers, or their unique keys.
         *     If the upsert parameter is set to true, it also adds new records to the App.
         *      */
        put: operations["putRecordsForGuestSpace"];
        /** @description Adds multiple records to an App.
         *      */
        post: operations["postRecordsForGuestSpace"];
        /** @description Deletes multiple records in an app.
         *      */
        delete: operations["deleteRecordsForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/records/acl/evaluate.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Evaluates the API user's permissions for records and fields within an App.
         *      */
        get: operations["getRecordsAclEvaluateForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/records/cursor.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves multiple records from an App by specifying the cursor ID.
         *      */
        get: operations["getRecordsCursorForGuestSpace"];
        put?: never;
        /** @description Adds a cursor so that large amount of records can be obtained from an App.
         *      */
        post: operations["postRecordsCursorForGuestSpace"];
        /** @description Deletes a cursor by specifying the cursor ID.
         *      */
        delete: operations["deleteRecordsCursorForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/records/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Statuses of Multiple records of an App, that was set with Process Management.
         *      */
        put: operations["putRecordsStatusForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets information of a Space.
         *      */
        get: operations["getSpaceForGuestSpace"];
        /** @description Updates the settings of a Space.
         *      */
        put: operations["putSpaceForGuestSpace"];
        post?: never;
        /** @description Deletes a Space.
         *      */
        delete: operations["deleteSpaceForGuestSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space/body.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the body of a Space.
         *      */
        put: operations["putSpaceBodyForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space/guests.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Guest Members of a Space.
         *      */
        put: operations["putSpaceGuestsForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space/members.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Space Members of a Space.
         *      */
        get: operations["getSpaceMembersForGuestSpace"];
        /** @description Updates the Members of a Space.
         *      */
        put: operations["putSpaceMembersForGuestSpace"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space/thread.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates a Thread of a Space.
         *      */
        put: operations["putSpaceThreadForGuestSpace"];
        /** @description Adds a Thread in a Space.
         *      */
        post: operations["postSpaceThreadForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/space/thread/comment.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Adds a comment to a Thread of a Space.
         *      */
        post: operations["postSpaceThreadCommentForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/spaces/statistics.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSpacesStatisticsForGuestSpace"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/guest/{guestSpaceId}/v1/template/space.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a Space from a Space template.
         *      */
        post: operations["postTemplateSpaceForGuestSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets general information of an App, including the name, description, related Space, creator and updater information. */
        get: operations["getApp"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the App permissions of an App.
         *      */
        get: operations["getAppAcl"];
        /** @description Updates the App permissions of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *      */
        put: operations["putAppAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/actions.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Action Settings of the App.
         *      */
        get: operations["getAppActions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/adminNotes.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets notes for app administrators and their settings.
         *      */
        get: operations["getAppAdminNotes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/customize.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the JavaScript and CSS Customization settings of an App.
         *      */
        get: operations["getAppCustomize"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/form/fields.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of fields and field settings of an App.
         *      */
        get: operations["getAppFormFields"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/form/layout.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the field layout info of a form in an App.
         *      */
        get: operations["getAppFormLayout"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/move.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Changes the Space to which an App belongs.
         *      */
        post: operations["postAppMove"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/notifications/general.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the General Notification settings of the App.
         *      */
        get: operations["getAppNotificationsGeneral"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/notifications/perRecord.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Per Record Notification settings of the App.
         *      */
        get: operations["getAppNotificationsPerRecord"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/notifications/reminder.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Reminder Notification settings of the App.
         *      */
        get: operations["getAppNotificationsReminder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Plug-ins added to an App.
         *      */
        get: operations["getAppPlugins"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/reports.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Graph settings of the App.
         *      */
        get: operations["getAppReports"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/settings.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the description, name, icon, revision and color theme of an App.
         *      */
        get: operations["getAppSettings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the process management settings of an App.
         *      */
        get: operations["getAppStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/app/views.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the View settings of an App.
         *      */
        get: operations["getAppViews"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/apps.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets general information of multiple Apps, including the name, description, related Space, creator and updater information.
         *      */
        get: operations["getApps"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/apps/statistics.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of the usage status of Apps.
         *      */
        get: operations["getAppsStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/bulkRequest.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Runs multiple API requests sequentially to multiple Apps.
         *      */
        post: operations["postBulkRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/field/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Field permission settings of an App.
         *      */
        get: operations["getFieldAcl"];
        /** @description Updates the Field permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *
         *     When the permissions settings of fields in an App are changed, the updated settings will be applied to the concerned fields sequentially in order of completion.
         *      */
        put: operations["putFieldAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/file.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Downloads files from an attachment field in an App.
         *      */
        get: operations["downloadFile"];
        put?: never;
        /** @description Uploads a file to Kintone.
         *      */
        post: operations["uploadFile"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/form.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves the form details of an App.
         *      */
        get: operations["getForm"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/guests.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Adds Guest users to Kintone.
         *     This does not affiliate Guest users with any Guest Spaces, and does not send any invitation emails.
         *     To affiliate a Guest user with a Guest Space, follow up this API call with the Update Guest Members API.
         *      */
        post: operations["postGuests"];
        /** @description Deletes a Guest user from Kintone. To remove a user from a Guest Space without deleting their account, use the Update Guest Members API.
         *      */
        delete: operations["deleteGuests"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/plugin.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates an imported plug-in in the Kintone environment.
         *      */
        put: operations["putPlugin"];
        /** @description Imports a plug-in into Kintone.
         *      */
        post: operations["installPlugin"];
        /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
         *      */
        delete: operations["uninstallPlugin"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/plugin/apps.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets Apps that have the specified plug-in added.
         *      */
        get: operations["getPluginApps"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of plug-ins imported into Kintone.
         *      */
        get: operations["getPlugins"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/plugins/required.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of plug-ins that have been deleted from Kintone, but have already been added to Apps.
         *     This can occur when a plug-in is installed, added to an App, and then proceeded to be uninstalled from the Kintone environment.
         *      */
        get: operations["getPluginsRequired"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a preview App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        post: operations["postPreviewApp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the App permissions of an App.
         *      */
        get: operations["getPreviewAppAcl"];
        /** @description Updates the App permissions of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *      */
        put: operations["putPreviewAppAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/actions.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Action Settings of the App.
         *      */
        get: operations["getPreviewAppActions"];
        /** @description Updates the Action settings of the App.
         *     This API updates the pre-live settings. After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppActions"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/adminNotes.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets notes for app administrators and their settings.
         *      */
        get: operations["getPreviewAppAdminNotes"];
        /** @description Updates the notes for App administrators and their settings.
         *      */
        put: operations["putPreviewAppAdminNotes"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/customize.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the JavaScript and CSS Customization settings of an App.
         *      */
        get: operations["getPreviewAppCustomize"];
        /** @description Updates the JavaScript and CSS Customization settings of an App.
         *     This API updates the pre-live settings. After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppCustomize"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/deploy.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the deployment status of the App settings for multiple Apps.
         *      */
        get: operations["getPreviewAppDeploy"];
        put?: never;
        /** @description Updates the settings of a pre-live App to the live App.
         *     Using this API gives the same results as when users click on "Update App" or "Discard Changes" on the App's settings page.
         *     If multiple apps are specified in this API, and one of the updates to an App fails, all of the specified Apps will rollback to the state before this API was run.
         *     If the record/field permissions of Apps are changed, the updated settings will be applied to the concerned records/fields sequentially, within each App.
         *      */
        post: operations["deployApp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/form/fields.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of fields and field settings of an App.
         *      */
        get: operations["getPreviewAppFormFields"];
        /** @description Updates the field settings of fields in a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppFormFields"];
        /** @description Adds fields to a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        post: operations["postPreviewAppFormFields"];
        /** @description Deletes fields from a form of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        delete: operations["deletePreviewAppFormFields"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/form/layout.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the field layout info of a form in an App.
         *      */
        get: operations["getPreviewAppFormLayout"];
        /** @description Updates the field layout info of a form in an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppFormLayout"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/notifications/general.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the General Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsGeneral"];
        /** @description Updates the General Notification settings of the App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsGeneral"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/notifications/perRecord.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Per Record Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsPerRecord"];
        /** @description Updates the Per Record Notification settings of the App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsPerRecord"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/notifications/reminder.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Reminder Notification settings of the App.
         *      */
        get: operations["getPreviewAppNotificationsReminder"];
        /** @description Updates the Reminder Notification settings of the App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppNotificationsReminder"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/plugins.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Plug-ins added to an App.
         *      */
        get: operations["getPreviewAppPlugins"];
        put?: never;
        /** @description Adds Plug-ins to an App.
         *      */
        post: operations["postPreviewAppPlugins"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/reports.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Graph settings of the App.
         *      */
        get: operations["getPreviewAppReports"];
        /** @description Updates the Graph settings of the App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App:
         *      */
        put: operations["putPreviewAppReports"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/settings.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the description, name, icon, revision and color theme of an App.
         *      */
        get: operations["getPreviewAppSettings"];
        /** @description Updates the description, name, icon, revision and color theme of an App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App:
         *      */
        put: operations["putPreviewAppSettings"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the process management settings of an App.
         *      */
        get: operations["getPreviewAppStatus"];
        /** @description Updates the process management settings of an App.
         *
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/app/views.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the View settings of an App.
         *      */
        get: operations["getPreviewAppViews"];
        /** @description Updates the View settings of an App.
         *     This API updates the pre-live settings.
         *     After using this API, use the Deploy App Settings API to deploy the settings to the live App.
         *      */
        put: operations["putPreviewAppViews"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/field/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Field permission settings of an App.
         *      */
        get: operations["getPreviewFieldAcl"];
        /** @description Updates the Field permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *
         *     When the permissions settings of fields in an App are changed, the updated settings will be applied to the concerned fields sequentially in order of completion.
         *      */
        put: operations["putPreviewFieldAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/form.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves the form details of an App.
         *      */
        get: operations["getPreviewForm"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/preview/record/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Record permission settings of an App.
         *      */
        get: operations["getPreviewRecordAcl"];
        /** @description Updates the Record permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *     When the permissions settings of records in an App are changed, the updated settings will be applied to the concerned records sequentially in order of completion.
         *      */
        put: operations["putPreviewRecordAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details of 1 record from an App by specifying the App ID and Record ID.
         *      */
        get: operations["getRecord"];
        /** @description Updates details of 1 record in an App by specifying its record number, or a different unique key.
         *      */
        put: operations["putRecord"];
        /** @description Adds 1 record to an App.
         *      */
        post: operations["postRecord"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record/acl.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the Record permission settings of an App.
         *      */
        get: operations["getRecordAcl"];
        /** @description Updates the Record permission settings of an App.
         *     All settings of the pre-live App (not just the permission settings) will be deployed to the live App by using this API.
         *     When the permissions settings of records in an App are changed, the updated settings will be applied to the concerned records sequentially in order of completion.
         *      */
        put: operations["putRecordAcl"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record/assignees.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Assignees of a Record status, that was set with Process Management.
         *      */
        put: operations["putRecordAssignees"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record/comment.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Add a comment to a record in an app.
         *      */
        post: operations["postRecordComment"];
        /** @description Delete a comment in a record in an app.
         *      */
        delete: operations["deleteRecordComment"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record/comments.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves multiple comments from a record in an app.
         *      */
        get: operations["getRecordComments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/record/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Status of a record of an App, that was set with Process Management.
         *      */
        put: operations["putRecordStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/records.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details of multiple records from an App by specifying the App ID and a query string.
         *      */
        get: operations["getRecords"];
        /** @description Updates details of multiple records in an App, by specifying their record numbers, or their unique keys.
         *     If the upsert parameter is set to true, it also adds new records to the App.
         *      */
        put: operations["putRecords"];
        /** @description Adds multiple records to an App.
         *      */
        post: operations["postRecords"];
        /** @description Deletes multiple records in an app.
         *      */
        delete: operations["deleteRecords"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/records/acl/evaluate.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Evaluates the API user's permissions for records and fields within an App.
         *      */
        get: operations["getRecordsAclEvaluate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/records/cursor.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves multiple records from an App by specifying the cursor ID.
         *      */
        get: operations["getRecordsCursor"];
        put?: never;
        /** @description Adds a cursor so that large amount of records can be obtained from an App.
         *      */
        post: operations["postRecordsCursor"];
        /** @description Deletes a cursor by specifying the cursor ID.
         *      */
        delete: operations["deleteRecordsCursor"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/records/status.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Statuses of Multiple records of an App, that was set with Process Management.
         *      */
        put: operations["putRecordsStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets information of a Space.
         *      */
        get: operations["getSpace"];
        /** @description Updates the settings of a Space.
         *      */
        put: operations["putSpace"];
        post?: never;
        /** @description Deletes a Space.
         *      */
        delete: operations["deleteSpace"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space/body.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the body of a Space.
         *      */
        put: operations["putSpaceBody"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space/guests.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the Guest Members of a Space.
         *      */
        put: operations["putSpaceGuests"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space/members.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the list of Space Members of a Space.
         *      */
        get: operations["getSpaceMembers"];
        /** @description Updates the Members of a Space.
         *      */
        put: operations["putSpaceMembers"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space/thread.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates a Thread of a Space.
         *      */
        put: operations["putSpaceThread"];
        /** @description Adds a Thread in a Space.
         *      */
        post: operations["postSpaceThread"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/space/thread/comment.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Adds a comment to a Thread of a Space.
         *      */
        post: operations["postSpaceThreadComment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/spaces/statistics.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSpacesStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/k/v1/template/space.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a Space from a Space template.
         *      */
        post: operations["postTemplateSpace"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppAclGetRight: {
            /** @description The App management permission of the entity.
             *     Entities with this permission are able to access and edit the App's settings.
             *     - true: The App's settings are accessible.
             *     - false: The App's settings are not accessible.
             *      */
            appEditable?: boolean;
            /** @description  An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - CREATOR: The creator of the App
                 *
                 * @enum {string}
                 */
                type?: "USER" | "ORGANIZATION" | "GROUP" | "CREATOR";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
            /** @description The record add permission of the entity
             *     - true: Records can be added.
             *     - false: Records cannot be added.
             *      */
            recordAddable?: boolean;
            /** @description The record delete permission of the entity
             *     - true: Records are deletable.
             *     - false: Records are not deletable.
             *      */
            recordDeletable?: boolean;
            /** @description The record edit permission of the entity
             *     - true: Records are editable.
             *     - false: Records are not editable.
             *      */
            recordEditable?: boolean;
            /** @description The record export permission of the entity
             *     - true: Records are exportable.
             *     - false: Records are not exportable.
             *      */
            recordExportable?: boolean;
            /** @description The record import permission of the entity
             *     - true: Records are importable.
             *     - false: Records are not importable.
             *      */
            recordImportable?: boolean;
            /** @description The record view permission of the entity.
             *     - true: Records are viewable.
             *     - false: Records are not viewable.
             *      */
            recordViewable?: boolean;
        };
        AppAclPutRight: {
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be accessible.
             *     - false: The App's settings will not be accessible.
             *
             *     If ignored, this value is false.
             *
             */
            appEditable?: boolean;
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission will be granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - CREATOR: The creator of the App
                 *
                 * @enum {string}
                 */
                type: "USER" | "ORGANIZATION" | "GROUP" | "CREATOR";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permission is granted to. This parameter is available if "ORGANIZATION" is specified for the rights[].entity.type parameter.
             *     - true: Permissions will be inherited.
             *     - false: Permissions will not be inherited.
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be added.
             *     - false: The App's settings will not be added.
             *
             *     If ignored, this value is false.
             *
             */
            recordAddable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be deletable.
             *     - false: The App's settings will not be deletable.
             *
             *     If ignored, this value is false.
             *
             */
            recordDeletable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be editable.
             *     - false: The App's settings will not be editable.
             *
             *     If ignored, this value is false.
             *
             */
            recordEditable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be exportable.
             *     - false: The App's settings will not be exportable.
             *
             *     If ignored, this value is false.
             *
             */
            recordExportable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be importable.
             *     - false: The App's settings will not be importable.
             *
             *     If ignored, this value is false.
             *
             */
            recordImportable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be viewable.
             *     - false: The App's settings will not be viewable.
             *
             *     If ignored, this value is false.
             *
             */
            recordViewable?: boolean;
        };
        AppActionsGetAction: {
            /** @description An object containing the Target option that specifies the destination app where data is to be copied.
             *      */
            destApp?: {
                /**
                 * Format: long
                 * @description The App ID of the copy destination app.
                 *
                 */
                app?: number;
                /** @description The App Code of the copy destination app.
                 *     An empty string is returned if an App Code is not set in the destination app's settings.
                 *      */
                code?: string;
            };
            /** @description An array of objects containing the entities the Action is granted to. This reflects the Available To options.
             *     Inactive users and deleted users/departments/groups will not be included in the response.
             *      */
            entities?: components["schemas"]["AppActionsGetEntity"][];
            /**
             * Format: long
             * @description The ID of the Action.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the Action, starting from 0.
             *
             */
            index?: number;
            /** @description An array of objects containing the Field Mappings options.
             *     An empty array is returned if the Field Mappings options are not configured.
             *      */
            mappings?: (components["schemas"]["AppActionsGetUrlMapping"] | components["schemas"]["AppActionsGetFieldMapping"])[];
            /** @description The name of the Action.
             *     When the lang request parameter is specified, the Action's name in that language will be returned.
             *      */
            name?: string;
        };
        AppActionsGetEntity: {
            /** @description The code of the entity the Action is granted to.
             *      For guest users, the login name is preceded by `guest/`.
             *      */
            code?: string;
            /**
             * @description The type of the entity the Action is granted to.
             *      - USER: User
             *      - GROUP: Group
             *      - ORGANIZATION: Department
             *
             * @enum {string}
             */
            type?: "USER" | "GROUP" | "ORGANIZATION";
        };
        AppActionsGetFieldMapping: {
            /** @description The field code of the field specified in the Field Mappings options as the destination.
             *      */
            destField?: string;
            /** @description The field code of the field specified in the Field Mappings options as the source.
             *
             *     This parameter is returned only if the actions.{actionname}.mappings[].srcType parameter is set to FIELD.
             *      */
            srcField?: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source app's field
             *     - RECORD_URL: The Record's permalink
             *
             * @enum {string}
             */
            srcType?: "FIELD";
        };
        AppActionsGetUrlMapping: {
            /** @description The field code of the field specified in the Field Mappings options as the destination.
             *      */
            destField?: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source app's field
             *     - RECORD_URL: The Record's permalink
             *
             * @enum {string}
             */
            srcType?: "RECORD_URL";
        };
        AppCustomizeGetFileContentForm: {
            /** @description  An Object containing data of an uploaded file.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
        };
        AppCustomizeGetUrlContentForm: {
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
            /** @description The URL of the file.
             *      */
            url: string;
        };
        AppFormFieldsGetCalcFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * @description The display format for fields with calculations:
             *     - NUMBER: Number (1000)
             *     - NUMBER_DIGIT: Number with thousands separator (1,000)
             *     - DATETIME: Date & time (Aug 06, 2012 2:03 PM)
             *     - DATE: Date (Aug 06, 2012)
             *     - TIME: Time (2:03 PM)
             *     - HOUR_MINUTE: Hours & minutes (29 hours 47 minutes)
             *     - DAY_HOUR_MINUTE: Days & hours & minutes (1 day 5 hours 47 minutes)
             *
             * @enum {string}
             */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /**
             * Format: boolean
             * @description The "Hide formula" settings for the field.
             *     - true: The formula will be hidden.
             *     - false: The formula will be displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        AppFormFieldsGetCategoryFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetDateFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        AppFormFieldsGetDatetimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        AppFormFieldsGetDecimalFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /**
             * Format: boolean
             * @description The "Use thousands separators" option.
             *     - true: Thousands separators will be displayed for the number.
             *     - false: Thousands separators will not be displayed for the number.
             *
             */
            digit?: boolean;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of characters for the field.
             *
             */
            maxValue?: number;
            /**
             * Format: long
             * @description The minimum number of characters for the field.
             *
             */
            minValue?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        AppFormFieldsGetEditorFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetEntityForm: {
            /** @description The code of the user/group/department.Required, if the entities parameter is specified.
             *      */
            code: string;
            /**
             * @description The entity type.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             *     Required, if the entities parameter is specified.
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP" | "FUNCTION";
        };
        AppFormFieldsGetFieldMappingForm: {
            /** @description The field code of the field selected for Field in this app.
             *      */
            field?: string;
            /** @description The field code of the field selected for Field in datasource app.
             *      */
            relatedField?: string;
        };
        AppFormFieldsGetFileFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * Format: long
             * @description The size of the image thumbnail in pixels.
             *     Specify one of the following: 50, 150, 250, 500
             *
             */
            thumbnailSize?: number;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetGroupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Show fields in this group" option.
             *     - true: The Group field will be displayed open by default.
             *     - false: The Group field will be displayed closed by default.
             *
             */
            openGroup?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetGroupSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetLinkFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The Link type settings for the field.
             *     - WEB: URL
             *     - CALL: Telephone number
             *     - MAIL: E-mail address
             *
             * @enum {string}
             */
            protocol?: "WEB" | "CALL" | "MAIL";
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        AppFormFieldsGetLookupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /** @description An object containing the settings of the Lookup field.
             *      */
            lookup?: {
                /** @description An object containing the settings of the Lookup field.
                 *      */
                fieldMappings?: components["schemas"]["AppFormFieldsGetFieldMappingForm"][];
                /** @description An object containing the settings of the Lookup field.
                 *      */
                filterCond?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                lookupPickerFields?: string[];
                /** @description An object containing the settings of the related App of the Lookup field.
                 *     Required, if setting the `lookup` parameter.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /** @description An object containing the settings of the Lookup field.
                 *      */
                relatedKeyField?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                sort?: string;
            };
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetModifiedAtFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetModifierFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetMultipleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["AppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetMultipleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetMultipleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["AppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetOptionForm: {
            /**
             * Format: long
             * @description The display order (ascending) of the option, when listed with the other options.
             *
             */
            index: number;
            /** @description The name of the option.
             *      */
            label?: string;
        };
        AppFormFieldsGetOrganizationSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetRecordIdFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetReferenceTableFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object containing the settings of the Related Records field.
             *     `null` is returned if there are no view permissions for the Datasource App.
             *      */
            referenceTable?: {
                /** @description An object containing data of the Fetch Criteria setting.
                 *      */
                condition?: {
                    /** @description The field code of the field selected for Field in this app.
                     *      */
                    field?: string;
                    /** @description The field code of the field selected for Field in datasource app.
                     *      */
                    relatedField?: string;
                };
                /** @description A list of field codes of fields specified in the Datasource App Fields to Display setting.
                 *      */
                displayFields?: string[];
                /** @description The Filter setting, in a query format.
                 *      */
                filterCond?: string;
                /** @description An object containing data of the Datasource App setting.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /**
                 * Format: long
                 * @description The Max Records to Display at a Time setting.
                 *
                 */
                size?: number;
                /** @description The Display Order setting, in a query format.
                 *      */
                sort?: string;
            };
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetSingleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["AppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetSingleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * Format: boolean
             * @description The Hide formula settings for the field.
             *     - true: The formula is hidden.
             *     - false: The formula is displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        AppFormFieldsGetSingleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["AppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetStatusAssigneeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetStatusFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetTableForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description An object containing data of fields in a table.
             *     The parameters of this object are the same as the properties parameter.
             *      */
            fields?: {
                [key: string]: components["schemas"]["AppFormFieldsGetCalcFieldForm"] | components["schemas"]["AppFormFieldsGetCategoryFieldForm"] | components["schemas"]["AppFormFieldsGetDateFieldForm"] | components["schemas"]["AppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["AppFormFieldsGetDecimalFieldForm"] | components["schemas"]["AppFormFieldsGetEditorFieldForm"] | components["schemas"]["AppFormFieldsGetFileFieldForm"] | components["schemas"]["AppFormFieldsGetGroupFieldForm"] | components["schemas"]["AppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["AppFormFieldsGetLinkFieldForm"] | components["schemas"]["AppFormFieldsGetLookupFieldForm"] | components["schemas"]["AppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["AppFormFieldsGetModifierFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["AppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["AppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["AppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["AppFormFieldsGetStatusFieldForm"] | components["schemas"]["AppFormFieldsGetTableForm"] | components["schemas"]["AppFormFieldsGetTimeFieldForm"] | components["schemas"]["AppFormFieldsGetUserSelectFieldForm"];
            };
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetTimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormFieldsGetUserSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["AppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        AppFormLayoutGetCalcField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetCreatedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetCreatorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetDateField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetDatetimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetDecimalField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetEditorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetFileField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetGroupRow: {
            /** @description The field code of the Table or Group field.
             *     This parameter will not be returned for other row types.
             *      */
            code: string;
            /** @description A list of field layouts for each row inside a Group field.
             *      */
            layout?: components["schemas"]["AppFormLayoutGetRow"][];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        AppFormLayoutGetHrField: {
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetLabelField: {
            /** @description The text set in the Label field.
             *     Only returned for Label fields.
             *      */
            label?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetLinkField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetLookupField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetModifiedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetModifierField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetMultipleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetMultipleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetMultipleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetRecordIdField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetReferenceTableField: {
            /** @description The field code.
             *      */
            code: string;
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetRow: {
            /** @description A list of fields in the row.
             *      */
            fields: (components["schemas"]["AppFormLayoutGetLabelField"] | components["schemas"]["AppFormLayoutGetSingleLineTextField"] | components["schemas"]["AppFormLayoutGetMultipleLineTextField"] | components["schemas"]["AppFormLayoutGetEditorField"] | components["schemas"]["AppFormLayoutGetDecimalField"] | components["schemas"]["AppFormLayoutGetCalcField"] | components["schemas"]["AppFormLayoutGetMultipleCheckField"] | components["schemas"]["AppFormLayoutGetSingleCheckField"] | components["schemas"]["AppFormLayoutGetSingleSelectField"] | components["schemas"]["AppFormLayoutGetMultipleSelectField"] | components["schemas"]["AppFormLayoutGetFileField"] | components["schemas"]["AppFormLayoutGetDateField"] | components["schemas"]["AppFormLayoutGetDatetimeField"] | components["schemas"]["AppFormLayoutGetTimeField"] | components["schemas"]["AppFormLayoutGetUserSelectField"] | components["schemas"]["AppFormLayoutGetLinkField"] | components["schemas"]["AppFormLayoutGetLookupField"] | components["schemas"]["AppFormLayoutGetReferenceTableField"] | components["schemas"]["AppFormLayoutGetSpacerField"] | components["schemas"]["AppFormLayoutGetHrField"] | components["schemas"]["AppFormLayoutGetRecordIdField"] | components["schemas"]["AppFormLayoutGetCreatorField"] | components["schemas"]["AppFormLayoutGetCreatedAtField"] | components["schemas"]["AppFormLayoutGetModifierField"] | components["schemas"]["AppFormLayoutGetModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        AppFormLayoutGetSingleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetSingleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetSingleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetSpacerField: {
            /** @description The element ID of the Space field.
             *     Only returned for Space fields.
             *      */
            elementId?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, including the height of the field name.
                 *
                 */
                height?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetSubtableRow: {
            code: string;
            fields: (components["schemas"]["AppFormLayoutGetLabelField"] | components["schemas"]["AppFormLayoutGetSingleLineTextField"] | components["schemas"]["AppFormLayoutGetMultipleLineTextField"] | components["schemas"]["AppFormLayoutGetEditorField"] | components["schemas"]["AppFormLayoutGetDecimalField"] | components["schemas"]["AppFormLayoutGetCalcField"] | components["schemas"]["AppFormLayoutGetMultipleCheckField"] | components["schemas"]["AppFormLayoutGetSingleCheckField"] | components["schemas"]["AppFormLayoutGetSingleSelectField"] | components["schemas"]["AppFormLayoutGetMultipleSelectField"] | components["schemas"]["AppFormLayoutGetFileField"] | components["schemas"]["AppFormLayoutGetDateField"] | components["schemas"]["AppFormLayoutGetDatetimeField"] | components["schemas"]["AppFormLayoutGetTimeField"] | components["schemas"]["AppFormLayoutGetUserSelectField"] | components["schemas"]["AppFormLayoutGetLinkField"] | components["schemas"]["AppFormLayoutGetLookupField"] | components["schemas"]["AppFormLayoutGetReferenceTableField"] | components["schemas"]["AppFormLayoutGetSpacerField"] | components["schemas"]["AppFormLayoutGetHrField"] | components["schemas"]["AppFormLayoutGetRecordIdField"] | components["schemas"]["AppFormLayoutGetCreatorField"] | components["schemas"]["AppFormLayoutGetCreatedAtField"] | components["schemas"]["AppFormLayoutGetModifierField"] | components["schemas"]["AppFormLayoutGetModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        AppFormLayoutGetTimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppFormLayoutGetUserSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        AppNotificationsGeneralGetNotification: {
            /** @description Option to notify the entity when a comment is posted.
             *     - true: Notify when a comment is posted
             *     - false: Do not notify when a comment is posted
             *      */
            commentAdded?: boolean;
            /** @description An object containing data of the entity the General Notification settings are configured to.
             *      */
            entity?: {
                /** @description The code of the entity the General Notification settings are configured to.
                 *     The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department
                 *
                 *     For guest users, the login name is preceded by `guest/`.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the General Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description Option to notify the entity when a file is imported.
             *     - true: Notify when a file is imported
             *     - false: Do not notify when a file is imported
             *      */
            fileImported?: boolean;
            /** @description The "Include affiliated departments" setting of the Department.
             *     Will always return `false` unless the notifications[].entity.type is set to `ORGANIZATION` or `FIELD_ENTITY` for a Department Selection Field.
             *     - true: Affiliated departments do inherit the General Notification settings
             *     - false: Affiliated departments do not inherit the General Notification settings
             *      */
            includeSubs?: boolean;
            /** @description Option to notify the entity when a record is added.
             *     - true: Notify when a record is added
             *     - false: Do not notify when a record is added
             *      */
            recordAdded?: boolean;
            /** @description Option to notify the entity when a record is edited.
             *     - true: Notify when a record is edited
             *     - false: Do not notify when a record is edited
             *      */
            recordEdited?: boolean;
            /** @description Option to notify the entity when a status is changed.
             *     - true: Notify when a status is changed
             *     - false: Do not notify when a status is changed
             *      */
            statusChanged?: boolean;
        };
        AppNotificationsPerRecordGetNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the recipients of the Per Record Notification.
             *      */
            targets?: components["schemas"]["AppNotificationsPerRecordGetTarget"][];
            /** @description The notification subject that is saved under Summary.
             *      */
            title?: string;
        };
        AppNotificationsPerRecordGetTarget: {
            /** @description An object containing entity details per recipient of the Per Record Notification.
             *      */
            entity?: {
                /** @description The code of the entity the Per Record Notification settings are configured to. The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department
                 *
                 *     For guest users, the login name is preceded by `guest/`.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the Per Record Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description An array of objects containing the recipients of the Per Record Notification.
             *      */
            includeSubs?: boolean;
        };
        AppNotificationsReminderGetNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the recipients of the Reminder Notification.
             *      */
            targets?: components["schemas"]["AppNotificationsReminderGetTarget"][];
            timing?: components["schemas"]["AppNotificationsReminderGetTimingRelative"] | components["schemas"]["AppNotificationsReminderGetTimingAbsolute"];
            /** @description The notification subject that is saved under Summary.
             *      */
            title?: string;
        };
        AppNotificationsReminderGetTarget: {
            /** @description An object containing entity details per recipient of the Reminder Notification.
             *      */
            entity?: {
                /** @description The code of the entity the Reminder Notification settings are configured to.
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department. For guest users, the login name is preceded by guest/.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the Reminder Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The Include affiliated departments setting of the Department.
             *     Will always return false unless the notifications[].targets[].entity.type is set to ORGANIZATION or FIELD_ENTITY for a Department Selection Field.
             *     - true: Affiliated departments do inherit the Reminder Notification settings
             *     - false: Affiliated departments do not inherit the Reminder Notification settings
             *      */
            includeSubs?: boolean;
        };
        AppNotificationsReminderGetTimingAbsolute: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     A negative value indicates the number of days before the notifications[].timing.code date/datetime.
             *
             */
            daysLater?: number;
            /** @description The time when the Reminder notification is sent.
             *     The parameter is returned if the notifications[].timing.code parameter is set to a date field or the At time option is configured.
             *      */
            time?: string;
        };
        AppNotificationsReminderGetTimingRelative: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     A negative value indicates the number of days before the notifications[].timing.code date/datetime.
             *
             */
            daysLater?: number;
            /**
             * Format: long
             * @description The number of hours after the notifications[].timing.code datetime, shifted by daysLater when the Reminder notification is sent.
             *     A negative value indicates the number of hours before the notifications[].timing.code datetime, shifted by daysLater.
             *     The parameter is returned only if the notifications[].timing.code parameter is set to a Date and Time field and the When hours before/after option is configured (instead of the At time option).
             *
             */
            hoursLater?: number;
        };
        AppPluginsGetPluginForm: {
            /** @description The status of the plugin.
             *     `true` for active plugins, and `false` for inactive plugins.
             *      */
            enabled?: boolean;
            /** @description The Plugin ID.
             *      */
            id?: string;
            /** @description The name of the Plugin.
             *      */
            name?: string;
        };
        AppReportsGetFieldAggregation: {
            /** @description The field code of the field used in the Function option.
             *     This parameter is not returned if the reports.{graphname}.aggregations[].type is set to COUNT.
             *      */
            code?: string;
            /**
             * @description The type of the Function option.
             *     - COUNT: Number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             * @enum {string}
             */
            type?: "SUM" | "AVERAGE" | "MAX" | "MIN";
        };
        AppReportsGetGroup: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
        };
        AppReportsGetGroupDate: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY";
        };
        AppReportsGetGroupDateTime: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR" | "MINUTE";
        };
        AppReportsGetGroupTime: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "HOUR" | "MINUTE";
        };
        AppReportsGetPeriodDay: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "DAY";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        AppReportsGetPeriodHour: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "HOUR";
            /**
             * Format: long
             * @description The minute when the hourly Periodic Report will be generated.
             *     The minute will be returned as 0, 10, 20, 30, 40 or 50.
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to HOUR.
             *
             */
            minute?: number;
        };
        AppReportsGetPeriodMonth: {
            /** @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth?: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "MONTH";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        AppReportsGetPeriodQuarter: {
            /** @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth?: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "QUARTER";
            /**
             * @description The months when the quarterly Periodic Report will be generated.
             *     - JAN_APR_JUL_OCT: January, April, July, October
             *     - FEB_MAY_AUG_NOV: February, May, August, November
             *     - MAR_JUN_SEP_DEC: March, June, September, December
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER.
             *
             * @enum {string}
             */
            pattern?: "JAN_APR_JUL_OCT" | "FEB_MAY_AUG_NOV" | "MAR_JUN_SEP_DEC";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        AppReportsGetPeriodWeek: {
            /**
             * @description The day of the week when the Periodic Report will be generated.
             *     - SUNDAY
             *     - MONDAY
             *     - TUESDAY
             *     - WEDNESDAY
             *     - THURSDAY
             *     - FRIDAY
             *     - SATURDAY
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to WEEK.
             *
             * @enum {string}
             */
            dayOfWeek?: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "WEEK";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        AppReportsGetPeriodYear: {
            /**
             * Format: long
             * @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *
             */
            dayOfMonth?: number;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "YEAR";
            /**
             * Format: long
             * @description The month when the Periodic Report will be generated.
             *     The month is returned as an integer, ranging from 1 (January) to 12 (December).
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR.
             *
             */
            month?: number;
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        AppReportsGetRecordAggregation: {
            /**
             * @description The type of the Function option.
             *     - COUNT: Number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             * @enum {string}
             */
            type?: "COUNT";
        };
        AppReportsGetReport: {
            /** @description An array of objects containing the Function options.
             *      */
            aggregations?: (components["schemas"]["AppReportsGetRecordAggregation"] | components["schemas"]["AppReportsGetFieldAggregation"])[];
            /**
             * @description The chart type of the graph. For more information, refer to the following article:
             *     Chart Types and Their Usage (External link)
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             * @enum {string}
             */
            chartType?: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the Filter option.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the Group by options.
             *     The order of the objects are in the order of Level 1, Level 2, and Level 3.
             *     Levels that are not set will not be included in the array.
             *
             *     This parameter is returned only if the Group by option is configured.
             *      */
            groups?: (components["schemas"]["AppReportsGetGroup"] | components["schemas"]["AppReportsGetGroupDateTime"] | components["schemas"]["AppReportsGetGroupDate"] | components["schemas"]["AppReportsGetGroupTime"])[];
            /**
             * Format: long
             * @description The ID of the graph.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the graphs, starting from 0.
             *
             */
            index?: number;
            /** @description The name of the graph.
             *     The maximum limit is 64 characters.
             *     When the lang request parameter is specified, the graph's name in that language will be returned.
             *      */
            name?: string;
            /** @description An objects containing the Periodic Reports options.
             *     If the Generate reports periodically option have never been configured, null will be returned.
             *      */
            periodicReport?: {
                /** @description The activation status of the Periodic Reports option.
                 *     - true: Active
                 *     - false: Inactive
                 *      */
                active?: boolean;
                period?: components["schemas"]["AppReportsGetPeriodYear"] | components["schemas"]["AppReportsGetPeriodQuarter"] | components["schemas"]["AppReportsGetPeriodMonth"] | components["schemas"]["AppReportsGetPeriodWeek"] | components["schemas"]["AppReportsGetPeriodDay"] | components["schemas"]["AppReportsGetPeriodHour"];
            };
            /** @description An array of objects containing the Sort by options.
             *      */
            sorts?: components["schemas"]["AppReportsGetSort"][];
        };
        AppReportsGetReportWithChartMode: {
            /** @description An array of objects containing the Function options.
             *      */
            aggregations?: (components["schemas"]["AppReportsGetRecordAggregation"] | components["schemas"]["AppReportsGetFieldAggregation"])[];
            /**
             * @description The display mode of the graph.
             *     - NORMAL: Clustered graph or Non-stacked graph
             *     - STACKED: Stacked graph
             *     - PERCENTAGE: 100% stacked graph
             *
             *     If the reports.{graphname}.chartType parameter is set to BAR or COLUMN, then NORMAL refers to Clustered graph display mode.
             *     If the reports.{graphname}.chartType parameter is set to AREA or SPLINE\_AREA, then NORMAL refers to Non-stacked graph display mode.
             *     This parameter is returned only if the reports.{graphname}.chartType parameter is set to BAR, COLUMN, AREA, or SPLINE\_AREA.
             *
             * @enum {string}
             */
            chartMode?: "NORMAL" | "STACKED" | "PERCENTAGE";
            /**
             * @description The chart type of the graph. For more information, refer to the following article:
             *     Chart Types and Their Usage (External link)
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             * @enum {string}
             */
            chartType?: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the Filter option.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the Group by options.
             *     The order of the objects are in the order of Level 1, Level 2, and Level 3.
             *     Levels that are not set will not be included in the array.
             *
             *     This parameter is returned only if the Group by option is configured.
             *      */
            groups?: (components["schemas"]["AppReportsGetGroup"] | components["schemas"]["AppReportsGetGroupDateTime"] | components["schemas"]["AppReportsGetGroupDate"] | components["schemas"]["AppReportsGetGroupTime"])[];
            /**
             * Format: long
             * @description The ID of the graph.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the graphs, starting from 0.
             *
             */
            index?: number;
            /** @description The name of the graph.
             *     The maximum limit is 64 characters.
             *     When the lang request parameter is specified, the graph's name in that language will be returned.
             *      */
            name?: string;
            /** @description An objects containing the Periodic Reports options.
             *     If the Generate reports periodically option have never been configured, null will be returned.
             *      */
            periodicReport?: {
                /** @description The activation status of the Periodic Reports option.
                 *     - true: Active
                 *     - false: Inactive
                 *      */
                active?: boolean;
                period?: components["schemas"]["AppReportsGetPeriodYear"] | components["schemas"]["AppReportsGetPeriodQuarter"] | components["schemas"]["AppReportsGetPeriodMonth"] | components["schemas"]["AppReportsGetPeriodWeek"] | components["schemas"]["AppReportsGetPeriodDay"] | components["schemas"]["AppReportsGetPeriodHour"];
            };
            /** @description An array of objects containing the Sort by options.
             *      */
            sorts?: components["schemas"]["AppReportsGetSort"][];
        };
        AppReportsGetSort: {
            /**
             * @description How the graph is sorted.
             *     - TOTAL: Total
             *     - GROUP1: Level 1
             *     - GROUP2: Level 2
             *     - GROUP3: Level 3
             *
             * @enum {string}
             */
            by?: "TOTAL" | "GROUP1" | "GROUP2" | "GROUP3";
            /**
             * @description The order of sorting.
             *     - ASC: Ascending order
             *     - DESC: Descending order
             *
             * @enum {string}
             */
            order?: "ASC" | "DESC";
        };
        AppSettingsGetIconFileForm: {
            /** @description An object containing data of uploaded icon files.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        AppSettingsGetIconPresetForm: {
            /**
             * @description The key identifier of the icon.
             *
             * @enum {string}
             */
            key: "APP1" | "APP2" | "APP3" | "APP4" | "APP5" | "APP6" | "APP7" | "APP8" | "APP9" | "APP10" | "APP11" | "APP12" | "APP13" | "APP14" | "APP15" | "APP16" | "APP17" | "APP18" | "APP19" | "APP20" | "APP21" | "APP22" | "APP23" | "APP24" | "APP25" | "APP26" | "APP27" | "APP28" | "APP29" | "APP30" | "APP31" | "APP32" | "APP33" | "APP34" | "APP35" | "APP36" | "APP37" | "APP38" | "APP39" | "APP40" | "APP41" | "APP42" | "APP43" | "APP44" | "APP45" | "APP46" | "APP47" | "APP48" | "APP49" | "APP50" | "APP51" | "APP52" | "APP53" | "APP54" | "APP55" | "APP56" | "APP57" | "APP58" | "APP59" | "APP60" | "APP61" | "APP62" | "APP63" | "APP64" | "APP65" | "APP66" | "APP67" | "APP68" | "APP69" | "APP70" | "APP71" | "APP72" | "APP73" | "APP74" | "APP75" | "APP76" | "APP77" | "APP78" | "APP79" | "APP80" | "APP81" | "APP82" | "APP83" | "APP84" | "APP85" | "APP86" | "APP87" | "APP88" | "APP89" | "APP90";
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        AppSettingsGetNumberPrecision: {
            /**
             * Format: number
             * @description The Number of Decimal Places to Round setting.
             *
             */
            decimalPlaces?: string;
            /**
             * Format: number
             * @description The Total Number of Digits setting.
             *
             */
            digits?: string;
            /**
             * @description The Rounding setting
             *     - HALF_EVEN: Round to nearest even number
             *     - UP: Round up
             *     - DOWN: Round down
             *
             * @enum {string}
             */
            roundingMode?: "HALF_EVEN" | "UP" | "DOWN";
        };
        AppSettingsGetTitleField: {
            /** @description The field code of the field used as the title of the record.
             *      */
            code?: string;
            /**
             * @description The option of The field to be used as the record title settings.
             *     - AUTO: The Set automatically option.
             *     - MANUAL: The Set manually option.
             *
             * @enum {string}
             */
            selectionMode: "AUTO" | "MANUAL";
        };
        AppStatusGetActionForm: {
            /** @description The branch criteria of the action.
             *      */
            filterCond?: string;
            /** @description The status before taking action.
             *      */
            from?: string;
            /** @description The Action name.
             *      */
            name?: string;
            /** @description The status after taking action.
             *      */
            to?: string;
        };
        AppStatusGetAssigneeEntityForm: {
            /** @description An object containing user data of the Assignees.
             *     Inactive users, deleted users/departments/groups and deleted custom fields will not be included in the response.
             *      */
            entity?: {
                /** @description The code of the Assignee.
                 *     The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - CREATOR: null
                 *     - CUSTOM_FIELD: The field code of the Custom Fields.
                 *
                 *     To specify guest space users, add the string such as, guest/ before the guest's log in name.
                 *      */
                code?: string;
                /**
                 * @description The entity type of the Assignee.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User/Group/Department selection field
                 *     - CREATOR: Created by field
                 *     - CUSTOM_FIELD: Custom Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY" | "CREATOR" | "CUSTOM_FIELD";
            };
            /** @description The Include affiliated departments settings of the department.
             *     - true: Affiliated departments are included as Assignees
             *     - false: Affiliated departments are not included as Assignees
             *      */
            includeSubs?: boolean;
        };
        AppStatusGetStateForm: {
            /** @description An object containing data of the Assignee settings.
             *      */
            assignee?: {
                /** @description An array listing data of the Assignees. They are listed in the same order as in the GUI.
                 *      */
                entities?: components["schemas"]["AppStatusGetAssigneeEntityForm"][];
                /**
                 * @description The Assignee List type of the Status.
                 *     - ONE: User chooses one assignee from the list to take action
                 *     - ALL: All assignees in the list must take action
                 *     - ANY: One assignee in the list must take action
                 *
                 *     The status with the lowest index will always return `ONE`.
                 *
                 * @enum {string}
                 */
                type?: "ONE" | "ALL" | "ANY";
            };
            /**
             * Format: long
             * @description The display order (ascending) of the Status, when listed with the other statuses.
             *
             */
            index?: number;
            /** @description The status name.
             *      */
            name?: string;
        };
        AppViewsGetBuiltinCalendarViewOutputForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description The field code set for the Date Field.
             *     Responded for Calendar Views.
             *      */
            date?: string;
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /** @description The field code set for the Title Field.
             *     Responded for Calendar Views.
             *      */
            title?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        AppViewsGetBuiltinListViewOutputForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description The list of field codes for the fields displayed in the View.
             *     Responded for List Views.
             *      */
            fields?: string[];
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        AppViewsGetCalendarViewOutputForm: {
            /** @description The field code set for the Date Field.
             *     Responded for Calendar Views.
             *      */
            date?: string;
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /** @description The field code set for the Title Field.
             *     Responded for Calendar Views.
             *      */
            title?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        AppViewsGetCustomViewOutputForm: {
            /**
             * @description The scope of where the view is displayed.
             *     - DESKTOP: Display only on desktop
             *     - ANY: Display on both desktop and mobile
             *
             * @enum {string}
             */
            device?: "DESKTOP" | "ANY";
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /** @description The HTML code set for the View.
             *        Responded for Custom Views.
             *      */
            html?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The pagination settings.
             *     Responded for Custom Views.
             *     - true: Enabled
             *     - false: Disabled
             *      */
            pager?: boolean;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        AppViewsGetListViewOutputForm: {
            /** @description The list of field codes for the fields displayed in the View.
             *     Responded for List Views.
             *      */
            fields?: string[];
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        AppsGetAppWithSpaceIdForm: {
            /**
             * Format: long
             * @description The App ID
             *
             */
            appId?: number;
            /** @description The App Code of the App.
             *     An empty string is returned if an App Code is not set in the App's settings.
             *      */
            code?: string;
            /**
             * Format: date-time
             * @description The date of when the App was created.
             *
             */
            createdAt?: string;
            /** @description The information of the user who created the App.
             *      */
            creator?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description The description of the App.
             *     If Localization settings are enabled, the localized name will be returned.
             *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
             *      */
            description?: string;
            /**
             * Format: date-time
             * @description The date of when the App was last modified.
             *
             */
            modifiedAt?: string;
            /** @description The information of the user who last updated the App.
             *      */
            modifier?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description The name of the App.
             *     If Localization settings are enabled, the localized name will be returned.
             *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
             *      */
            name?: string;
            /**
             * Format: long
             * @description If the App was created inside a Space,
             *     it will return the Space ID. If not, null is returned.
             *
             */
            spaceId?: number;
            /**
             * Format: long
             * @description If the App was created inside a Space,
             *     it will return the Thread ID of the Thread of the space it belongs to.
             *     Apps that are created inside Spaces using the GUI will be automatically allocated to the default Thread.
             *     If the App was not created in a Space, null is returned.
             *
             */
            threadId?: number;
        };
        AppsStatisticsGetAppForm: {
            /** @description The App Group.
             *      */
            appGroup?: string;
            /**
             * Format: date-time
             * @description The date the App was created.
             *
             */
            createdAt?: string;
            /** @description The information of the App creator.
             *      */
            creator?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description Whether the app is customized or not.
             *     Returns `true` if any of the following apply:
             *     - Customization by JavaScript / CSS
             *     - Customization by plugins
             *     - A list of "customization" formats exists
             *      */
            customized?: boolean;
            /**
             * Format: long
             * @description The number of daily API requests.
             *
             */
            dailyRequestCount?: number;
            /**
             * Format: long
             * @description The number of fields in the App.
             *
             */
            fieldCount?: number;
            /**
             * Format: long
             * @description The App ID
             *
             */
            id?: number;
            /**
             * Format: date-time
             * @description The date the App was last modified.
             *
             */
            modifiedAt?: string;
            /** @description The information of the user who last updated the App.
             *      */
            modifier?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description The name of the App.
             *     If Localization settings are enabled, the localized name will be returned.
             *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
             *      */
            name?: string;
            /**
             * Format: long
             * @description The number of records in the App.
             *
             */
            recordCount?: number;
            /**
             * Format: date-time
             * @description Date of last record added or edited.
             *     For apps that were created before the January 2021 update and have never had a record added or edited,
             *     the app creation date is returned.
             *
             */
            recordUpdatedAt?: string;
            /** @description The object that contains the information of the Space.
             *     If the App was not created inside a Space, null is returned.
             *      */
            space?: {
                /**
                 * Format: long
                 * @description The Space ID
                 *
                 */
                id?: number;
                /** @description The name of the Space.
                 *      */
                name?: string;
            };
            /**
             * @description The App status.
             *
             * @enum {string}
             */
            status?: "NOT_ACTIVATED" | "ACTIVATED" | "CHANGED";
            /**
             * Format: long
             * @description Total size of files attached in the Attachment field.
             *     Units are in Bytes.
             *
             */
            storageUsage?: number;
        };
        BulkRequestPostCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        BulkRequestPostDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        BulkRequestPostDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        BulkRequestPostDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        BulkRequestPostEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["BulkRequestPostSingleFileSimpleValue"][];
        };
        BulkRequestPostGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        BulkRequestPostGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["BulkRequestPostGroupEntitySimpleValue"][];
        };
        BulkRequestPostGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        BulkRequestPostLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        BulkRequestPostModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        BulkRequestPostMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        BulkRequestPostOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        BulkRequestPostOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["BulkRequestPostOrganizationEntitySimpleValue"][];
        };
        BulkRequestPostRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        BulkRequestPostRecordAssigneesPutForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description The user code(s) (log in names) of the Assignee(s). If empty, no users will be assigned. The maximum number of Assignees is 100.
             *      */
            assignees: string[];
            /**
             * Format: long
             * @description The record ID.
             *
             */
            id: number;
            /**
             * Format: long
             * @description The revision number of the record before updating the Assignees.
             *     If the specified revision is not the latest revision, the request will result in an error.
             *     The revision will not be checked if this parameter is ignored, or -1 is specified.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordAssigneesPutOutputForm: {
            /**
             * Format: long
             * @description The revision number of the record after updating the Assignees.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordBean: {
            /**
             * Format: long
             * @description The Record IDs of the updated/created Records.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The revision numbers of the Records.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordForm: {
            /**
             * Format: long
             * @description The Record ID of the record to be updated. Required, if `updateKey` will not be specified.
             *
             *     If `upsert` is set to `true`:
             *     - If the record exists, the record will be updated
             *     - If the record does not exist, it will be added as a new record. The specified ID will be ignored, and a new ID will be set to the new record.
             *
             */
            id?: number;
            /** @description Field codes and values are specified in this object.
             *     If ignored, the record will not be updated.
             *      */
            record?: {
                [key: string]: components["schemas"]["BulkRequestPostCalcSimpleValue"] | components["schemas"]["BulkRequestPostCategorySimpleValue"] | components["schemas"]["BulkRequestPostDateSimpleValue"] | components["schemas"]["BulkRequestPostDatetimeSimpleValue"] | components["schemas"]["BulkRequestPostDecimalSimpleValue"] | components["schemas"]["BulkRequestPostEditorSimpleValue"] | components["schemas"]["BulkRequestPostFileSimpleValue"] | components["schemas"]["BulkRequestPostGroupSimpleValue"] | components["schemas"]["BulkRequestPostLinkSimpleValue"] | components["schemas"]["BulkRequestPostModifiedAtSimpleValue"] | components["schemas"]["BulkRequestPostModifierSimpleValue"] | components["schemas"]["BulkRequestPostMultipleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostMultipleSelectSimpleValue"] | components["schemas"]["BulkRequestPostRecordIdSimpleValue"] | components["schemas"]["BulkRequestPostReferenceTableSimpleValue"] | components["schemas"]["BulkRequestPostSimpleTableValue"] | components["schemas"]["BulkRequestPostSingleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostSingleSelectSimpleValue"] | components["schemas"]["BulkRequestPostStatusSimpleValue"] | components["schemas"]["BulkRequestPostTimeSimpleValue"] | components["schemas"]["BulkRequestPostUserSelectSimpleValue"] | components["schemas"]["BulkRequestPostOrganizationSelectSimpleValue"] | components["schemas"]["BulkRequestPostGroupSelectSimpleValue"] | components["schemas"]["BulkRequestPostRevisionSimpleValue"] | components["schemas"]["BulkRequestPostRawRecordIdSimpleValue"];
            };
            /**
             * Format: long
             * @description The expected revision number.
             *     If the value does not match, an error will occur and all records will not be updated.
             *     If the value is not specified or is -1, the revision number will not be checked.
             *
             */
            revision?: number;
            updateKey?: components["schemas"]["BulkRequestPostUpdateKey"];
        };
        BulkRequestPostRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostRecordPostForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description Field codes and values are specified in this object.
             *     If ignored, the record will be added with default field values.
             *     If field codes that don't exist are specified, these will be ignored.
             *      */
            record: {
                [key: string]: components["schemas"]["BulkRequestPostCalcSimpleValue"] | components["schemas"]["BulkRequestPostCategorySimpleValue"] | components["schemas"]["BulkRequestPostDateSimpleValue"] | components["schemas"]["BulkRequestPostDatetimeSimpleValue"] | components["schemas"]["BulkRequestPostDecimalSimpleValue"] | components["schemas"]["BulkRequestPostEditorSimpleValue"] | components["schemas"]["BulkRequestPostFileSimpleValue"] | components["schemas"]["BulkRequestPostGroupSimpleValue"] | components["schemas"]["BulkRequestPostLinkSimpleValue"] | components["schemas"]["BulkRequestPostModifiedAtSimpleValue"] | components["schemas"]["BulkRequestPostModifierSimpleValue"] | components["schemas"]["BulkRequestPostMultipleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostMultipleSelectSimpleValue"] | components["schemas"]["BulkRequestPostRecordIdSimpleValue"] | components["schemas"]["BulkRequestPostReferenceTableSimpleValue"] | components["schemas"]["BulkRequestPostSimpleTableValue"] | components["schemas"]["BulkRequestPostSingleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostSingleSelectSimpleValue"] | components["schemas"]["BulkRequestPostStatusSimpleValue"] | components["schemas"]["BulkRequestPostTimeSimpleValue"] | components["schemas"]["BulkRequestPostUserSelectSimpleValue"] | components["schemas"]["BulkRequestPostOrganizationSelectSimpleValue"] | components["schemas"]["BulkRequestPostGroupSelectSimpleValue"] | components["schemas"]["BulkRequestPostRevisionSimpleValue"] | components["schemas"]["BulkRequestPostRawRecordIdSimpleValue"];
            };
        };
        BulkRequestPostRecordPostOutputForm: {
            /**
             * Format: long
             * @description The Record ID of the created Record.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The revision number of the Record.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordPutForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /**
             * Format: long
             * @description The Record ID of the record to be updated.
             *     Required, if updateKey will not be specified.
             *
             */
            id?: number;
            /** @description Field codes and values are specified in this object.
             *     If ignored, the record will not be updated.
             *      */
            record?: {
                [key: string]: components["schemas"]["BulkRequestPostCalcSimpleValue"] | components["schemas"]["BulkRequestPostCategorySimpleValue"] | components["schemas"]["BulkRequestPostDateSimpleValue"] | components["schemas"]["BulkRequestPostDatetimeSimpleValue"] | components["schemas"]["BulkRequestPostDecimalSimpleValue"] | components["schemas"]["BulkRequestPostEditorSimpleValue"] | components["schemas"]["BulkRequestPostFileSimpleValue"] | components["schemas"]["BulkRequestPostGroupSimpleValue"] | components["schemas"]["BulkRequestPostLinkSimpleValue"] | components["schemas"]["BulkRequestPostModifiedAtSimpleValue"] | components["schemas"]["BulkRequestPostModifierSimpleValue"] | components["schemas"]["BulkRequestPostMultipleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostMultipleSelectSimpleValue"] | components["schemas"]["BulkRequestPostRecordIdSimpleValue"] | components["schemas"]["BulkRequestPostReferenceTableSimpleValue"] | components["schemas"]["BulkRequestPostSimpleTableValue"] | components["schemas"]["BulkRequestPostSingleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostSingleSelectSimpleValue"] | components["schemas"]["BulkRequestPostStatusSimpleValue"] | components["schemas"]["BulkRequestPostTimeSimpleValue"] | components["schemas"]["BulkRequestPostUserSelectSimpleValue"] | components["schemas"]["BulkRequestPostOrganizationSelectSimpleValue"] | components["schemas"]["BulkRequestPostGroupSelectSimpleValue"] | components["schemas"]["BulkRequestPostRevisionSimpleValue"] | components["schemas"]["BulkRequestPostRawRecordIdSimpleValue"];
            };
            /**
             * Format: long
             * @description The expected revision number.
             *     If the value does not match, an error will occur and the record will not be updated.
             *     If the value is not specified or is -1, the revision number will not be checked.
             *
             */
            revision?: number;
            updateKey?: components["schemas"]["BulkRequestPostUpdateKey"];
        };
        BulkRequestPostRecordPutOutputForm: {
            /** Format: long */
            revision?: number;
        };
        BulkRequestPostRecordStatusPutForm: {
            /** @description The Action name of the action to run.
             *     If the localization feature has been used to apply multiple translations of the Action name,
             *     specify the name of the Action in the language settings of the user that will run the API.
             *     API Tokens follow the language settings set in the User & System Administration settings.
             *      */
            action: string;
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description The next Assignee. Specify the Assignee's log in name.
             *     Required, if the "Assignee List" of the current status is set to "User chooses one assignee from the list to take action",
             *     and a selectable assignee exists.
             *      */
            assignee?: string;
            /**
             * Format: long
             * @description The record ID.
             *
             */
            id: number;
            /**
             * Format: long
             * @description The revision number of the record before updating the status.
             *     If the specified revision is not the latest revision, the request will result in an error.
             *     The revision will not be checked if this parameter is ignored, or -1 is specified.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordStatusPutOutputForm: {
            /**
             * Format: long
             * @description The revision number of the record after updating the status.
             *     The revision number will increase by 2, as two operations are preformed - running the action, and updating the status.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordsDeleteForm: {
            /**
             * Format: long
             * @description The app ID.
             *
             */
            app: number;
            /** @description Array of record IDs that will be deleted.
             *     Up to 100 records can be specified.
             *      */
            ids: number[];
            /** @description The Expected revision number.
             *     The first id number will correspond to the first revision number in the array, the second id to the second revision number, and so on.
             *     If the revision number does not match, an error will occur and no records will be deleted.
             *     If the revision number is left blank or is -1, the revision number will not be checked for the corresponding record ID.
             *      */
            revisions?: number[];
        };
        BulkRequestPostRecordsDeleteOutputForm: unknown;
        BulkRequestPostRecordsPostForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description Holds an array of record objects, that contains field codes and their values.
             *
             *     Fields that are not included in the objects are added with their default value.
             *     Objects containing field codes that do not exist are ignored.
             *      */
            records: {
                [key: string]: components["schemas"]["BulkRequestPostCalcSimpleValue"] | components["schemas"]["BulkRequestPostCategorySimpleValue"] | components["schemas"]["BulkRequestPostDateSimpleValue"] | components["schemas"]["BulkRequestPostDatetimeSimpleValue"] | components["schemas"]["BulkRequestPostDecimalSimpleValue"] | components["schemas"]["BulkRequestPostEditorSimpleValue"] | components["schemas"]["BulkRequestPostFileSimpleValue"] | components["schemas"]["BulkRequestPostGroupSimpleValue"] | components["schemas"]["BulkRequestPostLinkSimpleValue"] | components["schemas"]["BulkRequestPostModifiedAtSimpleValue"] | components["schemas"]["BulkRequestPostModifierSimpleValue"] | components["schemas"]["BulkRequestPostMultipleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostMultipleSelectSimpleValue"] | components["schemas"]["BulkRequestPostRecordIdSimpleValue"] | components["schemas"]["BulkRequestPostReferenceTableSimpleValue"] | components["schemas"]["BulkRequestPostSimpleTableValue"] | components["schemas"]["BulkRequestPostSingleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostSingleSelectSimpleValue"] | components["schemas"]["BulkRequestPostStatusSimpleValue"] | components["schemas"]["BulkRequestPostTimeSimpleValue"] | components["schemas"]["BulkRequestPostUserSelectSimpleValue"] | components["schemas"]["BulkRequestPostOrganizationSelectSimpleValue"] | components["schemas"]["BulkRequestPostGroupSelectSimpleValue"] | components["schemas"]["BulkRequestPostRevisionSimpleValue"] | components["schemas"]["BulkRequestPostRawRecordIdSimpleValue"];
            }[];
        };
        BulkRequestPostRecordsPostOutputForm: {
            /** @description The Record IDs of the created records.
             *      */
            ids?: number[];
            /** @description The revision numbers of the records.
             *      */
            revisions?: number[];
        };
        BulkRequestPostRecordsPutForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description Holds an array of objects that include id/updateKey, revision and record objects.
             *      */
            records: components["schemas"]["BulkRequestPostRecordForm"][];
            /**
             * Format: boolean
             * @description A mode where adding and updating records can be processed at the same time.
             *
             */
            upsert?: boolean;
        };
        BulkRequestPostRecordsPutOutputForm: {
            records?: components["schemas"]["BulkRequestPostRecordBean"][] | components["schemas"]["BulkRequestPostUpsertRecordBean"][];
        };
        BulkRequestPostRecordsStatusPutForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /** @description An array including information of the record to be updated. Up to 100 records can be specified.
             *     Specifying more than 100 records will result in an error.
             *      */
            records: components["schemas"]["BulkRequestPostRecordsStatusPutFormRecord"][];
        };
        BulkRequestPostRecordsStatusPutFormRecord: {
            /** @description The Action name of the action to run.
             *     If the localization feature has been used to apply multiple translations of the Action name,
             *     specify the name of the Action in the language settings of the user that will run the API.
             *     API Tokens follow the language settings set in the User & System Administration settings.
             *      */
            action: string;
            /** @description The next Assignee. Specify the Assignee's log in name.
             *     Required, if the "Assignee List" of the current status is set to "User chooses one assignee from the list to take action",
             *     and a selectable assignee exists.
             *      */
            assignee?: string;
            /**
             * Format: long
             * @description The record ID.
             *
             */
            id: number;
            /**
             * Format: long
             * @description The revision number of the record before updating the status.
             *     If the specified revision is not the latest revision, the request will result in an error.
             *     The revision will not be checked if this parameter is ignored, or -1 is specified.
             *
             */
            revision?: number;
        };
        BulkRequestPostRecordsStatusPutOutputForm: {
            /** @description An array including information of the updated records.
             *      */
            records?: components["schemas"]["BulkRequestPostRecordsStatusPutOutputFormRecord"][];
        };
        BulkRequestPostRecordsStatusPutOutputFormRecord: {
            /**
             * Format: long
             * @description The Record ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The revision number of the record after updating the status.
             *     The revision number will increase by 2, as two operations are preformed - running the action, and updating the status.
             *
             */
            revision?: number;
        };
        BulkRequestPostReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostRequestForm: {
            /** @description The path of the API for the request.
             *      */
            api: string;
            /** @description The API method for the request.
             *      */
            method: string;
            payload: components["schemas"]["BulkRequestPostRecordPostForm"] | components["schemas"]["BulkRequestPostRecordPutForm"] | components["schemas"]["BulkRequestPostRecordStatusPutForm"] | components["schemas"]["BulkRequestPostRecordAssigneesPutForm"] | components["schemas"]["BulkRequestPostRecordsDeleteForm"] | components["schemas"]["BulkRequestPostRecordsPostForm"] | components["schemas"]["BulkRequestPostRecordsPutForm"] | components["schemas"]["BulkRequestPostRecordsStatusPutForm"];
        };
        BulkRequestPostRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        BulkRequestPostSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["BulkRequestPostCalcSimpleValue"] | components["schemas"]["BulkRequestPostCategorySimpleValue"] | components["schemas"]["BulkRequestPostDateSimpleValue"] | components["schemas"]["BulkRequestPostDatetimeSimpleValue"] | components["schemas"]["BulkRequestPostDecimalSimpleValue"] | components["schemas"]["BulkRequestPostEditorSimpleValue"] | components["schemas"]["BulkRequestPostFileSimpleValue"] | components["schemas"]["BulkRequestPostGroupSimpleValue"] | components["schemas"]["BulkRequestPostLinkSimpleValue"] | components["schemas"]["BulkRequestPostModifiedAtSimpleValue"] | components["schemas"]["BulkRequestPostModifierSimpleValue"] | components["schemas"]["BulkRequestPostMultipleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostMultipleSelectSimpleValue"] | components["schemas"]["BulkRequestPostRecordIdSimpleValue"] | components["schemas"]["BulkRequestPostReferenceTableSimpleValue"] | components["schemas"]["BulkRequestPostSimpleTableValue"] | components["schemas"]["BulkRequestPostSingleLineTextSimpleValue"] | components["schemas"]["BulkRequestPostSingleSelectSimpleValue"] | components["schemas"]["BulkRequestPostStatusSimpleValue"] | components["schemas"]["BulkRequestPostTimeSimpleValue"] | components["schemas"]["BulkRequestPostUserSelectSimpleValue"] | components["schemas"]["BulkRequestPostOrganizationSelectSimpleValue"] | components["schemas"]["BulkRequestPostGroupSelectSimpleValue"] | components["schemas"]["BulkRequestPostRevisionSimpleValue"] | components["schemas"]["BulkRequestPostRawRecordIdSimpleValue"];
            };
        };
        BulkRequestPostSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["BulkRequestPostSimpleRowValue"][];
        };
        BulkRequestPostSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        BulkRequestPostSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        BulkRequestPostTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        BulkRequestPostUpdateKey: {
            /** @description The field code of the unique key.
             *      */
            field: string;
            /** @description The value of the unique key.
             *      */
            value: string;
        };
        BulkRequestPostUpsertRecordBean: {
            /**
             * Format: long
             * @description The Record IDs of the updated/created Records.
             *
             */
            id?: number;
            /**
             * @description The revision numbers of the Records.
             *
             * @enum {string}
             */
            operation?: "INSERT" | "UPDATE";
            /**
             * Format: long
             * @description The revision numbers of the Records.
             *
             */
            revision?: number;
        };
        BulkRequestPostUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        BulkRequestPostUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["BulkRequestPostUserEntitySimpleValue"][];
        };
        FieldAclGetEntityRight: {
            /**
             * @description The permission granted to the entity.
             *     - READ: Permissions to view only.
             *     - WRITE: Permissions to view and edit.
             *     - NONE: No permissions to view or edit.
             *
             * @enum {string}
             */
            accessibility?: "WRITE" | "READ" | "NONE";
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
        };
        FieldAclGetRight: {
            /** @description The field code of a field that has permission settings.
             *      */
            code?: string;
            /** @description An array listing the entities the permissions are granted to, in order of priority.
             *      */
            entities?: components["schemas"]["FieldAclGetEntityRight"][];
        };
        FieldAclPutFieldRightEntity: {
            /**
             * @description The permission to grant to the entity.
             *     - READ: Permissions to view only.
             *     - WRITE: Permissions to view and edit.
             *     - NONE: No permissions to view and edit
             *
             * @enum {string}
             */
            accessibility: "WRITE" | "READ" | "NONE";
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permissions are granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
        };
        FieldAclPutRight: {
            /** @description The field code of the field to set permissions around.
             *      */
            code: string;
            /** @description An array listing the entities the permissions are granted to. List in order of priority.
             *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
             *      */
            entities: components["schemas"]["FieldAclPutFieldRightEntity"][];
        };
        FormGetBultinProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetCalcSimpleProperties: {
            code?: string;
            /** Format: long */
            displayScale?: number;
            expression?: string;
            /** @enum {string} */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /** Format: boolean */
            hideExpression?: boolean;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            unit?: string;
            unitPosition?: string;
        };
        FormGetDateSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        FormGetDatetimeSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        FormGetDecimalSimpleProperties: {
            code?: string;
            defaultValue?: string;
            /** Format: boolean */
            digit?: boolean;
            /** Format: long */
            displayScale?: number;
            label?: string;
            /** Format: long */
            maxValue?: number;
            /** Format: long */
            minValue?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
            unit?: string;
            unitPosition?: string;
        };
        FormGetEditorSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetFileSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetGroupSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetLabelProperties: {
            label?: string;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetLayoutProperties: {
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetLinkSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: long */
            maxLength?: number;
            /** Format: long */
            minLength?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            protocol?: "WEB" | "CALL" | "MAIL";
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        FormGetLookupSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: long */
            relatedApp?: number;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetMultipleLineTextSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetMultipleSelectSimpleProperties: {
            code?: string;
            defaultValue?: string[];
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            options?: string[];
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetOrganizationSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetReferenceTableLayoutProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: long */
            relatedApp?: number;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetSingleLineTextSimpleProperties: {
            code?: string;
            defaultValue?: string;
            expression?: string;
            /** Format: boolean */
            hideExpression?: boolean;
            label?: string;
            /** Format: long */
            maxLength?: number;
            /** Format: long */
            minLength?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        FormGetSingleSelectSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            options?: string[];
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetSpacerProperties: {
            elementId?: string;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetSubTableLayoutProperties: {
            code?: string;
            fields?: (components["schemas"]["FormGetLayoutProperties"] | components["schemas"]["FormGetLabelProperties"] | components["schemas"]["FormGetBultinProperties"] | components["schemas"]["FormGetCalcSimpleProperties"] | components["schemas"]["FormGetDateSimpleProperties"] | components["schemas"]["FormGetDatetimeSimpleProperties"] | components["schemas"]["FormGetDecimalSimpleProperties"] | components["schemas"]["FormGetEditorSimpleProperties"] | components["schemas"]["FormGetFileSimpleProperties"] | components["schemas"]["FormGetLinkSimpleProperties"] | components["schemas"]["FormGetMultipleLineTextSimpleProperties"] | components["schemas"]["FormGetMultipleSelectSimpleProperties"] | components["schemas"]["FormGetSingleLineTextSimpleProperties"] | components["schemas"]["FormGetSingleSelectSimpleProperties"] | components["schemas"]["FormGetTimeSimpleProperties"] | components["schemas"]["FormGetUserSelectSimpleProperties"] | components["schemas"]["FormGetOrganizationSelectSimpleProperties"] | components["schemas"]["FormGetGroupSelectSimpleProperties"] | components["schemas"]["FormGetLookupSimpleProperties"] | components["schemas"]["FormGetReferenceTableLayoutProperties"] | components["schemas"]["FormGetSubTableLayoutProperties"] | components["schemas"]["FormGetSpacerProperties"])[];
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetTimeSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        FormGetUserSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        GuestsPostGuestUserForm: {
            /** @description The Skype Name of the Guest user.
             *     The maximum limit is 256 characters.
             *      */
            callto?: string;
            /**
             * Format: email
             * @description The email address (log in name) of the Guest user.
             *
             */
            code: string;
            /** @description The Company name to display on the Guest User's profile.
             *     The maximum limit is 100 characters.
             *      */
            company?: string;
            /** @description The Department name to display on the Guest User's profile.
             *     The maximum limit is 100 characters.
             *      */
            division?: string;
            /** @description The Phonetic Given Name settings of the Guest User. The maximum limit is 64 characters.
             *      */
            givenNameReading?: string;
            /** @description The profile image of the Guest user.
             *     Specify a fileKey of an uploaded file. fileKeys can be found from the response of the Upload File API.
             *     If ignored, a default image will be set.
             *      */
            image?: string;
            /**
             * Format: locale
             * @description The language settings of the Guest user.
             *     - auto: Use web browser settings.
             *     - en: English
             *     - zh: Chinese
             *     - ja: Japanese
             *     If ignored, auto will be set.
             *
             */
            locale?: string;
            /** @description The display name of the user.
             *     Must be between 1 - 128 characters.
             *      */
            name: string;
            /** @description The log in password of the Guest user.
             *      */
            password: string;
            /** @description The Phone number to display on the Guest User's profile.
             *     The maximum limit is 100 characters.
             *      */
            phone?: string;
            /** @description The Phonetic Surname settings of the Guest User. The maximum limit is 64 characters.
             *      */
            surNameReading?: string;
            /**
             * Format: timezone
             * @description The timezone of the Guest user.
             *
             */
            timezone: string;
        };
        PluginAppsGetAppDto: {
            /** @description The App ID.
             *      */
            id?: string;
            /** @description The name of the App.
             *      */
            name?: string;
        };
        PluginsGetPluginDto: {
            /** @description The Plug-in description. If there is no description, an empty string will be returned.
             *      */
            description?: string;
            /** @description The plug-in ID.
             *      */
            id?: string;
            /** @description States whether or not the plug-in is a Marketplace plug-in.
             *     - `true`: The plug-in is a Marketplace plug-in.
             *     - `false`: The plug-in is not a Marketplace plug-in.
             *      */
            isMarketPlugin?: boolean;
            /** @description The name of the plug-in.
             *      */
            name?: string;
            /** @description The version number of the plug-in.
             *      */
            version?: string;
        };
        PluginsRequiredGetPluginDto: {
            /** @description The Plugin ID.
             *      */
            id?: string;
            /** @description States whether or not the plug-in is a Marketplace plug-in.
             *     - true: The plug-in is a Marketplace plug-in.
             *     - false: The plug-in is not a Marketplace plug-in.
             *      */
            isMarketPlugin?: boolean;
            /** @description The name of the Plugin.
             *      */
            name?: string;
        };
        PreviewAppAclGetRight: {
            /** @description The App management permission of the entity.
             *     Entities with this permission are able to access and edit the App's settings.
             *     - true: The App's settings are accessible.
             *     - false: The App's settings are not accessible.
             *      */
            appEditable?: boolean;
            /** @description  An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - CREATOR: The creator of the App
                 *
                 * @enum {string}
                 */
                type?: "USER" | "ORGANIZATION" | "GROUP" | "CREATOR";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
            /** @description The record add permission of the entity
             *     - true: Records can be added.
             *     - false: Records cannot be added.
             *      */
            recordAddable?: boolean;
            /** @description The record delete permission of the entity
             *     - true: Records are deletable.
             *     - false: Records are not deletable.
             *      */
            recordDeletable?: boolean;
            /** @description The record edit permission of the entity
             *     - true: Records are editable.
             *     - false: Records are not editable.
             *      */
            recordEditable?: boolean;
            /** @description The record export permission of the entity
             *     - true: Records are exportable.
             *     - false: Records are not exportable.
             *      */
            recordExportable?: boolean;
            /** @description The record import permission of the entity
             *     - true: Records are importable.
             *     - false: Records are not importable.
             *      */
            recordImportable?: boolean;
            /** @description The record view permission of the entity.
             *     - true: Records are viewable.
             *     - false: Records are not viewable.
             *      */
            recordViewable?: boolean;
        };
        PreviewAppAclPutRight: {
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be accessible.
             *     - false: The App's settings will not be accessible.
             *
             *     If ignored, this value is false.
             *
             */
            appEditable?: boolean;
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission will be granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - CREATOR: The creator of the App
                 *
                 * @enum {string}
                 */
                type: "USER" | "ORGANIZATION" | "GROUP" | "CREATOR";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permission is granted to. This parameter is available if "ORGANIZATION" is specified for the rights[].entity.type parameter.
             *     - true: Permissions will be inherited.
             *     - false: Permissions will not be inherited.
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be added.
             *     - false: The App's settings will not be added.
             *
             *     If ignored, this value is false.
             *
             */
            recordAddable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be deletable.
             *     - false: The App's settings will not be deletable.
             *
             *     If ignored, this value is false.
             *
             */
            recordDeletable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be editable.
             *     - false: The App's settings will not be editable.
             *
             *     If ignored, this value is false.
             *
             */
            recordEditable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be exportable.
             *     - false: The App's settings will not be exportable.
             *
             *     If ignored, this value is false.
             *
             */
            recordExportable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be importable.
             *     - false: The App's settings will not be importable.
             *
             *     If ignored, this value is false.
             *
             */
            recordImportable?: boolean;
            /**
             * Format: boolean
             * @description The App management permission of the entity.
             *     - true: The App's settings will be viewable.
             *     - false: The App's settings will not be viewable.
             *
             *     If ignored, this value is false.
             *
             */
            recordViewable?: boolean;
        };
        PreviewAppActionsGetAction: {
            /** @description An object containing the Target option that specifies the destination app where data is to be copied.
             *      */
            destApp?: {
                /**
                 * Format: long
                 * @description The App ID of the copy destination app.
                 *
                 */
                app?: number;
                /** @description The App Code of the copy destination app.
                 *     An empty string is returned if an App Code is not set in the destination app's settings.
                 *      */
                code?: string;
            };
            /** @description An array of objects containing the entities the Action is granted to. This reflects the Available To options.
             *     Inactive users and deleted users/departments/groups will not be included in the response.
             *      */
            entities?: components["schemas"]["PreviewAppActionsGetEntity"][];
            /**
             * Format: long
             * @description The ID of the Action.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the Action, starting from 0.
             *
             */
            index?: number;
            /** @description An array of objects containing the Field Mappings options.
             *     An empty array is returned if the Field Mappings options are not configured.
             *      */
            mappings?: (components["schemas"]["PreviewAppActionsGetUrlMapping"] | components["schemas"]["PreviewAppActionsGetFieldMapping"])[];
            /** @description The name of the Action.
             *     When the lang request parameter is specified, the Action's name in that language will be returned.
             *      */
            name?: string;
        };
        PreviewAppActionsGetEntity: {
            /** @description The code of the entity the Action is granted to.
             *      For guest users, the login name is preceded by `guest/`.
             *      */
            code?: string;
            /**
             * @description The type of the entity the Action is granted to.
             *      - USER: User
             *      - GROUP: Group
             *      - ORGANIZATION: Department
             *
             * @enum {string}
             */
            type?: "USER" | "GROUP" | "ORGANIZATION";
        };
        PreviewAppActionsGetFieldMapping: {
            /** @description The field code of the field specified in the Field Mappings options as the destination.
             *      */
            destField?: string;
            /** @description The field code of the field specified in the Field Mappings options as the source.
             *
             *     This parameter is returned only if the actions.{actionname}.mappings[].srcType parameter is set to FIELD.
             *      */
            srcField?: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source app's field
             *     - RECORD_URL: The Record's permalink
             *
             * @enum {string}
             */
            srcType?: "FIELD";
        };
        PreviewAppActionsGetUrlMapping: {
            /** @description The field code of the field specified in the Field Mappings options as the destination.
             *      */
            destField?: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source app's field
             *     - RECORD_URL: The Record's permalink
             *
             * @enum {string}
             */
            srcType?: "RECORD_URL";
        };
        PreviewAppActionsPutAction: {
            /** @description An object containing the Target option that specifies the destination App where data is to be copied.
             *
             *     Required when creating a new Action.
             *      */
            destApp?: {
                /**
                 * Format: long
                 * @description  The App ID.
                 *
                 */
                app?: number;
                /** @description The App Code.
                 *      */
                code?: string;
            };
            /** @description An array of objects containing the entities the Action is granted to.
             *     This reflects the "Available To" options.
             *     If the array is empty, the Action will not be available to any users/departments/groups.
             *
             *     Required when creating a new Action.
             *      */
            entities?: components["schemas"]["PreviewAppActionsPutEntity"][];
            /**
             * Format: long
             * @description The order of the Actions.
             *     The Action is sorted in ascending order, starting from 0.
             *     The request will fail if there are duplicate values.
             *
             *     Required when updating an existing Action, or creating a new Action.
             *
             */
            index: number;
            /** @description An array of objects containing the "Field Mappings" options.
             *     If the array is empty, the Action will not have "Field Mappings" options set.
             *
             *     Required when specifying the actions.{actionname}.destApp parameter, or creating a new Action.
             *      */
            mappings?: (components["schemas"]["PreviewAppActionsPutFieldMapping"] | components["schemas"]["PreviewAppActionsPutUrlMapping"])[];
            /** @description The name of the Action.
             *     1 to 32 characters can be specified.
             *     When creating a new Action, the request will fail if this parameter's value is not the same as actions.{actionname}.
             *
             *     Required when updating an existing Action, or creating a new Action.
             *      */
            name?: string;
        };
        PreviewAppActionsPutActionResult: {
            /**
             * Format: long
             * @description The ID of the Action.
             *
             */
            id?: number;
        };
        PreviewAppActionsPutEntity: {
            /** @description The code of the entity the Action is granted to.
             *     For guest users, add guest/ before the login name.
             *     Required when specifying the actions.{actionname}.entities parameter.
             *      */
            code: string;
            /**
             * @description The type of the entity the Action is granted to.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             *     For Apps in a guest space, specifying a Department will result in an error.
             *     Required when specifying the actions.{actionname}.entities parameter.
             *
             * @enum {string}
             */
            type: "USER" | "GROUP" | "ORGANIZATION";
        };
        PreviewAppActionsPutFieldMapping: {
            /** @description The field code of the field specified in the "Field Mappings" options as the destination.
             *     Required when specifying the actions.{actionname}.mappings parameter.
             *      */
            destField: string;
            /** @description The field code of the field specified in the "Field Mappings" options as the source.
             *     Required when the actions.{actionname}.mappings[].srcType is set to FIELD.
             *      */
            srcField: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source App's field
             *     - RECORD_URL: The Record's permalink
             *
             *     Required when specifying the actions.{actionname}.mappings parameter.
             *
             * @enum {string}
             */
            srcType: "FIELD";
        };
        PreviewAppActionsPutUrlMapping: {
            /** @description The field code of the field specified in the "Field Mappings" options as the destination.
             *     Required when specifying the actions.{actionname}.mappings parameter.
             *      */
            destField: string;
            /**
             * @description The type of source data that is to be copied.
             *     - FIELD: Data stored in the source App's field
             *     - RECORD_URL: The Record's permalink
             *
             *     Required when specifying the actions.{actionname}.mappings parameter.
             *
             * @enum {string}
             */
            srcType: "RECORD_URL";
        };
        PreviewAppCustomizeGetFileContentForm: {
            /** @description  An Object containing data of an uploaded file.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
        };
        PreviewAppCustomizeGetUrlContentForm: {
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
            /** @description The URL of the file.
             *      */
            url: string;
        };
        PreviewAppCustomizePutFileContentForm: {
            /** @description  An Object containing data of an uploaded file.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
        };
        PreviewAppCustomizePutUrlContentForm: {
            /**
             * @description The end-point type of the file:
             *     - URL: the file is specified with a URL.
             *     - FILE: the file is uploaded to the app.
             *
             * @enum {string}
             */
            type: "URL" | "FILE";
            /** @description The URL of the file.
             *      */
            url: string;
        };
        PreviewAppDeployGetAppForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app?: number;
            /**
             * @description The status of the deployment of App settings.
             *     - PROCESSING: The App settings are being deployed.
             *     - SUCCESS: The App settings have been deployed.
             *     - FAIL: An error occurred, and the deployment of App settings failed.
             *     - CANCEL: The deployment of App settings was canceled, due to the deployment of other App settings failing.
             *
             * @enum {string}
             */
            status?: "PROCESSING" | "SUCCESS" | "FAIL" | "CANCEL";
        };
        PreviewAppDeployPostAppForm: {
            /**
             * Format: long
             * @description The App ID.
             *
             */
            app: number;
            /**
             * Format: long
             * @description Specify the revision number of the settings that will be deployed.
             *     The request will fail if the revision number is not the latest revision.
             *     The revision will not be checked if this parameter is ignored, or -1 is specified.
             *
             */
            revision?: number;
        };
        PreviewAppFormFieldsGetCalcFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * @description The display format for fields with calculations:
             *     - NUMBER: Number (1000)
             *     - NUMBER_DIGIT: Number with thousands separator (1,000)
             *     - DATETIME: Date & time (Aug 06, 2012 2:03 PM)
             *     - DATE: Date (Aug 06, 2012)
             *     - TIME: Time (2:03 PM)
             *     - HOUR_MINUTE: Hours & minutes (29 hours 47 minutes)
             *     - DAY_HOUR_MINUTE: Days & hours & minutes (1 day 5 hours 47 minutes)
             *
             * @enum {string}
             */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /**
             * Format: boolean
             * @description The "Hide formula" settings for the field.
             *     - true: The formula will be hidden.
             *     - false: The formula will be displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsGetCategoryFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetDateFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsGetDatetimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsGetDecimalFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /**
             * Format: boolean
             * @description The "Use thousands separators" option.
             *     - true: Thousands separators will be displayed for the number.
             *     - false: Thousands separators will not be displayed for the number.
             *
             */
            digit?: boolean;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of characters for the field.
             *
             */
            maxValue?: number;
            /**
             * Format: long
             * @description The minimum number of characters for the field.
             *
             */
            minValue?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsGetEditorFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetEntityForm: {
            /** @description The code of the user/group/department.Required, if the entities parameter is specified.
             *      */
            code: string;
            /**
             * @description The entity type.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             *     Required, if the entities parameter is specified.
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP" | "FUNCTION";
        };
        PreviewAppFormFieldsGetFieldMappingForm: {
            /** @description The field code of the field selected for Field in this app.
             *      */
            field?: string;
            /** @description The field code of the field selected for Field in datasource app.
             *      */
            relatedField?: string;
        };
        PreviewAppFormFieldsGetFileFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * Format: long
             * @description The size of the image thumbnail in pixels.
             *     Specify one of the following: 50, 150, 250, 500
             *
             */
            thumbnailSize?: number;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetGroupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Show fields in this group" option.
             *     - true: The Group field will be displayed open by default.
             *     - false: The Group field will be displayed closed by default.
             *
             */
            openGroup?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetGroupSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetLinkFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The Link type settings for the field.
             *     - WEB: URL
             *     - CALL: Telephone number
             *     - MAIL: E-mail address
             *
             * @enum {string}
             */
            protocol?: "WEB" | "CALL" | "MAIL";
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsGetLookupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /** @description An object containing the settings of the Lookup field.
             *      */
            lookup?: {
                /** @description An object containing the settings of the Lookup field.
                 *      */
                fieldMappings?: components["schemas"]["PreviewAppFormFieldsGetFieldMappingForm"][];
                /** @description An object containing the settings of the Lookup field.
                 *      */
                filterCond?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                lookupPickerFields?: string[];
                /** @description An object containing the settings of the related App of the Lookup field.
                 *     Required, if setting the `lookup` parameter.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /** @description An object containing the settings of the Lookup field.
                 *      */
                relatedKeyField?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                sort?: string;
            };
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetModifiedAtFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetModifierFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetMultipleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetMultipleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetMultipleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetOptionForm: {
            /**
             * Format: long
             * @description The display order (ascending) of the option, when listed with the other options.
             *
             */
            index: number;
            /** @description The name of the option.
             *      */
            label?: string;
        };
        PreviewAppFormFieldsGetOrganizationSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetRecordIdFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetReferenceTableFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object containing the settings of the Related Records field.
             *     `null` is returned if there are no view permissions for the Datasource App.
             *      */
            referenceTable?: {
                /** @description An object containing data of the Fetch Criteria setting.
                 *      */
                condition?: {
                    /** @description The field code of the field selected for Field in this app.
                     *      */
                    field?: string;
                    /** @description The field code of the field selected for Field in datasource app.
                     *      */
                    relatedField?: string;
                };
                /** @description A list of field codes of fields specified in the Datasource App Fields to Display setting.
                 *      */
                displayFields?: string[];
                /** @description The Filter setting, in a query format.
                 *      */
                filterCond?: string;
                /** @description An object containing data of the Datasource App setting.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /**
                 * Format: long
                 * @description The Max Records to Display at a Time setting.
                 *
                 */
                size?: number;
                /** @description The Display Order setting, in a query format.
                 *      */
                sort?: string;
            };
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetSingleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetSingleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * Format: boolean
             * @description The Hide formula settings for the field.
             *     - true: The formula is hidden.
             *     - false: The formula is displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsGetSingleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsGetOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetStatusAssigneeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetStatusFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetTableForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description An object containing data of fields in a table.
             *     The parameters of this object are the same as the properties parameter.
             *      */
            fields?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsGetCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetTableForm"] | components["schemas"]["PreviewAppFormFieldsGetTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetUserSelectFieldForm"];
            };
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetTimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsGetUserSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsGetEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostCalcFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * @description The display format for fields with calculations:
             *     - NUMBER: Number (1000)
             *     - NUMBER_DIGIT: Number with thousands separator (1,000)
             *     - DATETIME: Date & time (Aug 06, 2012 2:03 PM)
             *     - DATE: Date (Aug 06, 2012)
             *     - TIME: Time (2:03 PM)
             *     - HOUR_MINUTE: Hours & minutes (29 hours 47 minutes)
             *     - DAY_HOUR_MINUTE: Days & hours & minutes (1 day 5 hours 47 minutes)
             *
             * @enum {string}
             */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /**
             * Format: boolean
             * @description The "Hide formula" settings for the field.
             *     - true: The formula will be hidden.
             *     - false: The formula will be displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsPostCategoryFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostDateFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPostDatetimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPostDecimalFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /**
             * Format: boolean
             * @description The "Use thousands separators" option.
             *     - true: Thousands separators will be displayed for the number.
             *     - false: Thousands separators will not be displayed for the number.
             *
             */
            digit?: boolean;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of characters for the field.
             *
             */
            maxValue?: number;
            /**
             * Format: long
             * @description The minimum number of characters for the field.
             *
             */
            minValue?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsPostEditorFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostEntityForm: {
            /** @description The code of the user/group/department.Required, if the entities parameter is specified.
             *      */
            code: string;
            /**
             * @description The entity type.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             *     Required, if the entities parameter is specified.
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP" | "FUNCTION";
        };
        PreviewAppFormFieldsPostFieldMappingForm: {
            /** @description The field code of the field selected for Field in this app.
             *      */
            field?: string;
            /** @description The field code of the field selected for Field in datasource app.
             *      */
            relatedField?: string;
        };
        PreviewAppFormFieldsPostFileFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * Format: long
             * @description The size of the image thumbnail in pixels.
             *     Specify one of the following: 50, 150, 250, 500
             *
             */
            thumbnailSize?: number;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostGroupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Show fields in this group" option.
             *     - true: The Group field will be displayed open by default.
             *     - false: The Group field will be displayed closed by default.
             *
             */
            openGroup?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostGroupSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostLinkFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The Link type settings for the field.
             *     - WEB: URL
             *     - CALL: Telephone number
             *     - MAIL: E-mail address
             *
             * @enum {string}
             */
            protocol?: "WEB" | "CALL" | "MAIL";
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPostLookupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /** @description An object containing the settings of the Lookup field.
             *      */
            lookup?: {
                /** @description An object containing the settings of the Lookup field.
                 *      */
                fieldMappings?: components["schemas"]["PreviewAppFormFieldsPostFieldMappingForm"][];
                /** @description An object containing the settings of the Lookup field.
                 *      */
                filterCond?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                lookupPickerFields?: string[];
                /** @description An object containing the settings of the related App of the Lookup field.
                 *     Required, if setting the `lookup` parameter.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /** @description An object containing the settings of the Lookup field.
                 *      */
                relatedKeyField?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                sort?: string;
            };
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostModifiedAtFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostModifierFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostMultipleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPostOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostMultipleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostMultipleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPostOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostOptionForm: {
            /**
             * Format: long
             * @description The display order (ascending) of the option, when listed with the other options.
             *
             */
            index: number;
            /** @description The name of the option.
             *      */
            label?: string;
        };
        PreviewAppFormFieldsPostOrganizationSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostRecordIdFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostReferenceTableFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object containing the settings of the Related Records field.
             *     `null` is returned if there are no view permissions for the Datasource App.
             *      */
            referenceTable?: {
                /** @description An object containing data of the Fetch Criteria setting.
                 *      */
                condition?: {
                    /** @description The field code of the field selected for Field in this app.
                     *      */
                    field?: string;
                    /** @description The field code of the field selected for Field in datasource app.
                     *      */
                    relatedField?: string;
                };
                /** @description A list of field codes of fields specified in the Datasource App Fields to Display setting.
                 *      */
                displayFields?: string[];
                /** @description The Filter setting, in a query format.
                 *      */
                filterCond?: string;
                /** @description An object containing data of the Datasource App setting.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /**
                 * Format: long
                 * @description The Max Records to Display at a Time setting.
                 *
                 */
                size?: number;
                /** @description The Display Order setting, in a query format.
                 *      */
                sort?: string;
            };
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostSingleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPostOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostSingleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * Format: boolean
             * @description The Hide formula settings for the field.
             *     - true: The formula is hidden.
             *     - false: The formula is displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPostSingleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPostOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostStatusAssigneeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostStatusFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostTableForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description An object containing data of fields in a table.
             *     The parameters of this object are the same as the properties parameter.
             *      */
            fields?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPostCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostTableForm"] | components["schemas"]["PreviewAppFormFieldsPostTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostUserSelectFieldForm"];
            };
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostTimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPostUserSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPostEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutCalcFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * @description The display format for fields with calculations:
             *     - NUMBER: Number (1000)
             *     - NUMBER_DIGIT: Number with thousands separator (1,000)
             *     - DATETIME: Date & time (Aug 06, 2012 2:03 PM)
             *     - DATE: Date (Aug 06, 2012)
             *     - TIME: Time (2:03 PM)
             *     - HOUR_MINUTE: Hours & minutes (29 hours 47 minutes)
             *     - DAY_HOUR_MINUTE: Days & hours & minutes (1 day 5 hours 47 minutes)
             *
             * @enum {string}
             */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /**
             * Format: boolean
             * @description The "Hide formula" settings for the field.
             *     - true: The formula will be hidden.
             *     - false: The formula will be displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsPutCategoryFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutDateFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPutDatetimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPutDecimalFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /**
             * Format: boolean
             * @description The "Use thousands separators" option.
             *     - true: Thousands separators will be displayed for the number.
             *     - false: Thousands separators will not be displayed for the number.
             *
             */
            digit?: boolean;
            /**
             * Format: long
             * @description The number of decimal places to display for the field.
             *
             */
            displayScale?: number;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of characters for the field.
             *
             */
            maxValue?: number;
            /**
             * Format: long
             * @description The minimum number of characters for the field.
             *
             */
            minValue?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
            /** @description The Currency settings of the field.
             *      */
            unit?: string;
            /**
             * @description The display position of the Currency.
             *     - BEFORE: The currency will be displayed before the field value.
             *     - AFTER: The currency will be displayed after the field value.
             *
             * @enum {string}
             */
            unitPosition?: "BEFORE" | "AFTER";
        };
        PreviewAppFormFieldsPutEditorFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutEntityForm: {
            /** @description The code of the user/group/department.Required, if the entities parameter is specified.
             *      */
            code: string;
            /**
             * @description The entity type.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             *     Required, if the entities parameter is specified.
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP" | "FUNCTION";
        };
        PreviewAppFormFieldsPutFieldMappingForm: {
            /** @description The field code of the field selected for Field in this app.
             *      */
            field?: string;
            /** @description The field code of the field selected for Field in datasource app.
             *      */
            relatedField?: string;
        };
        PreviewAppFormFieldsPutFileFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * Format: long
             * @description The size of the image thumbnail in pixels.
             *     Specify one of the following: 50, 150, 250, 500
             *
             */
            thumbnailSize?: number;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutGroupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Show fields in this group" option.
             *     - true: The Group field will be displayed open by default.
             *     - false: The Group field will be displayed closed by default.
             *
             */
            openGroup?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutGroupSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutLinkFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The Link type settings for the field.
             *     - WEB: URL
             *     - CALL: Telephone number
             *     - MAIL: E-mail address
             *
             * @enum {string}
             */
            protocol?: "WEB" | "CALL" | "MAIL";
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPutLookupFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /** @description An object containing the settings of the Lookup field.
             *      */
            lookup?: {
                /** @description An object containing the settings of the Lookup field.
                 *      */
                fieldMappings?: components["schemas"]["PreviewAppFormFieldsPutFieldMappingForm"][];
                /** @description An object containing the settings of the Lookup field.
                 *      */
                filterCond?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                lookupPickerFields?: string[];
                /** @description An object containing the settings of the related App of the Lookup field.
                 *     Required, if setting the `lookup` parameter.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /** @description An object containing the settings of the Lookup field.
                 *      */
                relatedKeyField?: string;
                /** @description An object containing the settings of the Lookup field.
                 *      */
                sort?: string;
            };
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutModifiedAtFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutModifierFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutMultipleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPutOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutMultipleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutMultipleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string[];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPutOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutOptionForm: {
            /**
             * Format: long
             * @description The display order (ascending) of the option, when listed with the other options.
             *
             */
            index: number;
            /** @description The name of the option.
             *      */
            label?: string;
        };
        PreviewAppFormFieldsPutOrganizationSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutRecordIdFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutReferenceTableFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object containing the settings of the Related Records field.
             *     `null` is returned if there are no view permissions for the Datasource App.
             *      */
            referenceTable?: {
                /** @description An object containing data of the Fetch Criteria setting.
                 *      */
                condition?: {
                    /** @description The field code of the field selected for Field in this app.
                     *      */
                    field?: string;
                    /** @description The field code of the field selected for Field in datasource app.
                     *      */
                    relatedField?: string;
                };
                /** @description A list of field codes of fields specified in the Datasource App Fields to Display setting.
                 *      */
                displayFields?: string[];
                /** @description The Filter setting, in a query format.
                 *      */
                filterCond?: string;
                /** @description An object containing data of the Datasource App setting.
                 *      */
                relatedApp?: {
                    /**
                     * Format: long
                     * @description  The App ID.
                     *
                     */
                    app?: number;
                    /** @description The App Code.
                     *      */
                    code?: string;
                };
                /**
                 * Format: long
                 * @description The Max Records to Display at a Time setting.
                 *
                 */
                size?: number;
                /** @description The Display Order setting, in a query format.
                 *      */
                sort?: string;
            };
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutSingleCheckFieldForm: {
            /**
             * @description The layout of the options.
             *     - HORIZONTAL: The options are listed horizontally.
             *     - VERTICAL: The options are listed vertically.
             *
             * @enum {string}
             */
            align?: "HORIZONTAL" | "VERTICAL";
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPutOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutSingleLineTextFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The formula expression used in the field.
             *      */
            expression?: string;
            /**
             * Format: boolean
             * @description The Hide formula settings for the field.
             *     - true: The formula is hidden.
             *     - false: The formula is displayed.
             *
             */
            hideExpression?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: long
             * @description The maximum number of digits for the field.
             *
             */
            maxLength?: number;
            /**
             * Format: long
             * @description The minimum number of digits for the field.
             *
             */
            minLength?: number;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
            /**
             * Format: boolean
             * @description The "Prohibit duplicate values" option.
             *     - true: Duplicate values will be prohibited.
             *     - false: Duplicate values will not be prohibited.
             *
             */
            unique?: boolean;
        };
        PreviewAppFormFieldsPutSingleSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /** @description An object including data of the field's options.
             *      */
            options?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPutOptionForm"];
            };
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutStatusAssigneeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutStatusFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** Format: boolean */
            enabled?: boolean;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutTableForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description An object containing data of fields in a table.
             *     The parameters of this object are the same as the properties parameter.
             *      */
            fields?: {
                [key: string]: components["schemas"]["PreviewAppFormFieldsPutCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutTableForm"] | components["schemas"]["PreviewAppFormFieldsPutTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutUserSelectFieldForm"];
            };
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutTimeFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /**
             * Format: boolean
             * @description The "Default to the record creation date" option.
             *     - true: The record creation date will be used as the default value.
             *     - false: The record creation date will not be used as the default value.
             *
             */
            defaultNowValue?: boolean;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: string;
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormFieldsPutUserSelectFieldForm: {
            /** @description The field code of the field.
             *     Field codes have the following limitations:
             *     - The maximum character limit is 128
             *     - Duplicate field codes cannot exist
             *     - _ is the only symbol that can be used
             *     - Numbers cannot be used to start a field code
             *      */
            code?: string;
            /** @description The default value.
             *     For fields that can set multiple default values, specify the value as an array.
             *     The defaultNowValue will take priority if it also specified.
             *     For User/Group/Department fields, an array of objects that include code and type are required.
             *     - properties.{fieldcode}.defaultValue[].code
             *       State the code of the User/Group/Department, or the function "LOGINUSER()".Departments cannot be specified for Apps in Guest spaces.
             *     - properties.{fieldcode}.defaultValue[].type
             *       State the type of the default value
             *         - USER: User
             *         - GROUP: Group
             *         - ORGANIZATION: Department
             *         - FUNCTION: Function
             *      */
            defaultValue?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description An array listing the preset users for the field.
             *      */
            entities?: components["schemas"]["PreviewAppFormFieldsPutEntityForm"][];
            /** @description The field name.
             *      */
            label?: string;
            /**
             * Format: boolean
             * @description The "Hide field name" option.
             *     - true: The field's name will be hidden.
             *     - false: The field's name will be displayed.
             *
             */
            noLabel?: boolean;
            /**
             * Format: boolean
             * @description The "Required field" option.
             *     - true: The field will be a required field.
             *     - false: The field will not be a required field.
             *
             */
            required?: boolean;
            /**
             * @description The field type.
             *     - GROUP: Group
             *     - GROUP_SELECT: Group selection
             *     - CALC: Calculated
             *     - CHECK_BOX: Check box
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - LINK: Link
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number
             *     - ORGANIZATION_SELECT: Department selection
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - USER_SELECT: User selection
             *
             *     For Lookup fields, specify either SINGLE_LINE_TEXT or NUMBER,
             *     depending on the type of the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CATEGORY" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "GROUP" | "GROUP_SELECT" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "ORGANIZATION_SELECT" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "UPDATED_TIME" | "USER_SELECT";
        };
        PreviewAppFormLayoutGetCalcField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetCreatedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetCreatorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetDateField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetDatetimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetDecimalField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetEditorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetFileField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetGroupRow: {
            /** @description The field code of the Table or Group field.
             *     This parameter will not be returned for other row types.
             *      */
            code: string;
            /** @description A list of field layouts for each row inside a Group field.
             *      */
            layout?: components["schemas"]["PreviewAppFormLayoutGetRow"][];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutGetHrField: {
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetLabelField: {
            /** @description The text set in the Label field.
             *     Only returned for Label fields.
             *      */
            label?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetLinkField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetLookupField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetModifiedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetModifierField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetMultipleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetMultipleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetMultipleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetRecordIdField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetReferenceTableField: {
            /** @description The field code.
             *      */
            code: string;
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetRow: {
            /** @description A list of fields in the row.
             *      */
            fields: (components["schemas"]["PreviewAppFormLayoutGetLabelField"] | components["schemas"]["PreviewAppFormLayoutGetSingleLineTextField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleLineTextField"] | components["schemas"]["PreviewAppFormLayoutGetEditorField"] | components["schemas"]["PreviewAppFormLayoutGetDecimalField"] | components["schemas"]["PreviewAppFormLayoutGetCalcField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleCheckField"] | components["schemas"]["PreviewAppFormLayoutGetSingleCheckField"] | components["schemas"]["PreviewAppFormLayoutGetSingleSelectField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleSelectField"] | components["schemas"]["PreviewAppFormLayoutGetFileField"] | components["schemas"]["PreviewAppFormLayoutGetDateField"] | components["schemas"]["PreviewAppFormLayoutGetDatetimeField"] | components["schemas"]["PreviewAppFormLayoutGetTimeField"] | components["schemas"]["PreviewAppFormLayoutGetUserSelectField"] | components["schemas"]["PreviewAppFormLayoutGetLinkField"] | components["schemas"]["PreviewAppFormLayoutGetLookupField"] | components["schemas"]["PreviewAppFormLayoutGetReferenceTableField"] | components["schemas"]["PreviewAppFormLayoutGetSpacerField"] | components["schemas"]["PreviewAppFormLayoutGetHrField"] | components["schemas"]["PreviewAppFormLayoutGetRecordIdField"] | components["schemas"]["PreviewAppFormLayoutGetCreatorField"] | components["schemas"]["PreviewAppFormLayoutGetCreatedAtField"] | components["schemas"]["PreviewAppFormLayoutGetModifierField"] | components["schemas"]["PreviewAppFormLayoutGetModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutGetSingleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetSingleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetSingleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetSpacerField: {
            /** @description The element ID of the Space field.
             *     Only returned for Space fields.
             *      */
            elementId?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, including the height of the field name.
                 *
                 */
                height?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetSubtableRow: {
            code: string;
            fields: (components["schemas"]["PreviewAppFormLayoutGetLabelField"] | components["schemas"]["PreviewAppFormLayoutGetSingleLineTextField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleLineTextField"] | components["schemas"]["PreviewAppFormLayoutGetEditorField"] | components["schemas"]["PreviewAppFormLayoutGetDecimalField"] | components["schemas"]["PreviewAppFormLayoutGetCalcField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleCheckField"] | components["schemas"]["PreviewAppFormLayoutGetSingleCheckField"] | components["schemas"]["PreviewAppFormLayoutGetSingleSelectField"] | components["schemas"]["PreviewAppFormLayoutGetMultipleSelectField"] | components["schemas"]["PreviewAppFormLayoutGetFileField"] | components["schemas"]["PreviewAppFormLayoutGetDateField"] | components["schemas"]["PreviewAppFormLayoutGetDatetimeField"] | components["schemas"]["PreviewAppFormLayoutGetTimeField"] | components["schemas"]["PreviewAppFormLayoutGetUserSelectField"] | components["schemas"]["PreviewAppFormLayoutGetLinkField"] | components["schemas"]["PreviewAppFormLayoutGetLookupField"] | components["schemas"]["PreviewAppFormLayoutGetReferenceTableField"] | components["schemas"]["PreviewAppFormLayoutGetSpacerField"] | components["schemas"]["PreviewAppFormLayoutGetHrField"] | components["schemas"]["PreviewAppFormLayoutGetRecordIdField"] | components["schemas"]["PreviewAppFormLayoutGetCreatorField"] | components["schemas"]["PreviewAppFormLayoutGetCreatedAtField"] | components["schemas"]["PreviewAppFormLayoutGetModifierField"] | components["schemas"]["PreviewAppFormLayoutGetModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutGetTimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutGetUserSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutCalcField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutCreatedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutCreatorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutDateField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutDatetimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutDecimalField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutEditorField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutFileField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutGroupRow: {
            /** @description The field code of the Table or Group field.
             *     This parameter will not be returned for other row types.
             *      */
            code: string;
            /** @description A list of field layouts for each row inside a Group field.
             *      */
            layout?: components["schemas"]["PreviewAppFormLayoutPutRow"][];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutPutHrField: {
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutLabelField: {
            /** @description The text set in the Label field.
             *     Only returned for Label fields.
             *      */
            label?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutLinkField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutLookupField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutModifiedAtField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutModifierField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutMultipleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutMultipleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, excluding the height of the field name.
                 *
                 */
                innerHeight?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutMultipleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutRecordIdField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutReferenceTableField: {
            /** @description The field code.
             *      */
            code: string;
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutRow: {
            /** @description A list of fields in the row.
             *      */
            fields: (components["schemas"]["PreviewAppFormLayoutPutLabelField"] | components["schemas"]["PreviewAppFormLayoutPutSingleLineTextField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleLineTextField"] | components["schemas"]["PreviewAppFormLayoutPutEditorField"] | components["schemas"]["PreviewAppFormLayoutPutDecimalField"] | components["schemas"]["PreviewAppFormLayoutPutCalcField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleCheckField"] | components["schemas"]["PreviewAppFormLayoutPutSingleCheckField"] | components["schemas"]["PreviewAppFormLayoutPutSingleSelectField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleSelectField"] | components["schemas"]["PreviewAppFormLayoutPutFileField"] | components["schemas"]["PreviewAppFormLayoutPutDateField"] | components["schemas"]["PreviewAppFormLayoutPutDatetimeField"] | components["schemas"]["PreviewAppFormLayoutPutTimeField"] | components["schemas"]["PreviewAppFormLayoutPutUserSelectField"] | components["schemas"]["PreviewAppFormLayoutPutLinkField"] | components["schemas"]["PreviewAppFormLayoutPutLookupField"] | components["schemas"]["PreviewAppFormLayoutPutReferenceTableField"] | components["schemas"]["PreviewAppFormLayoutPutSpacerField"] | components["schemas"]["PreviewAppFormLayoutPutHrField"] | components["schemas"]["PreviewAppFormLayoutPutRecordIdField"] | components["schemas"]["PreviewAppFormLayoutPutCreatorField"] | components["schemas"]["PreviewAppFormLayoutPutCreatedAtField"] | components["schemas"]["PreviewAppFormLayoutPutModifierField"] | components["schemas"]["PreviewAppFormLayoutPutModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutPutSingleCheckField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutSingleLineTextField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutSingleSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutSpacerField: {
            /** @description The element ID of the Space field.
             *     Only returned for Space fields.
             *      */
            elementId?: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The height of the field in pixels, including the height of the field name.
                 *
                 */
                height?: number;
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutSubtableRow: {
            code: string;
            fields: (components["schemas"]["PreviewAppFormLayoutPutLabelField"] | components["schemas"]["PreviewAppFormLayoutPutSingleLineTextField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleLineTextField"] | components["schemas"]["PreviewAppFormLayoutPutEditorField"] | components["schemas"]["PreviewAppFormLayoutPutDecimalField"] | components["schemas"]["PreviewAppFormLayoutPutCalcField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleCheckField"] | components["schemas"]["PreviewAppFormLayoutPutSingleCheckField"] | components["schemas"]["PreviewAppFormLayoutPutSingleSelectField"] | components["schemas"]["PreviewAppFormLayoutPutMultipleSelectField"] | components["schemas"]["PreviewAppFormLayoutPutFileField"] | components["schemas"]["PreviewAppFormLayoutPutDateField"] | components["schemas"]["PreviewAppFormLayoutPutDatetimeField"] | components["schemas"]["PreviewAppFormLayoutPutTimeField"] | components["schemas"]["PreviewAppFormLayoutPutUserSelectField"] | components["schemas"]["PreviewAppFormLayoutPutLinkField"] | components["schemas"]["PreviewAppFormLayoutPutLookupField"] | components["schemas"]["PreviewAppFormLayoutPutReferenceTableField"] | components["schemas"]["PreviewAppFormLayoutPutSpacerField"] | components["schemas"]["PreviewAppFormLayoutPutHrField"] | components["schemas"]["PreviewAppFormLayoutPutRecordIdField"] | components["schemas"]["PreviewAppFormLayoutPutCreatorField"] | components["schemas"]["PreviewAppFormLayoutPutCreatedAtField"] | components["schemas"]["PreviewAppFormLayoutPutModifierField"] | components["schemas"]["PreviewAppFormLayoutPutModifiedAtField"])[];
            /**
             * @description The type of row
             *     - ROW: A normal row of fields.
             *     - SUBTABLE: A Table.
             *     - GROUP: A Group field.
             *
             * @enum {string}
             */
            type: "ROW" | "SUBTABLE" | "GROUP";
        };
        PreviewAppFormLayoutPutTimeField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppFormLayoutPutUserSelectField: {
            /** @description The field code.
             *      */
            code: string;
            /** @description An object with data of the field's size.
             *      */
            size?: {
                /**
                 * Format: long
                 * @description The width of the field in pixels.
                 *
                 */
                width?: number;
            };
            /**
             * @description The type of field.
             *     - CALC: Calculated
             *     - CATEGORY: Category
             *     - CHECK_BOX: Check box
             *     - CREATED_TIME: Created datetime
             *     - CREATOR: Created by
             *     - DATE: Date
             *     - DATETIME: Date and time
             *     - DROP_DOWN: Drop-down
             *     - FILE: Attachment
             *     - HR: Border
             *     - LABEL: Label
             *     - LINK: Link
             *     - MODIFIER: Updated by
             *     - MULTI_LINE_TEXT: Text Area
             *     - MULTI_SELECT: Multi-choice
             *     - NUMBER: Number, or Look-up*
             *     - RADIO_BUTTON: Radio button
             *     - RECORD_NUMBER: Record number
             *     - REFERENCE_TABLE: Related Records
             *     - RICH_TEXT: Rich text
             *     - SINGLE_LINE_TEXT: Text, or Look-up*
             *     - SPACER: Blank space
             *     - STATUS: Process management status
             *     - STATUS_ASSIGNEE: Assignee of the Process Management status
             *     - SUBTABLE: Table
             *     - TIME: Time
             *     - UPDATED_TIME: Updated datetime
             *     - USER_SELECT: User selection
             *
             *     *The type of the Look-up field will be the same type as the Key field it's looking up.
             *
             * @enum {string}
             */
            type: "CALC" | "CHECK_BOX" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "DROP_DOWN" | "FILE" | "HR" | "LABEL" | "LINK" | "MODIFIER" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "NUMBER" | "RADIO_BUTTON" | "RECORD_NUMBER" | "REFERENCE_TABLE" | "RICH_TEXT" | "SINGLE_LINE_TEXT" | "SPACER" | "TIME" | "UPDATED_TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT";
        };
        PreviewAppNotificationsGeneralGetNotification: {
            /** @description Option to notify the entity when a comment is posted.
             *     - true: Notify when a comment is posted
             *     - false: Do not notify when a comment is posted
             *      */
            commentAdded?: boolean;
            /** @description An object containing data of the entity the General Notification settings are configured to.
             *      */
            entity?: {
                /** @description The code of the entity the General Notification settings are configured to.
                 *     The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department
                 *
                 *     For guest users, the login name is preceded by `guest/`.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the General Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description Option to notify the entity when a file is imported.
             *     - true: Notify when a file is imported
             *     - false: Do not notify when a file is imported
             *      */
            fileImported?: boolean;
            /** @description The "Include affiliated departments" setting of the Department.
             *     Will always return `false` unless the notifications[].entity.type is set to `ORGANIZATION` or `FIELD_ENTITY` for a Department Selection Field.
             *     - true: Affiliated departments do inherit the General Notification settings
             *     - false: Affiliated departments do not inherit the General Notification settings
             *      */
            includeSubs?: boolean;
            /** @description Option to notify the entity when a record is added.
             *     - true: Notify when a record is added
             *     - false: Do not notify when a record is added
             *      */
            recordAdded?: boolean;
            /** @description Option to notify the entity when a record is edited.
             *     - true: Notify when a record is edited
             *     - false: Do not notify when a record is edited
             *      */
            recordEdited?: boolean;
            /** @description Option to notify the entity when a status is changed.
             *     - true: Notify when a status is changed
             *     - false: Do not notify when a status is changed
             *      */
            statusChanged?: boolean;
        };
        PreviewAppNotificationsGeneralPutNotification: {
            /**
             * Format: boolean
             * @description Option to notify the entity when a comment is posted.
             *     - true: Notify when a comment is posted
             *     - false: Do not notify when a comment is posted
             *
             *     If ignored, this value is false.
             *
             */
            commentAdded?: boolean;
            /** @description An object containing data of the entity the General Notification settings are configured to.
             *     Required when specifying the notifications parameter.
             *      */
            entity: {
                /** @description The code of the entity the General Notification settings are configured to.
                 *     Specify the field code if the notifications[].entity.type parameter is specified as FIELD_ENTITY.
                 *     For guest users, add `guest/` before the login name.
                 *     Required when specifying the entity parameter.
                 *      */
                code: string;
                /**
                 * @description The type of the entity the General Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 *     Required when specifying the entity parameter.
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description Option to notify the entity when a file is imported.
             *     - true: Notify when a file is imported
             *     - false: Do not notify when a file is imported
             *
             *     If ignored, this value is false.
             *
             */
            fileImported?: boolean;
            /**
             * Format: boolean
             * @description The "Include affiliated departments" setting of the Department.
             *     This parameter is available if notifications[].entity.type parameter is specified to ORGANIZATION or FIELD_ENTITY.
             *     - true: Affiliated departments do inherit the General Notification settings
             *     - false: Affiliated departments do not inherit the General Notification settings
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description Option to notify the entity when a record is added.
             *     - true: Notify when a record is added
             *     - false: Do not notify when a record is added
             *
             *     If ignored, this value is false.
             *
             */
            recordAdded?: boolean;
            /**
             * Format: boolean
             * @description Option to notify the entity when a record is edited.
             *     - true: Notify when a record is edited
             *     - false: Do not notify when a record is edited
             *
             *     If ignored, this value is false.
             *
             */
            recordEdited?: boolean;
            /**
             * Format: boolean
             * @description Option to notify the entity when a status is changed.
             *     - true: Notify when a status is changed
             *     - false: Do not notify when a status is changed
             *
             *     If ignored, this value is false.
             *
             */
            statusChanged?: boolean;
        };
        PreviewAppNotificationsPerRecordGetNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the recipients of the Per Record Notification.
             *      */
            targets?: components["schemas"]["PreviewAppNotificationsPerRecordGetTarget"][];
            /** @description The notification subject that is saved under Summary.
             *      */
            title?: string;
        };
        PreviewAppNotificationsPerRecordGetTarget: {
            /** @description An object containing entity details per recipient of the Per Record Notification.
             *      */
            entity?: {
                /** @description The code of the entity the Per Record Notification settings are configured to. The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department
                 *
                 *     For guest users, the login name is preceded by `guest/`.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the Per Record Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description An array of objects containing the recipients of the Per Record Notification.
             *      */
            includeSubs?: boolean;
        };
        PreviewAppNotificationsPerRecordPutNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *     Required when specifying the notifications parameter.
             *
             */
            filterCond: string;
            /** @description An array of objects containing the recipients of the Per Record Notification.
             *     If the array is empty, the Per Record Notification will not have a recipient.
             *     Required when specifying the notifications parameter.
             *      */
            targets: components["schemas"]["PreviewAppNotificationsPerRecordPutTarget"][];
            /** @description The notification subject saved under "Summary".
             *     If ignored, the notification subject will be an empty string.
             *      */
            title?: string;
        };
        PreviewAppNotificationsPerRecordPutTarget: {
            /** @description An object containing entity details per recipient of the Per Record Notification.
             *     Required when specifying the notifications parameter.
             *      */
            entity: {
                /** @description The code of the entity the Per Record Notification settings are configured to.
                 *     Specify the field code if the notifications[].targets[].entity.type parameter is specified as FIELD_ENTITY.
                 *     For guest users, add guest/ before the login name.
                 *     Required when specifying the entity parameter.
                 *      */
                code: string;
                /**
                 * @description The type of the entity the Per Record Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 *     Required when specifying the entity parameter.
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The "Include affiliated departments" setting of the Department. This parameter is available if notifications[].targets[].entity.type parameter is specified to ORGANIZATION or FIELD_ENTITY.
             *     - true: Affiliated departments do inherit the Per Record Notification settings
             *     - false: Affiliated departments do not inherit the Per Record Notification settings
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
        };
        PreviewAppNotificationsReminderGetNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the recipients of the Reminder Notification.
             *      */
            targets?: components["schemas"]["PreviewAppNotificationsReminderGetTarget"][];
            timing?: components["schemas"]["PreviewAppNotificationsReminderGetTimingRelative"] | components["schemas"]["PreviewAppNotificationsReminderGetTimingAbsolute"];
            /** @description The notification subject that is saved under Summary.
             *      */
            title?: string;
        };
        PreviewAppNotificationsReminderGetTarget: {
            /** @description An object containing entity details per recipient of the Reminder Notification.
             *      */
            entity?: {
                /** @description The code of the entity the Reminder Notification settings are configured to.
                 *     - FIELD_ENTITY: The field code of the field
                 *     - For all other entities: The code of the User, Group, or Department. For guest users, the login name is preceded by guest/.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the Reminder Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The Include affiliated departments setting of the Department.
             *     Will always return false unless the notifications[].targets[].entity.type is set to ORGANIZATION or FIELD_ENTITY for a Department Selection Field.
             *     - true: Affiliated departments do inherit the Reminder Notification settings
             *     - false: Affiliated departments do not inherit the Reminder Notification settings
             *      */
            includeSubs?: boolean;
        };
        PreviewAppNotificationsReminderGetTimingAbsolute: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     A negative value indicates the number of days before the notifications[].timing.code date/datetime.
             *
             */
            daysLater?: number;
            /** @description The time when the Reminder notification is sent.
             *     The parameter is returned if the notifications[].timing.code parameter is set to a date field or the At time option is configured.
             *      */
            time?: string;
        };
        PreviewAppNotificationsReminderGetTimingRelative: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *      */
            code?: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     A negative value indicates the number of days before the notifications[].timing.code date/datetime.
             *
             */
            daysLater?: number;
            /**
             * Format: long
             * @description The number of hours after the notifications[].timing.code datetime, shifted by daysLater when the Reminder notification is sent.
             *     A negative value indicates the number of hours before the notifications[].timing.code datetime, shifted by daysLater.
             *     The parameter is returned only if the notifications[].timing.code parameter is set to a Date and Time field and the When hours before/after option is configured (instead of the At time option).
             *
             */
            hoursLater?: number;
        };
        PreviewAppNotificationsReminderPutNotification: {
            /**
             * Format: query
             * @description The record's filter condition in query string format.
             *     The following cases will have the same result:
             *     - "All records" is specified.
             *     - "null" is specified.
             *     - An empty string is specified.
             *     - The parameter is ignored.
             *
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the recipients of the Reminder Notification.
             *     Required when specifying the notifications parameter.
             *      */
            targets: components["schemas"]["PreviewAppNotificationsReminderPutTarget"][];
            timing: components["schemas"]["PreviewAppNotificationsReminderPutTimingRelative"] | components["schemas"]["PreviewAppNotificationsReminderPutTimingAbsolute"];
            /** @description The notification subject that is saved under "Summary".
             *     The maximum limit is 100 characters.
             *     If ignored, the notification subject will be an empty string.
             *      */
            title?: string;
        };
        PreviewAppNotificationsReminderPutTarget: {
            /** @description An object containing entity details per recipient of the Reminder Notification.
             *     Required when specifying the notifications[].targets parameter.
             *      */
            entity: {
                /** @description The code of the entity the Reminder Notification settings are configured to.
                 *     Specify the field code if the notifications[].targets[].entity.type parameter is specified as FIELD_ENTITY.
                 *     For guest users, the login name is preceded by guest/.
                 *     Required when specifying the notifications[].targets[].entity parameter.
                 *      */
                code: string;
                /**
                 * @description The type of the entity the Reminder Notification settings are configured to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: Created By, Updated By, User Selection, Group Selection, and Department Selection Fields
                 *
                 *     For Apps in a guest space, specifying a Department will result in an error.
                 *     Required when specifying the notifications[].targets[].entity parameter.
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The "Include affiliated departments" setting of the Department. This parameter is available if notifications[].targets[].entity.type parameter is specified to ORGANIZATION or FIELD_ENTITY.
             *     - true: Affiliated departments do inherit the Reminder Notification settings
             *     - false: Affiliated departments do not inherit the Reminder Notification settings
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
        };
        PreviewAppNotificationsReminderPutTimingAbsolute: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *     The field code of the following fields can be used:
             *     - Created datetime
             *     - Updated datetime
             *     - Date
             *     - Date and time
             *
             *     Required when specifying the notifications[].timing parameter.
             *      */
            code: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     Input a negative value for the number of days before the notifications[].timing.code date/datetime.
             *     The value must be between -10000 and 10000.
             *     Required when specifying the notifications[].timing parameter.
             *
             */
            daysLater: number;
            /** @description The time when the Reminder notification is sent.
             *     Input the time in HH:MM format.
             *     MM must be "00", "10", "20", "30", "40" or "50".
             *     Examples: "09:00", "14:30", or "23:50"
             *     Required when specifying the notifications[].timing parameter and not specifying the notifications[].timing.hoursLater parameter.
             *      */
            time: string;
        };
        PreviewAppNotificationsReminderPutTimingRelative: {
            /** @description The field code of the field used to determine the Reminder notification's timing.
             *     The field code of the following fields can be used:
             *     - Created datetime
             *     - Updated datetime
             *     - Date
             *     - Date and time
             *
             *     Required when specifying the notifications[].timing parameter.
             *      */
            code: string;
            /**
             * Format: long
             * @description The number of days after the notifications[].timing.code date/datetime when the Reminder notification is sent.
             *     Input a negative value for the number of days before the notifications[].timing.code date/datetime.
             *     The value must be between -10000 and 10000.
             *     Required when specifying the notifications[].timing parameter.
             *
             */
            daysLater: number;
            /**
             * Format: long
             * @description The number of hours after the notifications[].timing.code datetime shifted by daysLater when the Reminder notification is sent.
             *     Input a negative value for the number of hours before the notifications[].timing.code datetime.
             *     The value must be between -10000 and 10000.
             *     Required when specifying the notifications[].timing parameter and not specifying the notifications[].timing.time parameter.
             *
             */
            hoursLater: number;
        };
        PreviewAppPluginsGetPluginForm: {
            /** @description The status of the plugin.
             *     `true` for active plugins, and `false` for inactive plugins.
             *      */
            enabled?: boolean;
            /** @description The Plugin ID.
             *      */
            id?: string;
            /** @description The name of the Plugin.
             *      */
            name?: string;
        };
        PreviewAppReportsGetFieldAggregation: {
            /** @description The field code of the field used in the Function option.
             *     This parameter is not returned if the reports.{graphname}.aggregations[].type is set to COUNT.
             *      */
            code?: string;
            /**
             * @description The type of the Function option.
             *     - COUNT: Number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             * @enum {string}
             */
            type?: "SUM" | "AVERAGE" | "MAX" | "MIN";
        };
        PreviewAppReportsGetGroup: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
        };
        PreviewAppReportsGetGroupDate: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY";
        };
        PreviewAppReportsGetGroupDateTime: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR" | "MINUTE";
        };
        PreviewAppReportsGetGroupTime: {
            /** @description The field code of the field used to determine the Group by option.
             *      */
            code?: string;
            /**
             * @description The time unit used for the Group by option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     This parameter is returned if one of the following fields are specified in reports.{graphname}.groups[].code:
             *     - Created datetime
             *     - Updated datetime
             *     - Date and time
             *     - Date (Only YEAR, QUARTER, MONTH, WEEK, or DAY)
             *     - Time (Only HOUR or MINUTE)
             *
             *     If no unit was specified (i.e. left as "--"), the minimum time unit will be returned:
             *     - For DateTime or Time fields: MINUTE
             *     - For Date fields: DAY
             *
             * @enum {string}
             */
            per?: "HOUR" | "MINUTE";
        };
        PreviewAppReportsGetPeriodDay: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "DAY";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        PreviewAppReportsGetPeriodHour: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "HOUR";
            /**
             * Format: long
             * @description The minute when the hourly Periodic Report will be generated.
             *     The minute will be returned as 0, 10, 20, 30, 40 or 50.
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to HOUR.
             *
             */
            minute?: number;
        };
        PreviewAppReportsGetPeriodMonth: {
            /** @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth?: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "MONTH";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        PreviewAppReportsGetPeriodQuarter: {
            /** @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth?: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "QUARTER";
            /**
             * @description The months when the quarterly Periodic Report will be generated.
             *     - JAN_APR_JUL_OCT: January, April, July, October
             *     - FEB_MAY_AUG_NOV: February, May, August, November
             *     - MAR_JUN_SEP_DEC: March, June, September, December
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER.
             *
             * @enum {string}
             */
            pattern?: "JAN_APR_JUL_OCT" | "FEB_MAY_AUG_NOV" | "MAR_JUN_SEP_DEC";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        PreviewAppReportsGetPeriodWeek: {
            /**
             * @description The day of the week when the Periodic Report will be generated.
             *     - SUNDAY
             *     - MONDAY
             *     - TUESDAY
             *     - WEDNESDAY
             *     - THURSDAY
             *     - FRIDAY
             *     - SATURDAY
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to WEEK.
             *
             * @enum {string}
             */
            dayOfWeek?: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "WEEK";
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        PreviewAppReportsGetPeriodYear: {
            /**
             * Format: long
             * @description The day when the Periodic Report will be generated.
             *     The day is returned as an integer, ranging from 1 to 31, or set as END_OF_MONTH*.
             *     *Only for graphs where the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *
             */
            dayOfMonth?: number;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             * @enum {string}
             */
            every?: "YEAR";
            /**
             * Format: long
             * @description The month when the Periodic Report will be generated.
             *     The month is returned as an integer, ranging from 1 (January) to 12 (December).
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR.
             *
             */
            month?: number;
            /** @description The time when the Periodic Report will be generated.
             *     Format: HH:MM
             *     This parameter is returned only if the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time?: string;
        };
        PreviewAppReportsGetRecordAggregation: {
            /**
             * @description The type of the Function option.
             *     - COUNT: Number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             * @enum {string}
             */
            type?: "COUNT";
        };
        PreviewAppReportsGetReport: {
            /** @description An array of objects containing the Function options.
             *      */
            aggregations?: (components["schemas"]["PreviewAppReportsGetRecordAggregation"] | components["schemas"]["PreviewAppReportsGetFieldAggregation"])[];
            /**
             * @description The chart type of the graph. For more information, refer to the following article:
             *     Chart Types and Their Usage (External link)
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             * @enum {string}
             */
            chartType?: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the Filter option.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the Group by options.
             *     The order of the objects are in the order of Level 1, Level 2, and Level 3.
             *     Levels that are not set will not be included in the array.
             *
             *     This parameter is returned only if the Group by option is configured.
             *      */
            groups?: (components["schemas"]["PreviewAppReportsGetGroup"] | components["schemas"]["PreviewAppReportsGetGroupDateTime"] | components["schemas"]["PreviewAppReportsGetGroupDate"] | components["schemas"]["PreviewAppReportsGetGroupTime"])[];
            /**
             * Format: long
             * @description The ID of the graph.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the graphs, starting from 0.
             *
             */
            index?: number;
            /** @description The name of the graph.
             *     The maximum limit is 64 characters.
             *     When the lang request parameter is specified, the graph's name in that language will be returned.
             *      */
            name?: string;
            /** @description An objects containing the Periodic Reports options.
             *     If the Generate reports periodically option have never been configured, null will be returned.
             *      */
            periodicReport?: {
                /** @description The activation status of the Periodic Reports option.
                 *     - true: Active
                 *     - false: Inactive
                 *      */
                active?: boolean;
                period?: components["schemas"]["PreviewAppReportsGetPeriodYear"] | components["schemas"]["PreviewAppReportsGetPeriodQuarter"] | components["schemas"]["PreviewAppReportsGetPeriodMonth"] | components["schemas"]["PreviewAppReportsGetPeriodWeek"] | components["schemas"]["PreviewAppReportsGetPeriodDay"] | components["schemas"]["PreviewAppReportsGetPeriodHour"];
            };
            /** @description An array of objects containing the Sort by options.
             *      */
            sorts?: components["schemas"]["PreviewAppReportsGetSort"][];
        };
        PreviewAppReportsGetReportWithChartMode: {
            /** @description An array of objects containing the Function options.
             *      */
            aggregations?: (components["schemas"]["PreviewAppReportsGetRecordAggregation"] | components["schemas"]["PreviewAppReportsGetFieldAggregation"])[];
            /**
             * @description The display mode of the graph.
             *     - NORMAL: Clustered graph or Non-stacked graph
             *     - STACKED: Stacked graph
             *     - PERCENTAGE: 100% stacked graph
             *
             *     If the reports.{graphname}.chartType parameter is set to BAR or COLUMN, then NORMAL refers to Clustered graph display mode.
             *     If the reports.{graphname}.chartType parameter is set to AREA or SPLINE\_AREA, then NORMAL refers to Non-stacked graph display mode.
             *     This parameter is returned only if the reports.{graphname}.chartType parameter is set to BAR, COLUMN, AREA, or SPLINE\_AREA.
             *
             * @enum {string}
             */
            chartMode?: "NORMAL" | "STACKED" | "PERCENTAGE";
            /**
             * @description The chart type of the graph. For more information, refer to the following article:
             *     Chart Types and Their Usage (External link)
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             * @enum {string}
             */
            chartType?: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the Filter option.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the Group by options.
             *     The order of the objects are in the order of Level 1, Level 2, and Level 3.
             *     Levels that are not set will not be included in the array.
             *
             *     This parameter is returned only if the Group by option is configured.
             *      */
            groups?: (components["schemas"]["PreviewAppReportsGetGroup"] | components["schemas"]["PreviewAppReportsGetGroupDateTime"] | components["schemas"]["PreviewAppReportsGetGroupDate"] | components["schemas"]["PreviewAppReportsGetGroupTime"])[];
            /**
             * Format: long
             * @description The ID of the graph.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The order of the graphs, starting from 0.
             *
             */
            index?: number;
            /** @description The name of the graph.
             *     The maximum limit is 64 characters.
             *     When the lang request parameter is specified, the graph's name in that language will be returned.
             *      */
            name?: string;
            /** @description An objects containing the Periodic Reports options.
             *     If the Generate reports periodically option have never been configured, null will be returned.
             *      */
            periodicReport?: {
                /** @description The activation status of the Periodic Reports option.
                 *     - true: Active
                 *     - false: Inactive
                 *      */
                active?: boolean;
                period?: components["schemas"]["PreviewAppReportsGetPeriodYear"] | components["schemas"]["PreviewAppReportsGetPeriodQuarter"] | components["schemas"]["PreviewAppReportsGetPeriodMonth"] | components["schemas"]["PreviewAppReportsGetPeriodWeek"] | components["schemas"]["PreviewAppReportsGetPeriodDay"] | components["schemas"]["PreviewAppReportsGetPeriodHour"];
            };
            /** @description An array of objects containing the Sort by options.
             *      */
            sorts?: components["schemas"]["PreviewAppReportsGetSort"][];
        };
        PreviewAppReportsGetSort: {
            /**
             * @description How the graph is sorted.
             *     - TOTAL: Total
             *     - GROUP1: Level 1
             *     - GROUP2: Level 2
             *     - GROUP3: Level 3
             *
             * @enum {string}
             */
            by?: "TOTAL" | "GROUP1" | "GROUP2" | "GROUP3";
            /**
             * @description The order of sorting.
             *     - ASC: Ascending order
             *     - DESC: Descending order
             *
             * @enum {string}
             */
            order?: "ASC" | "DESC";
        };
        PreviewAppReportsPutFieldAggregation: {
            /** @description The field code of the field to be used in the "Function" option.
             *
             *     Elements with type set to SUM or AVERAGE can specify the following fields:
             *     - Number fields
             *     - Calculated fields (Number)
             *     - Calculated fields (Number with thousands separator)
             *     - Calculated fields (Hours & minutes) within tables
             *     - Calculated fields (Days & hours & minutes) within tables
             *     - Lookup fields with the Key Field set as a Number field
             *
             *     Elements with type set to MAX or MIN can specify the following fields:
             *     - Number field
             *     - Calculated fields (Number)
             *     - Calculated fields (Number with thousands separator)
             *     - Calculated fields (Date & time) within tables
             *     - Calculated fields (Date) within tables
             *     - Calculated fields (Time) within tables
             *     - Calculated fields (Hours & minutes) within tables
             *     - Calculated fields (Days & hours & minutes) within tables
             *     - Date fields within tables
             *     - Date and time fields within tables
             *     - Time fields within tables
             *     - Created datetime fields within tables
             *     - Updated datetime fields within tables
             *     - Lookup fields with the Key Field set as a Number field
             *
             *     Required for each element of the reports.{graphname}.aggregations parameter, except for elements with type set to COUNT.
             *      */
            code: string;
            /**
             * @description The type of the "Function" option.
             *     - COUNT: number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             *     Required when specifying the reports.{graphname}.aggregations parameter.
             *
             * @enum {string}
             */
            type: "SUM" | "AVERAGE" | "MAX" | "MIN";
        };
        PreviewAppReportsPutGroup: {
            /** @description The field code of the field used to determine the "Group by" option.
             *     Required when specifying the reports.{graphname}.groups parameter.
             *      */
            code: string;
            /**
             * @description The time unit used for the "Group by" option.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *     - MINUTE: by the minute
             *
             *     The following time units ​​can be specified for each field type set to reports.{graphname}.groups[].code:
             *     - Created datetime: All values
             *     - Updated datetime: All values
             *     - Date and time: All values
             *     - Date: YEAR, QUARTER, MONTH, WEEK, or DAY
             *     - Time: HOUR or MINUTE
             *
             *     Required if one of the fields above is specified in reports.{graphname}.groups[].code.
             *
             * @enum {string}
             */
            per?: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR" | "MINUTE";
        };
        PreviewAppReportsPutPeriodDay: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /** @description The time when the Periodic Report will be generated.
             *     Input the time in HH:MM format.
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time: string;
        };
        PreviewAppReportsPutPeriodHour: {
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /**
             * Format: long
             * @description The minute when the hourly Periodic Report will be generated.
             *     Set as "0", "10", "20", "30", "40" or "50".
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to HOUR.
             *
             */
            minute: number;
        };
        PreviewAppReportsPutPeriodMonth: {
            /** @description The day when the Periodic Report will be generated.
             *     - Integers from 1 to 31: The specific day of the month
             *     - END_OF_MONTH: The last day of the month*
             *
             *     *Only if reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /** @description The time when the Periodic Report will be generated.
             *     Input the time in HH:MM format.
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time: string;
        };
        PreviewAppReportsPutPeriodQuarter: {
            /** @description The day when the Periodic Report will be generated.
             *     - Integers from 1 to 31: The specific day of the month
             *     - END_OF_MONTH: The last day of the month*
             *
             *     *Only if reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *      */
            dayOfMonth: string;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /**
             * @description The months when the quarterly Periodic Report will be generated.
             *     - JAN_APR_JUL_OCT: January, April, July, October
             *     - FEB_MAY_AUG_NOV: February, May, August, November
             *     - MAR_JUN_SEP_DEC: March, June, September, December
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to QUARTER.
             *
             * @enum {string}
             */
            pattern: "JAN_APR_JUL_OCT" | "FEB_MAY_AUG_NOV" | "MAR_JUN_SEP_DEC";
            /** @description The time when the Periodic Report will be generated.
             *     Input the time in HH:MM format.
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time: string;
        };
        PreviewAppReportsPutPeriodWeek: {
            /**
             * @description The day of the week when the Periodic Report will be generated.
             *     - SUNDAY
             *     - MONDAY
             *     - TUESDAY
             *     - WEDNESDAY
             *     - THURSDAY
             *     - FRIDAY
             *     - SATURDAY
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to WEEK.
             *
             * @enum {string}
             */
            dayOfWeek: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /** @description The time when the Periodic Report will be generated.
             *     Input the time in HH:MM format.
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time: string;
        };
        PreviewAppReportsPutPeriodYear: {
            /**
             * Format: long
             * @description The day when the Periodic Report will be generated.
             *     - Integers from 1 to 31: The specific day of the month
             *     - END_OF_MONTH: The last day of the month*
             *
             *     *Only if reports.{graphname}.periodicReport.period.every parameter is set to QUARTER or MONTH.
             *
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, or MONTH.
             *
             */
            dayOfMonth: number;
            /**
             * @description The time interval type used to determine when to generate the Periodic Reports.
             *     - YEAR: by the year
             *     - QUARTER: by the quarter
             *     - MONTH: by the month
             *     - WEEK: by the week
             *     - DAY: by the day
             *     - HOUR: by the hour
             *
             *     Required when specifying the reports.{graphname}.periodicReport.period parameter.
             *
             * @enum {string}
             */
            every: "YEAR" | "QUARTER" | "MONTH" | "WEEK" | "DAY" | "HOUR";
            /**
             * Format: long
             * @description The month when the Periodic Report will be generated.
             *     Specify the month as an integer, ranging from 1 (January) to 12 (December).
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR.
             *
             */
            month: number;
            /** @description The time when the Periodic Report will be generated.
             *     Input the time in HH:MM format.
             *     Required when the reports.{graphname}.periodicReport.period.every parameter is set to YEAR, QUARTER, MONTH, WEEK, or DAY.
             *      */
            time: string;
        };
        PreviewAppReportsPutPeriodicReport: {
            /**
             * Format: boolean
             * @description The activation status of the "Periodic Reports" option.
             *     - true: Active
             *     - false: Inactive
             *
             *     If this parameter is ignored when creating a new Periodic Report, this value is set to true.
             *     If this parameter is ignored when updating an existing Periodic Report, this value is not updated.
             *
             */
            active?: boolean;
            period?: components["schemas"]["PreviewAppReportsPutPeriodYear"] | components["schemas"]["PreviewAppReportsPutPeriodQuarter"] | components["schemas"]["PreviewAppReportsPutPeriodMonth"] | components["schemas"]["PreviewAppReportsPutPeriodWeek"] | components["schemas"]["PreviewAppReportsPutPeriodDay"] | components["schemas"]["PreviewAppReportsPutPeriodHour"];
        };
        PreviewAppReportsPutRecordAggregation: {
            /**
             * @description The type of the "Function" option.
             *     - COUNT: number of records
             *     - SUM: Total
             *     - AVERAGE: Average
             *     - MAX: Maximum
             *     - MIN: Minimum
             *
             *     Required when specifying the reports.{graphname}.aggregations parameter.
             *
             * @enum {string}
             */
            type: "COUNT";
        };
        PreviewAppReportsPutReport: {
            /** @description An array of objects containing the "Function" options.
             *     The maximum limit is 10 elements in the array.
             *
             *     If the reports.{graphname}.chartType parameter is set to PIVOT_TABLE, only 1 element can be set in the array.
             *
             *     Required when adding a new graph.
             *      */
            aggregations?: (components["schemas"]["PreviewAppReportsPutRecordAggregation"] | components["schemas"]["PreviewAppReportsPutFieldAggregation"])[];
            /**
             * @description The chart type of the graph.
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             *     Required when updating an existing graph, or creating a new graph.
             *
             * @enum {string}
             */
            chartType: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the "Filter" option.
             *     If this parameter is ignored for a new graph, it is the same as when "All records" is specified.
             *     If this parameter is ignored for an existing graph, the filter setting will not be changed.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the "Group by" options.
             *     The order of the objects are in the order of "Level 1", "Level 2", and "Level 3".
             *
             *     The request will fail if the reports.{graphname}.chartType parameter is set to PIVOT_TABLE and reports.{graphname}.groups has less than one object.
             *
             *     Required when adding a new graph.
             *      */
            groups?: components["schemas"]["PreviewAppReportsPutGroup"][];
            /**
             * Format: long
             * @description The order of the graphs.
             *     The graph is sorted in ascending order, starting from 0.
             *     The request will fail if there are duplicate values.
             *
             *     Required when updating an existing graph, or creating a new graph.
             *
             */
            index: number;
            /** @description The name of the graph.
             *     1 to 64 characters can be specified.
             *
             *     When adding a new graph, the request will fail if the value of this parameter is not the same as reports.{graphname}.
             *
             *     Required when adding a new graph.
             *      */
            name?: string;
            periodicReport?: components["schemas"]["PreviewAppReportsPutPeriodicReport"];
            /** @description An array of objects containing the "Sort by" options.
             *     The maximum limit is 3 elements in the array.
             *
             *     Required when adding a new graph.
             *      */
            sorts?: components["schemas"]["PreviewAppReportsPutSort"][];
        };
        PreviewAppReportsPutReportResult: {
            /**
             * Format: long
             * @description The ID of the graph.
             *
             */
            id?: number;
        };
        PreviewAppReportsPutReportWithChartMode: {
            /** @description An array of objects containing the "Function" options.
             *     The maximum limit is 10 elements in the array.
             *
             *     If the reports.{graphname}.chartType parameter is set to PIVOT_TABLE, only 1 element can be set in the array.
             *
             *     Required when adding a new graph.
             *      */
            aggregations?: (components["schemas"]["PreviewAppReportsPutRecordAggregation"] | components["schemas"]["PreviewAppReportsPutFieldAggregation"])[];
            /**
             * @description The display mode of the graph.
             *     - NORMAL: Clustered graph or Non-stacked graph
             *     - STACKED: Stacked graph
             *     - PERCENTAGE: 100% stacked graph
             *
             *     If the reports.{graphname}.chartType parameter is set to BAR or COLUMN, NORMAL refers to "Clustered graph" display mode.
             *     If the reports.{graphname}.chartType parameter is set to AREA or SPLINE_AREA, NORMAL refers to "Non-stacked graph" display mode.
             *
             *     Required when the reports.{graphname}.chartType parameter is set to BAR, COLUMN, AREA, or SPLINE_AREA.
             *
             * @enum {string}
             */
            chartMode: "NORMAL" | "STACKED" | "PERCENTAGE";
            /**
             * @description The chart type of the graph.
             *     - BAR: Bar chart
             *     - COLUMN: Column chart
             *     - PIE: Pie chart
             *     - LINE: Line chart
             *     - PIVOT_TABLE: Pivot Table
             *     - TABLE: Table
             *     - AREA: Area chart
             *     - SPLINE: Spline chart
             *     - SPLINE_AREA: Spline area chart
             *
             *     Required when updating an existing graph, or creating a new graph.
             *
             * @enum {string}
             */
            chartType: "PIE" | "LINE" | "SPLINE" | "TABLE" | "PIVOT_TABLE" | "BAR" | "COLUMN" | "AREA" | "SPLINE_AREA";
            /**
             * Format: query
             * @description The record's filter condition in query string format that reflects the "Filter" option.
             *     If this parameter is ignored for a new graph, it is the same as when "All records" is specified.
             *     If this parameter is ignored for an existing graph, the filter setting will not be changed.
             *     The request will fail if a deleted User, Group, or Organization is specified in the filter condition.
             *
             */
            filterCond?: string;
            /** @description An array of objects containing the "Group by" options.
             *     The order of the objects are in the order of "Level 1", "Level 2", and "Level 3".
             *
             *     The request will fail if the reports.{graphname}.chartType parameter is set to PIVOT_TABLE and reports.{graphname}.groups has less than one object.
             *
             *     Required when adding a new graph.
             *      */
            groups?: components["schemas"]["PreviewAppReportsPutGroup"][];
            /**
             * Format: long
             * @description The order of the graphs.
             *     The graph is sorted in ascending order, starting from 0.
             *     The request will fail if there are duplicate values.
             *
             *     Required when updating an existing graph, or creating a new graph.
             *
             */
            index: number;
            /** @description The name of the graph.
             *     1 to 64 characters can be specified.
             *
             *     When adding a new graph, the request will fail if the value of this parameter is not the same as reports.{graphname}.
             *
             *     Required when adding a new graph.
             *      */
            name?: string;
            periodicReport?: components["schemas"]["PreviewAppReportsPutPeriodicReport"];
            /** @description An array of objects containing the "Sort by" options.
             *     The maximum limit is 3 elements in the array.
             *
             *     Required when adding a new graph.
             *      */
            sorts?: components["schemas"]["PreviewAppReportsPutSort"][];
        };
        PreviewAppReportsPutSort: {
            /**
             * @description How the graph is sorted.
             *     - TOTAL: Total
             *     - GROUP1: Level 1
             *     - GROUP2: Level 2
             *     - GROUP3: Level 3
             *
             *     Required when specifying the reports.{graphname}.sorts parameter.
             *
             * @enum {string}
             */
            by: "TOTAL" | "GROUP1" | "GROUP2" | "GROUP3";
            /**
             * @description The order of sorting.
             *     - ASC: Ascending order
             *     - DESC: Descending order
             *
             *     Required when specifying the reports.{graphname}.sorts parameter.
             *
             * @enum {string}
             */
            order: "ASC" | "DESC";
        };
        PreviewAppSettingsGetIconFileForm: {
            /** @description An object containing data of uploaded icon files.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        PreviewAppSettingsGetIconPresetForm: {
            /**
             * @description The key identifier of the icon.
             *
             * @enum {string}
             */
            key: "APP1" | "APP2" | "APP3" | "APP4" | "APP5" | "APP6" | "APP7" | "APP8" | "APP9" | "APP10" | "APP11" | "APP12" | "APP13" | "APP14" | "APP15" | "APP16" | "APP17" | "APP18" | "APP19" | "APP20" | "APP21" | "APP22" | "APP23" | "APP24" | "APP25" | "APP26" | "APP27" | "APP28" | "APP29" | "APP30" | "APP31" | "APP32" | "APP33" | "APP34" | "APP35" | "APP36" | "APP37" | "APP38" | "APP39" | "APP40" | "APP41" | "APP42" | "APP43" | "APP44" | "APP45" | "APP46" | "APP47" | "APP48" | "APP49" | "APP50" | "APP51" | "APP52" | "APP53" | "APP54" | "APP55" | "APP56" | "APP57" | "APP58" | "APP59" | "APP60" | "APP61" | "APP62" | "APP63" | "APP64" | "APP65" | "APP66" | "APP67" | "APP68" | "APP69" | "APP70" | "APP71" | "APP72" | "APP73" | "APP74" | "APP75" | "APP76" | "APP77" | "APP78" | "APP79" | "APP80" | "APP81" | "APP82" | "APP83" | "APP84" | "APP85" | "APP86" | "APP87" | "APP88" | "APP89" | "APP90";
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        PreviewAppSettingsGetNumberPrecision: {
            /**
             * Format: number
             * @description The Number of Decimal Places to Round setting.
             *
             */
            decimalPlaces?: string;
            /**
             * Format: number
             * @description The Total Number of Digits setting.
             *
             */
            digits?: string;
            /**
             * @description The Rounding setting
             *     - HALF_EVEN: Round to nearest even number
             *     - UP: Round up
             *     - DOWN: Round down
             *
             * @enum {string}
             */
            roundingMode?: "HALF_EVEN" | "UP" | "DOWN";
        };
        PreviewAppSettingsGetTitleField: {
            /** @description The field code of the field used as the title of the record.
             *      */
            code?: string;
            /**
             * @description The option of The field to be used as the record title settings.
             *     - AUTO: The Set automatically option.
             *     - MANUAL: The Set manually option.
             *
             * @enum {string}
             */
            selectionMode: "AUTO" | "MANUAL";
        };
        PreviewAppSettingsPutIconFileForm: {
            /** @description An object containing data of uploaded icon files.
             *      */
            file: {
                /** @description The MIME type of the uploaded file.
                 *      */
                contentType?: string;
                /** @description The fileKey of the uploaded file.
                 *      */
                fileKey: string;
                /** @description The file name of the uploaded file.
                 *      */
                name?: string;
                /** @description  The byte size of the uploaded file.
                 *      */
                size?: string;
            };
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        PreviewAppSettingsPutIconPresetForm: {
            /**
             * @description The key identifier of the icon.
             *
             * @enum {string}
             */
            key: "APP1" | "APP2" | "APP3" | "APP4" | "APP5" | "APP6" | "APP7" | "APP8" | "APP9" | "APP10" | "APP11" | "APP12" | "APP13" | "APP14" | "APP15" | "APP16" | "APP17" | "APP18" | "APP19" | "APP20" | "APP21" | "APP22" | "APP23" | "APP24" | "APP25" | "APP26" | "APP27" | "APP28" | "APP29" | "APP30" | "APP31" | "APP32" | "APP33" | "APP34" | "APP35" | "APP36" | "APP37" | "APP38" | "APP39" | "APP40" | "APP41" | "APP42" | "APP43" | "APP44" | "APP45" | "APP46" | "APP47" | "APP48" | "APP49" | "APP50" | "APP51" | "APP52" | "APP53" | "APP54" | "APP55" | "APP56" | "APP57" | "APP58" | "APP59" | "APP60" | "APP61" | "APP62" | "APP63" | "APP64" | "APP65" | "APP66" | "APP67" | "APP68" | "APP69" | "APP70" | "APP71" | "APP72" | "APP73" | "APP74" | "APP75" | "APP76" | "APP77" | "APP78" | "APP79" | "APP80" | "APP81" | "APP82" | "APP83" | "APP84" | "APP85" | "APP86" | "APP87" | "APP88" | "APP89" | "APP90";
            /**
             * @description The icon type:
             *     - FILE: An uploaded image.
             *     - PRESET: A preset icon within Kintone.
             *
             * @enum {string}
             */
            type: "FILE" | "PRESET";
        };
        PreviewAppSettingsPutNumberPrecision: {
            /**
             * Format: number
             * @description The Number of Decimal Places to Round setting.
             *
             */
            decimalPlaces?: string;
            /**
             * Format: number
             * @description The Total Number of Digits setting.
             *
             */
            digits?: string;
            /**
             * @description The Rounding setting
             *     - HALF_EVEN: Round to nearest even number
             *     - UP: Round up
             *     - DOWN: Round down
             *
             * @enum {string}
             */
            roundingMode?: "HALF_EVEN" | "UP" | "DOWN";
        };
        PreviewAppSettingsPutTitleField: {
            /** @description The field code of the field used as the title of the record.
             *      */
            code?: string;
            /**
             * @description The option of The field to be used as the record title settings.
             *     - AUTO: The Set automatically option.
             *     - MANUAL: The Set manually option.
             *
             * @enum {string}
             */
            selectionMode: "AUTO" | "MANUAL";
        };
        PreviewAppStatusGetActionForm: {
            /** @description The branch criteria of the action.
             *      */
            filterCond?: string;
            /** @description The status before taking action.
             *      */
            from?: string;
            /** @description The Action name.
             *      */
            name?: string;
            /** @description The status after taking action.
             *      */
            to?: string;
        };
        PreviewAppStatusGetAssigneeEntityForm: {
            /** @description An object containing user data of the Assignees.
             *     Inactive users, deleted users/departments/groups and deleted custom fields will not be included in the response.
             *      */
            entity?: {
                /** @description The code of the Assignee.
                 *     The following entities will return the following values:
                 *     - FIELD_ENTITY: The field code of the field
                 *     - CREATOR: null
                 *     - CUSTOM_FIELD: The field code of the Custom Fields.
                 *
                 *     To specify guest space users, add the string such as, guest/ before the guest's log in name.
                 *      */
                code?: string;
                /**
                 * @description The entity type of the Assignee.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User/Group/Department selection field
                 *     - CREATOR: Created by field
                 *     - CUSTOM_FIELD: Custom Fields
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY" | "CREATOR" | "CUSTOM_FIELD";
            };
            /** @description The Include affiliated departments settings of the department.
             *     - true: Affiliated departments are included as Assignees
             *     - false: Affiliated departments are not included as Assignees
             *      */
            includeSubs?: boolean;
        };
        PreviewAppStatusGetStateForm: {
            /** @description An object containing data of the Assignee settings.
             *      */
            assignee?: {
                /** @description An array listing data of the Assignees. They are listed in the same order as in the GUI.
                 *      */
                entities?: components["schemas"]["PreviewAppStatusGetAssigneeEntityForm"][];
                /**
                 * @description The Assignee List type of the Status.
                 *     - ONE: User chooses one assignee from the list to take action
                 *     - ALL: All assignees in the list must take action
                 *     - ANY: One assignee in the list must take action
                 *
                 *     The status with the lowest index will always return `ONE`.
                 *
                 * @enum {string}
                 */
                type?: "ONE" | "ALL" | "ANY";
            };
            /**
             * Format: long
             * @description The display order (ascending) of the Status, when listed with the other statuses.
             *
             */
            index?: number;
            /** @description The status name.
             *      */
            name?: string;
        };
        PreviewAppStatusPutActionForm: {
            /** @description The branch criteria of the action, specified as a query.
             *     The Status field cannot be included in the query.
             *      */
            filterCond?: string;
            /** @description The Status name before taking action.
             *     If a Status name that you want to specify has been changed, place the changed value for this parameter.
             *     Required, if setting the actions parameter.
             *      */
            from: string;
            /** @description The Action name.
             *     The maximum length is 64 characters.
             *     Required, if setting the actions parameter.
             *      */
            name: string;
            /** @description The Status name after taking action.
             *     If a Status name that you want to specify has been changed, place the changed value for this parameter.
             *     Required, if setting the actions parameter.
             *      */
            to: string;
        };
        PreviewAppStatusPutAssigneeEntityForm: {
            /** @description An object containing user data of the Assignees.
             *     Required, if setting the entities parameter.
             *      */
            entity: {
                /** @description The code of the Assignee.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If "FIELD_ENTITY" is specified for the entity.type, state the field code of the following fields:
                 *     - Created by
                 *     - Updated by
                 *     - User selection
                 *     - Department selection
                 *     - Group selection
                 *     If "CUSTOM_FIELD" is specified for entity.type, state the field code of the Custom Field.
                 *     If "CREATOR" is specified for entity.type, ignore this parameter.
                 *      */
                code?: string;
                /**
                 * @description The entity type of the Assignee.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User/Group/Department selection field
                 *     - CREATOR: Created by field
                 *     - CUSTOM_FIELD: A Custom Field
                 *
                 *     Required, for each entity stated.
                 *     Departments cannot be specified in guest space Apps.
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY" | "CREATOR" | "CUSTOM_FIELD";
            };
            /**
             * Format: boolean
             * @description The "Include affiliated departments" settings of the department.
             *     - true: Affiliated departments are included as Assignees
             *     - false: Affiliated departments are not included as Assignees
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
        };
        PreviewAppStatusPutStateForm: {
            /** @description An object containing data of the Assignee settings.
             *      */
            assignee?: {
                /** @description An array listing data of the Assignees.
                 *     Required, if setting the {status_name}.assignee parameter.
                 *      */
                entities: components["schemas"]["PreviewAppStatusPutAssigneeEntityForm"][];
                /**
                 * @description The Assignee List type of the Status.
                 *     - ONE : User chooses one assignee from the list to take action
                 *     - ALL : All Assignees in the list must take action
                 *     - ANY : One assignee in the list must take action
                 *
                 *     Required, if setting the {status_name}.assignee parameter.
                 *
                 * @enum {string}
                 */
                type: "ONE" | "ALL" | "ANY";
            };
            /**
             * Format: long
             * @description The display order (ascending from 0) of the Status, when listed with the other statuses.
             *
             */
            index: number;
            /** @description The status name.
             *     The maximum length is 64 characters.
             *     Required, if stating a new status for states.{status_name}.
             *     In this case, state the same value used for states.{status_name}.
             *      */
            name?: string;
        };
        PreviewAppViewsGetBuiltinCalendarViewOutputForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description The field code set for the Date Field.
             *     Responded for Calendar Views.
             *      */
            date?: string;
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /** @description The field code set for the Title Field.
             *     Responded for Calendar Views.
             *      */
            title?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsGetBuiltinListViewOutputForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description The list of field codes for the fields displayed in the View.
             *     Responded for List Views.
             *      */
            fields?: string[];
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsGetCalendarViewOutputForm: {
            /** @description The field code set for the Date Field.
             *     Responded for Calendar Views.
             *      */
            date?: string;
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /** @description The field code set for the Title Field.
             *     Responded for Calendar Views.
             *      */
            title?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsGetCustomViewOutputForm: {
            /**
             * @description The scope of where the view is displayed.
             *     - DESKTOP: Display only on desktop
             *     - ANY: Display on both desktop and mobile
             *
             * @enum {string}
             */
            device?: "DESKTOP" | "ANY";
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /** @description The HTML code set for the View.
             *        Responded for Custom Views.
             *      */
            html?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The pagination settings.
             *     Responded for Custom Views.
             *     - true: Enabled
             *     - false: Disabled
             *      */
            pager?: boolean;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsGetListViewOutputForm: {
            /** @description The list of field codes for the fields displayed in the View.
             *     Responded for List Views.
             *      */
            fields?: string[];
            /** @description The filter condition as a query.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The display order (ascending) of the View, when listed with other views.
             *
             */
            index?: number;
            /** @description The name of the View.
             *      */
            name?: string;
            /** @description The sort order as a query.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type?: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsPutCalendarViewForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description Used for Calendar Views.
             *     The field to be used as the "Date Field" of the Calendar View.
             *     Specify a date type field by their field code.
             *     If ignored, the Created datetime field will be set.
             *      */
            date?: string;
            /** @description The filter condition in a query format.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The display order of the View, in the list of views, specified with a number.
             *     The list of views will be displayed in ascending order.
             *
             */
            index: number;
            /** @description The name of the View.
             *     The maximum character limit is 64.
             *     Required, if views.{viewname} is a new View. In this case, specify the same new View name for this parameter.
             *      */
            name?: string;
            /** @description The sort order in a query format.
             *      */
            sort?: string;
            /** @description Used for Calendar views.
             *     The field to be used as the "Title Field" of the Calendar View.
             *     Specify a text type field by their fieldcode.
             *     If ignored, the Record number field will be set.
             *      */
            title?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsPutCustomViewForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /**
             * @description The scope of where the view is displayed.
             *     If this parameter is not specified, the default is `DESKTOP`.
             *     If view settings are updated without specifying this parameter, this parameter does not change.
             *     - DESKTOP: Display only on desktop
             *     - ANY: Display on both desktop and mobile
             *
             * @enum {string}
             */
            device?: "DESKTOP" | "ANY";
            /** @description The filter condition in a query format.
             *      */
            filterCond?: string;
            /** @description Used for Custom Views.
             *     The HTML code to set for the Custom View.
             *      */
            html?: string;
            /**
             * Format: long
             * @description The display order of the View, in the list of views, specified with a number.
             *     The list of views will be displayed in ascending order.
             *
             */
            index: number;
            /** @description The name of the View.
             *     The maximum character limit is 64.
             *     Required, if views.{viewname} is a new View. In this case, specify the same new View name for this parameter.
             *      */
            name?: string;
            /**
             * Format: boolean
             * @description The pagination settings. Specify one of the following:
             *     - true: Enable (default)
             *     - false: Disable
             *
             */
            pager?: boolean;
            /** @description The sort order in a query format.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsPutListViewForm: {
            /**
             * @description The type of the built-in View.
             *     - ASSIGNEE: The "Assigned to me" View.
             *     (This list is automatically created if the Process Management settings have been enabled in the app.
             *
             *     Currently, there are no other types of built-in Views.
             *
             * @enum {string}
             */
            builtinType?: "ASSIGNEE";
            /** @description Used for List Views.
             *     The list of fields to be displayed in the list. Specify fields by their field codes.
             *     This parameter is required, if adding a new List View.
             *      */
            fields?: string[];
            /** @description The filter condition in a query format.
             *      */
            filterCond?: string;
            /**
             * Format: long
             * @description The display order of the View, in the list of views, specified with a number.
             *     The list of views will be displayed in ascending order.
             *
             */
            index: number;
            /** @description The name of the View.
             *     The maximum character limit is 64.
             *     Required, if views.{viewname} is a new View. In this case, specify the same new View name for this parameter.
             *      */
            name?: string;
            /** @description The sort order in a query format.
             *      */
            sort?: string;
            /**
             * @description The type of View.
             *      - LIST: List View
             *      - CALENDAR: Calendar View
             *      - CUSTOM: Custom View
             *
             * @enum {string}
             */
            type: "LIST" | "CALENDAR" | "CUSTOM";
        };
        PreviewAppViewsPutResult: {
            /**
             * Format: long
             * @description The View ID.
             *
             */
            id?: number;
        };
        PreviewFieldAclGetEntityRight: {
            /**
             * @description The permission granted to the entity.
             *     - READ: Permissions to view only.
             *     - WRITE: Permissions to view and edit.
             *     - NONE: No permissions to view or edit.
             *
             * @enum {string}
             */
            accessibility?: "WRITE" | "READ" | "NONE";
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
        };
        PreviewFieldAclGetRight: {
            /** @description The field code of a field that has permission settings.
             *      */
            code?: string;
            /** @description An array listing the entities the permissions are granted to, in order of priority.
             *      */
            entities?: components["schemas"]["PreviewFieldAclGetEntityRight"][];
        };
        PreviewFieldAclPutFieldRightEntity: {
            /**
             * @description The permission to grant to the entity.
             *     - READ: Permissions to view only.
             *     - WRITE: Permissions to view and edit.
             *     - NONE: No permissions to view and edit
             *
             * @enum {string}
             */
            accessibility: "WRITE" | "READ" | "NONE";
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permissions are granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
        };
        PreviewFieldAclPutRight: {
            /** @description The field code of the field to set permissions around.
             *      */
            code: string;
            /** @description An array listing the entities the permissions are granted to. List in order of priority.
             *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
             *      */
            entities: components["schemas"]["PreviewFieldAclPutFieldRightEntity"][];
        };
        PreviewFormGetBultinProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetCalcSimpleProperties: {
            code?: string;
            /** Format: long */
            displayScale?: number;
            expression?: string;
            /** @enum {string} */
            format?: "NUMBER" | "NUMBER_DIGIT" | "DATETIME" | "DATE" | "TIME" | "HOUR_MINUTE" | "DAY_HOUR_MINUTE";
            /** Format: boolean */
            hideExpression?: boolean;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            unit?: string;
            unitPosition?: string;
        };
        PreviewFormGetDateSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        PreviewFormGetDatetimeSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        PreviewFormGetDecimalSimpleProperties: {
            code?: string;
            defaultValue?: string;
            /** Format: boolean */
            digit?: boolean;
            /** Format: long */
            displayScale?: number;
            label?: string;
            /** Format: long */
            maxValue?: number;
            /** Format: long */
            minValue?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
            unit?: string;
            unitPosition?: string;
        };
        PreviewFormGetEditorSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetFileSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetGroupSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetLabelProperties: {
            label?: string;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetLayoutProperties: {
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetLinkSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: long */
            maxLength?: number;
            /** Format: long */
            minLength?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            protocol?: "WEB" | "CALL" | "MAIL";
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        PreviewFormGetLookupSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: long */
            relatedApp?: number;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetMultipleLineTextSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetMultipleSelectSimpleProperties: {
            code?: string;
            defaultValue?: string[];
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            options?: string[];
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetOrganizationSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetReferenceTableLayoutProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: long */
            relatedApp?: number;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetSingleLineTextSimpleProperties: {
            code?: string;
            defaultValue?: string;
            expression?: string;
            /** Format: boolean */
            hideExpression?: boolean;
            label?: string;
            /** Format: long */
            maxLength?: number;
            /** Format: long */
            minLength?: number;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
            /** Format: boolean */
            unique?: boolean;
        };
        PreviewFormGetSingleSelectSimpleProperties: {
            code?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            options?: string[];
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetSpacerProperties: {
            elementId?: string;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetSubTableLayoutProperties: {
            code?: string;
            fields?: (components["schemas"]["PreviewFormGetLayoutProperties"] | components["schemas"]["PreviewFormGetLabelProperties"] | components["schemas"]["PreviewFormGetBultinProperties"] | components["schemas"]["PreviewFormGetCalcSimpleProperties"] | components["schemas"]["PreviewFormGetDateSimpleProperties"] | components["schemas"]["PreviewFormGetDatetimeSimpleProperties"] | components["schemas"]["PreviewFormGetDecimalSimpleProperties"] | components["schemas"]["PreviewFormGetEditorSimpleProperties"] | components["schemas"]["PreviewFormGetFileSimpleProperties"] | components["schemas"]["PreviewFormGetLinkSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetSingleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetSingleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetTimeSimpleProperties"] | components["schemas"]["PreviewFormGetUserSelectSimpleProperties"] | components["schemas"]["PreviewFormGetOrganizationSelectSimpleProperties"] | components["schemas"]["PreviewFormGetGroupSelectSimpleProperties"] | components["schemas"]["PreviewFormGetLookupSimpleProperties"] | components["schemas"]["PreviewFormGetReferenceTableLayoutProperties"] | components["schemas"]["PreviewFormGetSubTableLayoutProperties"] | components["schemas"]["PreviewFormGetSpacerProperties"])[];
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetTimeSimpleProperties: {
            code?: string;
            defaultExpression?: string;
            defaultValue?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewFormGetUserSelectSimpleProperties: {
            code?: string;
            label?: string;
            /** Format: boolean */
            noLabel?: boolean;
            /** Format: boolean */
            required?: boolean;
            /** @enum {string} */
            type?: "LABEL" | "SPACER" | "HR" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "REFERENCE_TABLE" | "LINK";
        };
        PreviewRecordAclGetEntityRight: {
            /** @description The delete permission of the entity.
             *     - true: The record is deletable.
             *     - false: The record is not deletable.
             *      */
            deletable?: boolean;
            /** @description The edit permission of the entity.
             *     - true: The record is editable.
             *     - false: The record is not editable.
             *      */
            editable?: boolean;
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
            /** @description The view permission of the entity.
             *     - true: The record is viewable.
             *     - false: The record is not viewable.
             *      */
            viewable?: boolean;
        };
        PreviewRecordAclGetRight: {
            /** @description An array listing the entities the permissions are granted to, in order of priority.
             *      */
            entities?: components["schemas"]["PreviewRecordAclGetEntityRight"][];
            /** @description The filter condition of the record permission.
             *      */
            filterCond?: string;
        };
        PreviewRecordAclPutEntityRightForm: {
            /**
             * Format: boolean
             * @description The delete permission of the entity.
             *     - true: Grant delete permission
             *     - false: Deny delete permission
             *     If ignored, the value is false.
             *
             */
            deletable?: boolean;
            /**
             * Format: boolean
             * @description The edit permission of the entity.
             *     - true: Grant edit permission
             *     - false: Deny edit permission
             *     If ignored, the value is false.
             *
             */
            editable?: boolean;
            /** @description An object containing data of the entity the permissions are granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permissions are granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permissions are granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The view permission of the entity.
             *     - true: Grant view permission
             *     - false: Deny view permission
             *     If ignored, the value is false.
             *
             */
            viewable?: boolean;
        };
        PreviewRecordAclPutRightForm: {
            /** @description An array listing the entities the permissions are granted to. List in order of priority.
             *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
             *      */
            entities: components["schemas"]["PreviewRecordAclPutEntityRightForm"][];
            /**
             * Format: query
             * @description The filter condition in a query format.
             *     If this parameter is ignored, the filter condition will be "All records".
             *
             */
            filterCond?: string;
        };
        RecordAclGetEntityRight: {
            /** @description The delete permission of the entity.
             *     - true: The record is deletable.
             *     - false: The record is not deletable.
             *      */
            deletable?: boolean;
            /** @description The edit permission of the entity.
             *     - true: The record is editable.
             *     - false: The record is not editable.
             *      */
            editable?: boolean;
            /** @description An object containing data of the entity the permission is granted to.
             *      */
            entity?: {
                /** @description The code of the entity the permission is granted to.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permission is granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type?: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /** @description The permission inheritance settings of the department the permission is granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *      */
            includeSubs?: boolean;
            /** @description The view permission of the entity.
             *     - true: The record is viewable.
             *     - false: The record is not viewable.
             *      */
            viewable?: boolean;
        };
        RecordAclGetRight: {
            /** @description An array listing the entities the permissions are granted to, in order of priority.
             *      */
            entities?: components["schemas"]["RecordAclGetEntityRight"][];
            /** @description The filter condition of the record permission.
             *      */
            filterCond?: string;
        };
        RecordAclPutEntityRightForm: {
            /**
             * Format: boolean
             * @description The delete permission of the entity.
             *     - true: Grant delete permission
             *     - false: Deny delete permission
             *     If ignored, the value is false.
             *
             */
            deletable?: boolean;
            /**
             * Format: boolean
             * @description The edit permission of the entity.
             *     - true: Grant edit permission
             *     - false: Deny edit permission
             *     If ignored, the value is false.
             *
             */
            editable?: boolean;
            /** @description An object containing data of the entity the permissions are granted to.
             *      */
            entity: {
                /** @description The code of the entity the permission is granted to.
                 *     To specify guest space users, add the string "guest/" before the guest's log in name.
                 *     If the "Everyone" group is not specified, the "Everyone" group will have no permissions to view/edit/delete.
                 *     If "CREATOR" is specified for the rights[].entity.type parameter, ignore this parameter. Otherwise, this parameter is required.
                 *      */
                code?: string;
                /**
                 * @description The type of the entity the permissions are granted to.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *     - FIELD_ENTITY: User field
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION" | "FIELD_ENTITY";
            };
            /**
             * Format: boolean
             * @description The permission inheritance settings of the department the permissions are granted to.
             *     - true: Permissions are inherited.
             *     - false: Permissions are not inherited.
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The view permission of the entity.
             *     - true: Grant view permission
             *     - false: Deny view permission
             *     If ignored, the value is false.
             *
             */
            viewable?: boolean;
        };
        RecordAclPutRightForm: {
            /** @description An array listing the entities the permissions are granted to. List in order of priority.
             *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
             *      */
            entities: components["schemas"]["RecordAclPutEntityRightForm"][];
            /**
             * Format: query
             * @description The filter condition in a query format.
             *     If this parameter is ignored, the filter condition will be "All records".
             *
             */
            filterCond?: string;
        };
        RecordCommentPostMentionForm: {
            /** @description The code the user, group or organization that will be mentioned.
             *     The maximum number of mentions is 10.
             *     The mentioned users will be placed in front of the comment text when the API succeeds.
             *      */
            code: string;
            /**
             * @description The type of the mentioned target.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP";
        };
        RecordCommentsGetCommentOutputForm: {
            /**
             * Format: date-time
             * @description The created date and time of the comment.
             *
             */
            createdAt?: string;
            /** @description An object including information of the comment creator.
             *      */
            creator?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /**
             * Format: long
             * @description The Comment ID.
             *
             */
            id?: number;
            /** @description An array including information of mentioned users.
             *      */
            mentions?: components["schemas"]["RecordCommentsGetMentionOutputForm"][];
            /** @description The comment including the line feed codes.
             *     If a user is mentioned within a comment, the "@" symbol will be omitted from the String.
             *      */
            text?: string;
        };
        RecordCommentsGetMentionOutputForm: {
            /** @description The code of the mentioned user, group or organization.
             *      */
            code?: string;
            /**
             * @description The type of the mention.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             * @enum {string}
             */
            type?: "USER" | "ORGANIZATION" | "GROUP";
        };
        RecordGetCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordGetDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordGetDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordGetDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordGetEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordGetSingleFileSimpleValue"][];
        };
        RecordGetGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordGetGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordGetGroupEntitySimpleValue"][];
        };
        RecordGetGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordGetLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordGetModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordGetMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordGetOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordGetOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordGetOrganizationEntitySimpleValue"][];
        };
        RecordGetRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordGetRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordGetSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordGetCalcSimpleValue"] | components["schemas"]["RecordGetCategorySimpleValue"] | components["schemas"]["RecordGetDateSimpleValue"] | components["schemas"]["RecordGetDatetimeSimpleValue"] | components["schemas"]["RecordGetDecimalSimpleValue"] | components["schemas"]["RecordGetEditorSimpleValue"] | components["schemas"]["RecordGetFileSimpleValue"] | components["schemas"]["RecordGetGroupSimpleValue"] | components["schemas"]["RecordGetLinkSimpleValue"] | components["schemas"]["RecordGetModifiedAtSimpleValue"] | components["schemas"]["RecordGetModifierSimpleValue"] | components["schemas"]["RecordGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordGetMultipleSelectSimpleValue"] | components["schemas"]["RecordGetRecordIdSimpleValue"] | components["schemas"]["RecordGetReferenceTableSimpleValue"] | components["schemas"]["RecordGetSimpleTableValue"] | components["schemas"]["RecordGetSingleLineTextSimpleValue"] | components["schemas"]["RecordGetSingleSelectSimpleValue"] | components["schemas"]["RecordGetStatusSimpleValue"] | components["schemas"]["RecordGetTimeSimpleValue"] | components["schemas"]["RecordGetUserSelectSimpleValue"] | components["schemas"]["RecordGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordGetGroupSelectSimpleValue"] | components["schemas"]["RecordGetRevisionSimpleValue"] | components["schemas"]["RecordGetRawRecordIdSimpleValue"];
            };
        };
        RecordGetSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordGetSimpleRowValue"][];
        };
        RecordGetSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordGetSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordGetTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordGetUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordGetUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordGetUserEntitySimpleValue"][];
        };
        RecordPostCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordPostDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPostDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPostDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPostEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPostSingleFileSimpleValue"][];
        };
        RecordPostGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPostGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPostGroupEntitySimpleValue"][];
        };
        RecordPostGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordPostLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPostModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordPostMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordPostOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPostOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPostOrganizationEntitySimpleValue"][];
        };
        RecordPostRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPostRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPostSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordPostCalcSimpleValue"] | components["schemas"]["RecordPostCategorySimpleValue"] | components["schemas"]["RecordPostDateSimpleValue"] | components["schemas"]["RecordPostDatetimeSimpleValue"] | components["schemas"]["RecordPostDecimalSimpleValue"] | components["schemas"]["RecordPostEditorSimpleValue"] | components["schemas"]["RecordPostFileSimpleValue"] | components["schemas"]["RecordPostGroupSimpleValue"] | components["schemas"]["RecordPostLinkSimpleValue"] | components["schemas"]["RecordPostModifiedAtSimpleValue"] | components["schemas"]["RecordPostModifierSimpleValue"] | components["schemas"]["RecordPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordPostMultipleSelectSimpleValue"] | components["schemas"]["RecordPostRecordIdSimpleValue"] | components["schemas"]["RecordPostReferenceTableSimpleValue"] | components["schemas"]["RecordPostSimpleTableValue"] | components["schemas"]["RecordPostSingleLineTextSimpleValue"] | components["schemas"]["RecordPostSingleSelectSimpleValue"] | components["schemas"]["RecordPostStatusSimpleValue"] | components["schemas"]["RecordPostTimeSimpleValue"] | components["schemas"]["RecordPostUserSelectSimpleValue"] | components["schemas"]["RecordPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordPostGroupSelectSimpleValue"] | components["schemas"]["RecordPostRevisionSimpleValue"] | components["schemas"]["RecordPostRawRecordIdSimpleValue"];
            };
        };
        RecordPostSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordPostSimpleRowValue"][];
        };
        RecordPostSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordPostSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPostTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPostUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPostUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPostUserEntitySimpleValue"][];
        };
        RecordPutCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordPutDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPutDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPutDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPutEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPutSingleFileSimpleValue"][];
        };
        RecordPutGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPutGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPutGroupEntitySimpleValue"][];
        };
        RecordPutGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordPutLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPutModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordPutMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordPutOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPutOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPutOrganizationEntitySimpleValue"][];
        };
        RecordPutRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPutRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordPutSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordPutCalcSimpleValue"] | components["schemas"]["RecordPutCategorySimpleValue"] | components["schemas"]["RecordPutDateSimpleValue"] | components["schemas"]["RecordPutDatetimeSimpleValue"] | components["schemas"]["RecordPutDecimalSimpleValue"] | components["schemas"]["RecordPutEditorSimpleValue"] | components["schemas"]["RecordPutFileSimpleValue"] | components["schemas"]["RecordPutGroupSimpleValue"] | components["schemas"]["RecordPutLinkSimpleValue"] | components["schemas"]["RecordPutModifiedAtSimpleValue"] | components["schemas"]["RecordPutModifierSimpleValue"] | components["schemas"]["RecordPutMultipleLineTextSimpleValue"] | components["schemas"]["RecordPutMultipleSelectSimpleValue"] | components["schemas"]["RecordPutRecordIdSimpleValue"] | components["schemas"]["RecordPutReferenceTableSimpleValue"] | components["schemas"]["RecordPutSimpleTableValue"] | components["schemas"]["RecordPutSingleLineTextSimpleValue"] | components["schemas"]["RecordPutSingleSelectSimpleValue"] | components["schemas"]["RecordPutStatusSimpleValue"] | components["schemas"]["RecordPutTimeSimpleValue"] | components["schemas"]["RecordPutUserSelectSimpleValue"] | components["schemas"]["RecordPutOrganizationSelectSimpleValue"] | components["schemas"]["RecordPutGroupSelectSimpleValue"] | components["schemas"]["RecordPutRevisionSimpleValue"] | components["schemas"]["RecordPutRawRecordIdSimpleValue"];
            };
        };
        RecordPutSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordPutSimpleRowValue"][];
        };
        RecordPutSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordPutSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordPutTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordPutUpdateKey: {
            /** @description The field code of the unique key.
             *      */
            field: string;
            /** @description The value of the unique key.
             *      */
            value: string;
        };
        RecordPutUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordPutUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordPutUserEntitySimpleValue"][];
        };
        RecordsAclEvaluateGetField: {
            /** @description The edit permissions of the field of the specified record ID.
             *     If the Kintone App is in maintenance mode,
             *     the returned value is `false`.
             *      */
            editable?: boolean;
            /** @description The view permissions of the field of the specified record ID.
             *     If the user has no view permissions of the record or the Kintone App is in maintenance mode,
             *     the returned value is `false`.
             *      */
            viewable?: boolean;
        };
        RecordsAclEvaluateGetRight: {
            /** @description An object consisting of field permissions of the specified record ID.
             *     The following are also included in the response:
             *     - fields that the user has no permissions to view
             *     - fields that have no permission settings set on them
             *     - fields that do not allow permissions to be set
             *     - fields set in tables
             *      */
            fields?: {
                [key: string]: components["schemas"]["RecordsAclEvaluateGetField"];
            };
            /**
             * Format: long
             * @description The record ID.
             *
             */
            id?: number;
            /** @description An object consisting of record permissions of the specified record ID.
             *      */
            record?: {
                /** @description The delete permissions of the specified record ID.
                 *     If the Kintone App is in maintenance mode, the returned value is `false`.
                 *      */
                deletable?: boolean;
                /** @description The edit permissions of the specified record ID.
                 *     If the Kintone App is in maintenance mode, the returned value is `false`.
                 *      */
                editable?: boolean;
                /** @description The view permissions of the specified record ID.
                 *     If the Kintone App is in maintenance mode, the returned value is `false`.
                 *      */
                viewable?: boolean;
            };
        };
        RecordsCursorGetCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordsCursorGetDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsCursorGetDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsCursorGetDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsCursorGetEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsCursorGetSingleFileSimpleValue"][];
        };
        RecordsCursorGetGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsCursorGetGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsCursorGetGroupEntitySimpleValue"][];
        };
        RecordsCursorGetGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordsCursorGetLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsCursorGetModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordsCursorGetMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordsCursorGetOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsCursorGetOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsCursorGetOrganizationEntitySimpleValue"][];
        };
        RecordsCursorGetRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsCursorGetRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsCursorGetSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordsCursorGetCalcSimpleValue"] | components["schemas"]["RecordsCursorGetCategorySimpleValue"] | components["schemas"]["RecordsCursorGetDateSimpleValue"] | components["schemas"]["RecordsCursorGetDatetimeSimpleValue"] | components["schemas"]["RecordsCursorGetDecimalSimpleValue"] | components["schemas"]["RecordsCursorGetEditorSimpleValue"] | components["schemas"]["RecordsCursorGetFileSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSimpleValue"] | components["schemas"]["RecordsCursorGetLinkSimpleValue"] | components["schemas"]["RecordsCursorGetModifiedAtSimpleValue"] | components["schemas"]["RecordsCursorGetModifierSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRecordIdSimpleValue"] | components["schemas"]["RecordsCursorGetReferenceTableSimpleValue"] | components["schemas"]["RecordsCursorGetSimpleTableValue"] | components["schemas"]["RecordsCursorGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetSingleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetStatusSimpleValue"] | components["schemas"]["RecordsCursorGetTimeSimpleValue"] | components["schemas"]["RecordsCursorGetUserSelectSimpleValue"] | components["schemas"]["RecordsCursorGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRevisionSimpleValue"] | components["schemas"]["RecordsCursorGetRawRecordIdSimpleValue"];
            };
        };
        RecordsCursorGetSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordsCursorGetSimpleRowValue"][];
        };
        RecordsCursorGetSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordsCursorGetSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsCursorGetTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsCursorGetUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsCursorGetUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsCursorGetUserEntitySimpleValue"][];
        };
        RecordsGetCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordsGetDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsGetDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsGetDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsGetEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsGetSingleFileSimpleValue"][];
        };
        RecordsGetGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsGetGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsGetGroupEntitySimpleValue"][];
        };
        RecordsGetGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordsGetLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsGetModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordsGetMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordsGetOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsGetOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsGetOrganizationEntitySimpleValue"][];
        };
        RecordsGetRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsGetRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsGetSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordsGetCalcSimpleValue"] | components["schemas"]["RecordsGetCategorySimpleValue"] | components["schemas"]["RecordsGetDateSimpleValue"] | components["schemas"]["RecordsGetDatetimeSimpleValue"] | components["schemas"]["RecordsGetDecimalSimpleValue"] | components["schemas"]["RecordsGetEditorSimpleValue"] | components["schemas"]["RecordsGetFileSimpleValue"] | components["schemas"]["RecordsGetGroupSimpleValue"] | components["schemas"]["RecordsGetLinkSimpleValue"] | components["schemas"]["RecordsGetModifiedAtSimpleValue"] | components["schemas"]["RecordsGetModifierSimpleValue"] | components["schemas"]["RecordsGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsGetRecordIdSimpleValue"] | components["schemas"]["RecordsGetReferenceTableSimpleValue"] | components["schemas"]["RecordsGetSimpleTableValue"] | components["schemas"]["RecordsGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsGetSingleSelectSimpleValue"] | components["schemas"]["RecordsGetStatusSimpleValue"] | components["schemas"]["RecordsGetTimeSimpleValue"] | components["schemas"]["RecordsGetUserSelectSimpleValue"] | components["schemas"]["RecordsGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsGetGroupSelectSimpleValue"] | components["schemas"]["RecordsGetRevisionSimpleValue"] | components["schemas"]["RecordsGetRawRecordIdSimpleValue"];
            };
        };
        RecordsGetSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordsGetSimpleRowValue"][];
        };
        RecordsGetSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordsGetSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsGetTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsGetUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsGetUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsGetUserEntitySimpleValue"][];
        };
        RecordsPostCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordsPostDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPostDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPostDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPostEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPostSingleFileSimpleValue"][];
        };
        RecordsPostGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPostGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPostGroupEntitySimpleValue"][];
        };
        RecordsPostGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordsPostLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPostModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordsPostMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordsPostOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPostOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPostOrganizationEntitySimpleValue"][];
        };
        RecordsPostRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPostRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPostSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordsPostCalcSimpleValue"] | components["schemas"]["RecordsPostCategorySimpleValue"] | components["schemas"]["RecordsPostDateSimpleValue"] | components["schemas"]["RecordsPostDatetimeSimpleValue"] | components["schemas"]["RecordsPostDecimalSimpleValue"] | components["schemas"]["RecordsPostEditorSimpleValue"] | components["schemas"]["RecordsPostFileSimpleValue"] | components["schemas"]["RecordsPostGroupSimpleValue"] | components["schemas"]["RecordsPostLinkSimpleValue"] | components["schemas"]["RecordsPostModifiedAtSimpleValue"] | components["schemas"]["RecordsPostModifierSimpleValue"] | components["schemas"]["RecordsPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordsPostMultipleSelectSimpleValue"] | components["schemas"]["RecordsPostRecordIdSimpleValue"] | components["schemas"]["RecordsPostReferenceTableSimpleValue"] | components["schemas"]["RecordsPostSimpleTableValue"] | components["schemas"]["RecordsPostSingleLineTextSimpleValue"] | components["schemas"]["RecordsPostSingleSelectSimpleValue"] | components["schemas"]["RecordsPostStatusSimpleValue"] | components["schemas"]["RecordsPostTimeSimpleValue"] | components["schemas"]["RecordsPostUserSelectSimpleValue"] | components["schemas"]["RecordsPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordsPostGroupSelectSimpleValue"] | components["schemas"]["RecordsPostRevisionSimpleValue"] | components["schemas"]["RecordsPostRawRecordIdSimpleValue"];
            };
        };
        RecordsPostSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordsPostSimpleRowValue"][];
        };
        RecordsPostSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordsPostSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPostTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPostUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPostUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPostUserEntitySimpleValue"][];
        };
        RecordsPutCalcSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutCategorySimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string[];
        };
        RecordsPutDateSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPutDatetimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPutDecimalSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPutEditorSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutFileSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPutSingleFileSimpleValue"][];
        };
        RecordsPutGroupEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPutGroupSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPutGroupEntitySimpleValue"][];
        };
        RecordsPutGroupSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
        };
        RecordsPutLinkSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutModifiedAtSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPutModifierSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: {
                code: string;
                name?: string;
            };
        };
        RecordsPutMultipleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutMultipleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: string[];
        };
        RecordsPutOrganizationEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPutOrganizationSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPutOrganizationEntitySimpleValue"][];
        };
        RecordsPutRawRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPutRecordBean: {
            /**
             * Format: long
             * @description The Record IDs of the updated/created Records.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The revision numbers of the Records.
             *
             */
            revision?: number;
        };
        RecordsPutRecordForm: {
            /**
             * Format: long
             * @description The Record ID of the record to be updated. Required, if `updateKey` will not be specified.
             *
             *     If `upsert` is set to `true`:
             *     - If the record exists, the record will be updated
             *     - If the record does not exist, it will be added as a new record. The specified ID will be ignored, and a new ID will be set to the new record.
             *
             */
            id?: number;
            /** @description Field codes and values are specified in this object.
             *     If ignored, the record will not be updated.
             *      */
            record?: {
                [key: string]: components["schemas"]["RecordsPutCalcSimpleValue"] | components["schemas"]["RecordsPutCategorySimpleValue"] | components["schemas"]["RecordsPutDateSimpleValue"] | components["schemas"]["RecordsPutDatetimeSimpleValue"] | components["schemas"]["RecordsPutDecimalSimpleValue"] | components["schemas"]["RecordsPutEditorSimpleValue"] | components["schemas"]["RecordsPutFileSimpleValue"] | components["schemas"]["RecordsPutGroupSimpleValue"] | components["schemas"]["RecordsPutLinkSimpleValue"] | components["schemas"]["RecordsPutModifiedAtSimpleValue"] | components["schemas"]["RecordsPutModifierSimpleValue"] | components["schemas"]["RecordsPutMultipleLineTextSimpleValue"] | components["schemas"]["RecordsPutMultipleSelectSimpleValue"] | components["schemas"]["RecordsPutRecordIdSimpleValue"] | components["schemas"]["RecordsPutReferenceTableSimpleValue"] | components["schemas"]["RecordsPutSimpleTableValue"] | components["schemas"]["RecordsPutSingleLineTextSimpleValue"] | components["schemas"]["RecordsPutSingleSelectSimpleValue"] | components["schemas"]["RecordsPutStatusSimpleValue"] | components["schemas"]["RecordsPutTimeSimpleValue"] | components["schemas"]["RecordsPutUserSelectSimpleValue"] | components["schemas"]["RecordsPutOrganizationSelectSimpleValue"] | components["schemas"]["RecordsPutGroupSelectSimpleValue"] | components["schemas"]["RecordsPutRevisionSimpleValue"] | components["schemas"]["RecordsPutRawRecordIdSimpleValue"];
            };
            /**
             * Format: long
             * @description The expected revision number.
             *     If the value does not match, an error will occur and all records will not be updated.
             *     If the value is not specified or is -1, the revision number will not be checked.
             *
             */
            revision?: number;
            updateKey?: components["schemas"]["RecordsPutUpdateKey"];
        };
        RecordsPutRecordIdSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutReferenceTableSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutRevisionSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: number */
            value?: string;
        };
        RecordsPutSimpleRowValue: {
            /** Format: long */
            id?: number;
            value?: {
                [key: string]: components["schemas"]["RecordsPutCalcSimpleValue"] | components["schemas"]["RecordsPutCategorySimpleValue"] | components["schemas"]["RecordsPutDateSimpleValue"] | components["schemas"]["RecordsPutDatetimeSimpleValue"] | components["schemas"]["RecordsPutDecimalSimpleValue"] | components["schemas"]["RecordsPutEditorSimpleValue"] | components["schemas"]["RecordsPutFileSimpleValue"] | components["schemas"]["RecordsPutGroupSimpleValue"] | components["schemas"]["RecordsPutLinkSimpleValue"] | components["schemas"]["RecordsPutModifiedAtSimpleValue"] | components["schemas"]["RecordsPutModifierSimpleValue"] | components["schemas"]["RecordsPutMultipleLineTextSimpleValue"] | components["schemas"]["RecordsPutMultipleSelectSimpleValue"] | components["schemas"]["RecordsPutRecordIdSimpleValue"] | components["schemas"]["RecordsPutReferenceTableSimpleValue"] | components["schemas"]["RecordsPutSimpleTableValue"] | components["schemas"]["RecordsPutSingleLineTextSimpleValue"] | components["schemas"]["RecordsPutSingleSelectSimpleValue"] | components["schemas"]["RecordsPutStatusSimpleValue"] | components["schemas"]["RecordsPutTimeSimpleValue"] | components["schemas"]["RecordsPutUserSelectSimpleValue"] | components["schemas"]["RecordsPutOrganizationSelectSimpleValue"] | components["schemas"]["RecordsPutGroupSelectSimpleValue"] | components["schemas"]["RecordsPutRevisionSimpleValue"] | components["schemas"]["RecordsPutRawRecordIdSimpleValue"];
            };
        };
        RecordsPutSimpleTableValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: components["schemas"]["RecordsPutSimpleRowValue"][];
        };
        RecordsPutSingleFileSimpleValue: {
            /** @description The MIME type of the uploaded file.
             *      */
            contentType?: string;
            /** @description The fileKey of the uploaded file.
             *      */
            fileKey: string;
            /** @description The file name of the uploaded file.
             *      */
            name?: string;
            /** @description  The byte size of the uploaded file.
             *      */
            size?: string;
        };
        RecordsPutSingleLineTextSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutSingleSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutStatusSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value?: string;
        };
        RecordsPutTimeSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            /** Format: date-time */
            value?: string;
        };
        RecordsPutUpdateKey: {
            /** @description The field code of the unique key.
             *      */
            field: string;
            /** @description The value of the unique key.
             *      */
            value: string;
        };
        RecordsPutUpsertRecordBean: {
            /**
             * Format: long
             * @description The Record IDs of the updated/created Records.
             *
             */
            id?: number;
            /**
             * @description The revision numbers of the Records.
             *
             * @enum {string}
             */
            operation?: "INSERT" | "UPDATE";
            /**
             * Format: long
             * @description The revision numbers of the Records.
             *
             */
            revision?: number;
        };
        RecordsPutUserEntitySimpleValue: {
            code: string;
            name?: string;
        };
        RecordsPutUserSelectSimpleValue: {
            /** @enum {string} */
            type?: "CATEGORY" | "CREATED_TIME" | "CREATOR" | "DATE" | "DATETIME" | "NUMBER" | "CALC" | "RICH_TEXT" | "FILE" | "UPDATED_TIME" | "MODIFIER" | "CHECK_BOX" | "MULTI_LINE_TEXT" | "MULTI_SELECT" | "RECORD_NUMBER" | "RADIO_BUTTON" | "SINGLE_LINE_TEXT" | "DROP_DOWN" | "STATUS" | "STATUS_ASSIGNEE" | "SUBTABLE" | "TIME" | "USER_SELECT" | "ORGANIZATION_SELECT" | "GROUP_SELECT" | "LINK" | "__REVISION__" | "__ID__";
            value: components["schemas"]["RecordsPutUserEntitySimpleValue"][];
        };
        RecordsStatusPutRecordsStatusPutFormRecord: {
            /** @description The Action name of the action to run.
             *     If the localization feature has been used to apply multiple translations of the Action name,
             *     specify the name of the Action in the language settings of the user that will run the API.
             *     API Tokens follow the language settings set in the User & System Administration settings.
             *      */
            action: string;
            /** @description The next Assignee. Specify the Assignee's log in name.
             *     Required, if the "Assignee List" of the current status is set to "User chooses one assignee from the list to take action",
             *     and a selectable assignee exists.
             *      */
            assignee?: string;
            /**
             * Format: long
             * @description The record ID.
             *
             */
            id: number;
            /**
             * Format: long
             * @description The revision number of the record before updating the status.
             *     If the specified revision is not the latest revision, the request will result in an error.
             *     The revision will not be checked if this parameter is ignored, or -1 is specified.
             *
             */
            revision?: number;
        };
        RecordsStatusPutRecordsStatusPutOutputFormRecord: {
            /**
             * Format: long
             * @description The Record ID.
             *
             */
            id?: number;
            /**
             * Format: long
             * @description The revision number of the record after updating the status.
             *     The revision number will increase by 2, as two operations are preformed - running the action, and updating the status.
             *
             */
            revision?: number;
        };
        SpaceGetAttachedApp: {
            /**
             * Format: long
             * @description The App ID
             *
             */
            appId?: number;
            /** @description The App Code of the App.
             *     An empty string is returned if an App Code is not set in the App's settings.
             *      */
            code?: string;
            /**
             * Format: date-time
             * @description The date of when the App was created.
             *
             */
            createdAt?: string;
            /** @description The information of the user who created the App.
             *      */
            creator?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description The description of the App.
             *     If Localization settings are enabled, the localized name will be returned.
             *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
             *      */
            description?: string;
            /**
             * Format: date-time
             * @description The date of when the App was last modified.
             *
             */
            modifiedAt?: string;
            /** @description The information of the user who last updated the App.
             *      */
            modifier?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** @description The name of the App.
             *     If Localization settings are enabled, the localized name will be returned.
             *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
             *      */
            name?: string;
            /**
             * Format: long
             * @description The Thread ID of the thread that the App was created in.
             *     Apps that are created inside Spaces using the GUI will be automatically allocated to the default Thread.
             *
             */
            threadId?: number;
        };
        SpaceMembersGetGroupBean: {
            /** @description The entity information of the Space member.
             *      */
            entity?: {
                /** @description The code of the Space member.
                 *      */
                code?: string;
                /** @description The entity type of the Space member.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *      */
                type?: string;
            };
            /** @description The Space Admin settings of the Space member
             *     - true: The Space Member is the Space Administrator.
             *     - false: The Space Member is not the Space Administrator.
             *      */
            isAdmin?: boolean;
        };
        SpaceMembersGetOrganizationBean: {
            /** @description The entity information of the Space member.
             *      */
            entity?: {
                /** @description The code of the Space member.
                 *      */
                code?: string;
                /** @description The entity type of the Space member.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *      */
                type?: string;
            };
            /** @description The "Include Affiliated Departments" setting of the Department Space Member.
             *     - true: Affiliated Departments are included.
             *     - false: Affiliated Departments are not included.
             *      */
            includeSubs?: boolean;
            /** @description The Space Admin settings of the Space member
             *     - true: The Space Member is the Space Administrator.
             *     - false: The Space Member is not the Space Administrator.
             *      */
            isAdmin?: boolean;
        };
        SpaceMembersGetUserBean: {
            /** @description The entity information of the Space member.
             *      */
            entity?: {
                /** @description The code of the Space member.
                 *      */
                code?: string;
                /** @description The entity type of the Space member.
                 *     - USER: User
                 *     - GROUP: Group
                 *     - ORGANIZATION: Department
                 *      */
                type?: string;
            };
            /** @description The Space Admin settings of the Space member
             *     - true: The Space Member is the Space Administrator.
             *     - false: The Space Member is not the Space Administrator.
             *      */
            isAdmin?: boolean;
            /** @description If the Space Member is added as a User or not.
             *     - true: The Space Member is not added as a user, and is added as part of a Group or Department.
             *     - false: The Space Member is added as a User.
             *     This is not responded for GROUP and ORGANIZATION entities.
             *      */
            isImplicit?: boolean;
        };
        SpaceMembersPutMemberForm: {
            /** @description The entity information of the Space member.
             *     Guest users cannot be specified.
             *      */
            entity: {
                /** @description The code of the entity.
                 *      */
                code: string;
                /**
                 * @description The entity type of the Space member.
                 *     - USER: User
                 *     - Group: Group
                 *     - ORGANIZATION: Department
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION";
            };
            /**
             * Format: boolean
             * @description The "Include Affiliated Departments" settings of the department.
             *     - true: Affiliated departments will be included.
             *     - false: Affiliated departments will not be included.
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The Space Administration settings of the user.
             *     - true: The member will be the Administrator of the Space.
             *     - false: The member will not be the Administrator of the Space.
             *     At least 1 Space Administrator is required to be set in the API call.
             *     If ignored, this value is false.
             *
             */
            isAdmin?: boolean;
        };
        SpaceThreadCommentPostFileForm: {
            /** @description The fileKey of the attachment file.
             *     fileKeys can be found from the response of the Upload File API.
             *      */
            fileKey: string;
            /** @description A width can be specified if the attachment file is an image.
             *     The minimum is 100, and the maximum is 750.
             *     If this parameter is ignored, the original width will be set (this width is the same size as the size when "Original" is chosen when adding an image to a thread via GUI). This parameter is ignored if the file is not an image.
             *      */
            width?: string;
        };
        SpaceThreadCommentPostMentionForm: {
            /** @description The code the user, group or organization that will be mentioned.
             *     The maximum number of mentions is 10.
             *     The mentioned users will be placed in front of the comment text when the API succeeds.
             *      */
            code: string;
            /**
             * @description The type of the mentioned target.
             *     - USER: User
             *     - GROUP: Group
             *     - ORGANIZATION: Department
             *
             * @enum {string}
             */
            type: "USER" | "ORGANIZATION" | "GROUP";
        };
        SpacesStatisticsGetSpaceForm: {
            /** Format: long */
            administratorCount?: number;
            /** Format: date-time */
            createdAt?: string;
            creator?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            /** Format: long */
            id?: number;
            isGuest?: boolean;
            isPrivate?: boolean;
            /** Format: long */
            memberCount?: number;
            /** Format: date-time */
            modifiedAt?: string;
            modifier?: {
                /** @description The log in name of the creator.
                 *      */
                code?: string;
                /** @description The display name of the creator.
                 *      */
                name?: string;
            };
            name?: string;
        };
        TemplateSpacePostMemberForm: {
            /** @description The entity information of the Space member.
             *     Guest users cannot be specified.
             *      */
            entity: {
                /** @description The code of the entity.
                 *      */
                code: string;
                /**
                 * @description The entity type of the Space member.
                 *     - USER: User
                 *     - Group: Group
                 *     - ORGANIZATION: Department
                 *
                 * @enum {string}
                 */
                type: "USER" | "GROUP" | "ORGANIZATION";
            };
            /**
             * Format: boolean
             * @description The "Include Affiliated Departments" settings of the department.
             *     - true: Affiliated departments will be included.
             *     - false: Affiliated departments will not be included.
             *     If ignored, this value is false.
             *
             */
            includeSubs?: boolean;
            /**
             * Format: boolean
             * @description The Space Administration settings of the user.
             *     - true: The member will be the Administrator of the Space.
             *     - false: The member will not be the Administrator of the Space.
             *     At least 1 Space Administrator is required to be set in the API call.
             *     If ignored, this value is false.
             *
             */
            isAdmin?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getAppForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID */
                id: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The App ID
                         *
                         */
                        appId?: number;
                        /** @description The App Code of the App.
                         *     An empty string is returned if an App Code is not set in the App's settings.
                         *      */
                        code?: string;
                        /**
                         * Format: date-time
                         * @description The date of when the App was created.
                         *
                         */
                        createdAt?: string;
                        /** @description The information of the user who created the App.
                         *      */
                        creator?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The description of the App.
                         *     If Localization settings are enabled, the localized name will be returned.
                         *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
                         *      */
                        description?: string;
                        /**
                         * Format: date-time
                         * @description The date of when the App was last modified.
                         *
                         */
                        modifiedAt?: string;
                        /** @description The information of the user who last updated the App.
                         *      */
                        modifier?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The name of the App.
                         *     If Localization settings are enabled, the localized name will be returned.
                         *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
                         *      */
                        name?: string;
                        /**
                         * Format: long
                         * @description If the App was created inside a Space,
                         *     it will return the Space ID. If not, null is returned.
                         *
                         */
                        spaceId?: number;
                        /**
                         * Format: long
                         * @description If the App was created inside a Space,
                         *     it will return the Thread ID of the Thread of the space it belongs to.
                         *     Apps that are created inside Spaces using the GUI will be automatically allocated to the default Thread.
                         *     If the App was not created in a Space, null is returned.
                         *
                         */
                        threadId?: number;
                    };
                };
            };
        };
    };
    getAppAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of App permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["AppAclGetRight"][];
                    };
                };
            };
        };
    };
    putAppAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of App permissions, in order of priority.
                     *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
                     *      */
                    rights: components["schemas"]["AppAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of app/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppActionsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/actions/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Action settings.
                         *     The object's key is the Action's unique identifier, which is set as the Action's name in its default language settings (this is regardless of the lang request parameter's value).
                         *     The values of the key are the various Action settings associated with that Action.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["AppActionsGetAction"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppAdminNotesForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/adminNotes/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The content of the notes. If not set, an empty string is returned.
                         *      */
                        content?: string;
                        /** @description The permission settings to include this note in app templates or duplicates
                         *     - true: include
                         *     - false: do not include
                         *      */
                        includeInTemplateAndDuplicates?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppCustomizeForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/customize/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object containing data of JavaScript and CSS files for the desktop.
                         *      */
                        desktop?: {
                            /** @description An array listing data of CSS files for desktop.
                             *      */
                            css?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files.
                             *      */
                            js?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                        };
                        /** @description An object containing data of JavaScript and CSS files for the mobile.
                         *      */
                        mobile?: {
                            /** @description An array listing data of CSS files for mobile.
                             *      */
                            css?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files for mobile.
                             *      */
                            js?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the app settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The scope of customization
                         *     - ALL: Affect all users
                         *     - ADMIN: Affect only app administrators
                         *     - NONE: Disable
                         *
                         * @enum {string}
                         */
                        scope?: "ALL" | "ADMIN" | "NONE";
                    };
                };
            };
        };
    };
    getAppFormFieldsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names,
                 *       in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/form/fields/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object with data of the field settings.
                         *      */
                        properties?: {
                            [key: string]: components["schemas"]["AppFormFieldsGetCalcFieldForm"] | components["schemas"]["AppFormFieldsGetCategoryFieldForm"] | components["schemas"]["AppFormFieldsGetDateFieldForm"] | components["schemas"]["AppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["AppFormFieldsGetDecimalFieldForm"] | components["schemas"]["AppFormFieldsGetEditorFieldForm"] | components["schemas"]["AppFormFieldsGetFileFieldForm"] | components["schemas"]["AppFormFieldsGetGroupFieldForm"] | components["schemas"]["AppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["AppFormFieldsGetLinkFieldForm"] | components["schemas"]["AppFormFieldsGetLookupFieldForm"] | components["schemas"]["AppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["AppFormFieldsGetModifierFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["AppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["AppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["AppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["AppFormFieldsGetStatusFieldForm"] | components["schemas"]["AppFormFieldsGetTableForm"] | components["schemas"]["AppFormFieldsGetTimeFieldForm"] | components["schemas"]["AppFormFieldsGetUserSelectFieldForm"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppFormLayoutForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/form/layout/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of field layouts for each row.
                         *      */
                        layout?: (components["schemas"]["AppFormLayoutGetRow"] | components["schemas"]["AppFormLayoutGetGroupRow"] | components["schemas"]["AppFormLayoutGetSubtableRow"])[];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postAppMoveForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description The Space ID of where the App will be moved to.
                     *     To remove an App from its current space, null can be specified.
                     *
                     */
                    space?: number;
                };
            };
        };
        responses: {
            /** @description success case of app/move/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getAppNotificationsGeneralForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/general/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of "Recipients and Conditions" options.
                         *     These options define who will receive the notifications.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsGeneralGetNotification"][];
                        /** @description Option to notify all commenters of a record when a comment is posted on that record.
                         *     This reflects the "Send updated comment notifications to all commenters" checkbox.
                         *     - true: Notify all commenters of the record when a comment is posted
                         *     - false: Do not notify all commenters of the record when a comment is posted
                         *      */
                        notifyToCommenter?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppNotificationsPerRecordForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names.
                 *     The response parameter notifications[].filterCond will include the localized option names in the query string.
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/perRecord/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects containing data of the Per Record Notification settings.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsPerRecordGetNotification"][];
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppNotificationsReminderForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names. For more information, refer to the following article:
                 *     Setting Localized Names (External link)
                 *     The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/reminder/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of Notification Trigger options.
                         *     These options define when the notifications will be sent out, under what conditions, and the recipients.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsReminderGetNotification"][];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * Format: timezone
                         * @description The timezone that determines the Reminder notification's timing. This reflects the Reminder Time Zone dropdown option.
                         *     If the App's Reminder Notification settings have never been configured, null will be returned.
                         *
                         */
                        timezone?: string;
                    };
                };
            };
        };
    };
    getAppPluginsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - es: retrieves the localized Spanish names
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "JA" | "EN" | "ZH" | "ES";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins added to the App.
                         *      */
                        plugins?: components["schemas"]["AppPluginsGetPluginForm"][];
                        /**
                         * Format: long
                         * @description The revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppReportsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/reports/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Graph settings data.
                         *        The key of the object is the graph's unique identifier, which is set as the graph's name in its default language settings (this is regardless of the lang request parameter's value).
                         *        The values of the key are the various graph settings associated with that graph.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["AppReportsGetReport"] | components["schemas"]["AppReportsGetReportWithChartMode"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppSettingsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/settings/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The app description in HTML format.
                         *      */
                        description?: string;
                        /** @description The Enable bulk deletion of records setting.
                         *      */
                        enableBulkDeletion?: boolean;
                        /** @description The Enable comments setting.
                         *      */
                        enableComments?: boolean;
                        /** @description The Enable the feature to "duplicate record" setting.
                         *      */
                        enableDuplicateRecord?: boolean;
                        /** @description The Enable the feature to "Inline record editing on record list views" setting.
                         *      */
                        enableInlineRecordEditing?: boolean;
                        /** @description The Show thumbnails setting.
                         *      */
                        enableThumbnails?: boolean;
                        /** @description The First month of Fiscal Year setting. The number of the month will be returned.
                         *      */
                        firstMonthOfFiscalYear?: string;
                        icon?: components["schemas"]["AppSettingsGetIconPresetForm"] | components["schemas"]["AppSettingsGetIconFileForm"];
                        /** @description The App name.
                         *      */
                        name?: string;
                        numberPrecision?: components["schemas"]["AppSettingsGetNumberPrecision"];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The color theme.
                         *     - WHITE
                         *     - RED
                         *     - BLUE
                         *     - GREEN
                         *     - YELLOW
                         *     - BLACK
                         *
                         *     Apps created before February 2017 may respond with the following classic themes:
                         *     CLIPBOARD, BINDER, PENCIL, CLIPS.
                         *
                         * @enum {string}
                         */
                        theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                        titleField?: components["schemas"]["AppSettingsGetTitleField"];
                    };
                };
            };
        };
    };
    getAppStatusForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/status/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array containing data of the Actions. They are listed in the same order as in the GUI.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        actions?: components["schemas"]["AppStatusGetActionForm"][];
                        /** @description The on/off settings of the process management settings.
                         *     - true: The process management settings is enabled.
                         *     - false: The process management settings is disabled.
                         *      */
                        enable?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the process management statuses.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        states?: {
                            [key: string]: components["schemas"]["AppStatusGetStateForm"];
                        };
                    };
                };
            };
        };
    };
    getAppViewsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/views/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object listing View information.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["AppViewsGetBuiltinListViewOutputForm"] | components["schemas"]["AppViewsGetBuiltinCalendarViewOutputForm"] | components["schemas"]["AppViewsGetListViewOutputForm"] | components["schemas"]["AppViewsGetCalendarViewOutputForm"] | components["schemas"]["AppViewsGetCustomViewOutputForm"];
                        };
                    };
                };
            };
        };
    };
    getAppsForGuestSpace: {
        parameters: {
            query?: {
                /** @description The App Code.
                 *     Up to 100 App Codes can be specified.
                 *     Each App Code must be between 1 to 64 characters.
                 *     An exact match search will be used, and will be case sensitive.
                 *      */
                codes?: string[];
                /** @description The number of retrievals that will be skipped.
                 *     Must be between 0 and 2147483647. If nothing is specified, it will default to 0.
                 *      */
                offset?: number;
                /** @description The App Name.
                 *     A partial search will be used, and the search will be case insensitive.
                 *     The localized name of the App in the user's locale will also be included in the search.
                 *      */
                name?: string;
                /** @description The number of Apps to retrieve.
                 *     Must be between 1 and 100.
                 *     If nothing is specified, it will default to 100.
                 *      */
                limit?: number;
                /** @description The App IDs.
                 *     Up to 100 IDs can be specified.
                 *      */
                ids?: number[];
                /** @description The Space ID of where the App resides in.
                 *     Up to 100 IDs can be specified.
                 *      */
                spaceIds?: number[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of apps/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain general information of Apps.
                         *      */
                        apps?: components["schemas"]["AppsGetAppWithSpaceIdForm"][];
                    };
                };
            };
        };
    };
    getAppsStatisticsForGuestSpace: {
        parameters: {
            query?: {
                /** @description The number of retrievals that will be skipped.
                 *     Must be between 0 and 2147483647. If nothing is specified, it will default to 0.
                 *      */
                offset?: string;
                /** @description The number of Apps to retrieve.
                 *     Must be between 1 and 100.
                 *     If nothing is specified, it will default to 100.
                 *      */
                limit?: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of apps/statistics/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain the information of Apps.
                         *      */
                        apps?: components["schemas"]["AppsStatisticsGetAppForm"][];
                    };
                };
            };
        };
    };
    postBulkRequestForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An array of requests. The maximum number of requests is 20.
                     *      */
                    requests: components["schemas"]["BulkRequestPostRequestForm"][];
                };
            };
        };
        responses: {
            /** @description success case of bulkRequest/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response from each API request. The order of the response is the same as the order of the requests.
                         *     If an API request fails, an error will be included in the index of the failed API.
                         *     In this case, all other indexes will be responded with {} (empty objects).
                         *      */
                        results?: (components["schemas"]["BulkRequestPostRecordPostOutputForm"] | components["schemas"]["BulkRequestPostRecordPutOutputForm"] | components["schemas"]["BulkRequestPostRecordStatusPutOutputForm"] | components["schemas"]["BulkRequestPostRecordAssigneesPutOutputForm"] | components["schemas"]["BulkRequestPostRecordsDeleteOutputForm"] | components["schemas"]["BulkRequestPostRecordsPostOutputForm"] | components["schemas"]["BulkRequestPostRecordsPutOutputForm"] | components["schemas"]["BulkRequestPostRecordsStatusPutOutputForm"])[];
                    };
                };
            };
        };
    };
    getFieldAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of field/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of permission settings.
                         *      */
                        rights?: components["schemas"]["FieldAclGetRight"][];
                    };
                };
            };
        };
    };
    putFieldAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of field permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["FieldAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of field/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    downloadFileForGuestSpace: {
        parameters: {
            query: {
                /** @description The value that is set on the Attachment field in the response data returned when using the Get Record API.
                 *      */
                fileKey: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of file/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadFileForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    file?: unknown;
                };
            };
        };
        responses: {
            /** @description success case of file/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The fileKey representing an uploaded file.
                         *     Use this fileKey with the following APIs to attach it to an Attachment field of an app:
                         *     - Add Record
                         *     - Add Records
                         *     - Update Record
                         *     - Update Records
                         *      */
                        fileKey?: string;
                    };
                };
            };
        };
    };
    getFormForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of form/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        properties?: (components["schemas"]["FormGetLayoutProperties"] | components["schemas"]["FormGetLabelProperties"] | components["schemas"]["FormGetBultinProperties"] | components["schemas"]["FormGetCalcSimpleProperties"] | components["schemas"]["FormGetDateSimpleProperties"] | components["schemas"]["FormGetDatetimeSimpleProperties"] | components["schemas"]["FormGetDecimalSimpleProperties"] | components["schemas"]["FormGetEditorSimpleProperties"] | components["schemas"]["FormGetFileSimpleProperties"] | components["schemas"]["FormGetLinkSimpleProperties"] | components["schemas"]["FormGetMultipleLineTextSimpleProperties"] | components["schemas"]["FormGetMultipleSelectSimpleProperties"] | components["schemas"]["FormGetSingleLineTextSimpleProperties"] | components["schemas"]["FormGetSingleSelectSimpleProperties"] | components["schemas"]["FormGetTimeSimpleProperties"] | components["schemas"]["FormGetUserSelectSimpleProperties"] | components["schemas"]["FormGetOrganizationSelectSimpleProperties"] | components["schemas"]["FormGetGroupSelectSimpleProperties"] | components["schemas"]["FormGetLookupSimpleProperties"] | components["schemas"]["FormGetReferenceTableLayoutProperties"] | components["schemas"]["FormGetSubTableLayoutProperties"] | components["schemas"]["FormGetSpacerProperties"])[];
                    };
                };
            };
        };
    };
    postGuestsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description A list of Guest user data.
                     *      */
                    guests: components["schemas"]["GuestsPostGuestUserForm"][];
                };
            };
        };
        responses: {
            /** @description success case of guests/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    deleteGuestsForGuestSpace: {
        parameters: {
            query: {
                /** @description A list of email addresses of Guest users.
                 *     Up to 100 Guests can be deleted.
                 *      */
                guests: string[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of guests/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putPluginForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
                     *      */
                    fileKey: string;
                    /** @description The ID of the plug-in to be updated.
                     *      */
                    id: string;
                };
            };
        };
        responses: {
            /** @description success case of plugin/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The plug-in ID of the updated plug-in.
                         *      */
                        id?: string;
                        /** @description The version number of the plug-in.
                         *      */
                        version?: string;
                    };
                };
            };
        };
    };
    installPluginForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
                     *      */
                    fileKey: string;
                };
            };
        };
        responses: {
            /** @description success case of plugin/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The installed plug-in ID.
                         *      */
                        id?: string;
                        /** @description The version number of the plug-in.
                         *      */
                        version?: string;
                    };
                };
            };
        };
    };
    uninstallPluginForGuestSpace: {
        parameters: {
            query: {
                /** @description The ID of the plug-in.
                 *      */
                id: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugin/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getPluginAppsForGuestSpace: {
        parameters: {
            query: {
                /** @description The number of plug-ins to skip from the list of plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 500.
                 *     The default number is 100.
                 *      */
                limit?: string;
                /** @description The ID of the plug-in.
                 *      */
                id: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugin/apps/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of objects containing the plug-in ID and name.
                         *     Objects are listed in ascending order of their App IDs.
                         *      */
                        apps?: components["schemas"]["PluginAppsGetAppDto"][];
                    };
                };
            };
        };
    };
    getPluginsForGuestSpace: {
        parameters: {
            query?: {
                /** @description The number of plug-ins to skip from the list of installed plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 100.
                 *     The default number is 100.
                 *      */
                limit?: string;
                /** @description The plug-in ids. The maximum limit of ids that can be specified is 100.
                 *     If null or an empty array is specified, this parameter will be ignored, and a list of plug-ins will be returned.
                 *      */
                ids?: string[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of plug-ins added to the App.<br>Plug-ins are listed in descending order of the datetime they are added.
                         *      */
                        plugins?: components["schemas"]["PluginsGetPluginDto"][];
                    };
                };
            };
        };
    };
    getPluginsRequiredForGuestSpace: {
        parameters: {
            query?: {
                /** @description The number of plug-ins to skip from the list of required plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 100.
                 *     The default number is 100.
                 *      */
                limit?: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugins/required/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins that needs to be installed.
                         *      */
                        plugins?: components["schemas"]["PluginsRequiredGetPluginDto"][];
                    };
                };
            };
        };
    };
    postPreviewAppForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The App name.
                     *     The maximum length is 64 characters.
                     *      */
                    name: string;
                    /**
                     * Format: long
                     * @description The Space ID of where the App will be created.
                     *
                     */
                    space?: number;
                    /**
                     * Format: long
                     * @description The Thread ID of the thread in the Space where the App will be created.
                     *     *It is recommended to ignore this parameter so that Apps are created in the default thread.
                     *     There is currently no helpful reason to create Apps in threads other than the default thread,
                     *     as there are no visual representations in Kintone of Apps being related to threads.
                     *     There are only visual representations of Apps being related to Spaces.
                     *
                     */
                    thread?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The App ID of the created preview App.
                         *
                         */
                        app?: number;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of App permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["PreviewAppAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewAppAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of App permissions, in order of priority.
                     *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
                     *      */
                    rights: components["schemas"]["PreviewAppAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/app/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppActionsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/actions/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Action settings.
                         *     The object's key is the Action's unique identifier, which is set as the Action's name in its default language settings (this is regardless of the lang request parameter's value).
                         *     The values of the key are the various Action settings associated with that Action.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["PreviewAppActionsGetAction"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppActionsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An object listing Action settings.
                     *     The object's key is the Action's unique identifier, which is equal to the Action's name in its default language settings.
                     *     The values of the key are the various Action settings associated with that Action.
                     *      */
                    actions: {
                        [key: string]: components["schemas"]["PreviewAppActionsPutAction"];
                    };
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/actions/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object listing Action settings.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["PreviewAppActionsPutActionResult"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppAdminNotesForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/adminNotes/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The content of the notes. If not set, an empty string is returned.
                         *      */
                        content?: string;
                        /** @description The permission settings to include this note in app templates or duplicates
                         *     - true: include
                         *     - false: do not include
                         *      */
                        includeInTemplateAndDuplicates?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppAdminNotesForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The permission settings to include this note in app templates or duplicates
                     *     - true: include
                     *     - false: do not include
                     *
                     *     If the parameter is omitted, the content will not change.
                     *      */
                    content?: string;
                    /** @description The revision number of the App settings.
                     *     If the parameter does not match the actual revision number, it will be considered an error, and the content will not be updated.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *      */
                    includeInTemplateAndDuplicates?: string;
                    /**
                     * Format: long
                     * @description The content of the notes.
                     *     The content must be between 0 to 10000 characters.
                     *     If the parameter is omitted, the content will not change.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/adminNotes/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number after changing the app settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppCustomizeForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/customize/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object containing data of JavaScript and CSS files for the desktop.
                         *      */
                        desktop?: {
                            /** @description An array listing data of CSS files for desktop.
                             *      */
                            css?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files.
                             *      */
                            js?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                        };
                        /** @description An object containing data of JavaScript and CSS files for the mobile.
                         *      */
                        mobile?: {
                            /** @description An array listing data of CSS files for mobile.
                             *      */
                            css?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files for mobile.
                             *      */
                            js?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the app settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The scope of customization
                         *     - ALL: Affect all users
                         *     - ADMIN: Affect only app administrators
                         *     - NONE: Disable
                         *
                         * @enum {string}
                         */
                        scope?: "ALL" | "ADMIN" | "NONE";
                    };
                };
            };
        };
    };
    putPreviewAppCustomizeForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object containing data of JavaScript and CSS files for the desktop.
                     *      */
                    desktop?: {
                        /** @description An array listing data of CSS files for desktop.
                         *      */
                        css?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                        /** @description An array listing data of JavaScript files.
                         *      */
                        js?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                    };
                    /** @description An object containing data of JavaScript and CSS files for the mobile.
                     *      */
                    mobile?: {
                        /** @description An array listing data of CSS files for mobile.
                         *      */
                        css?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                        /** @description An array listing data of JavaScript files for mobile.
                         *      */
                        js?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * @description The scope of customization
                     *     - ALL: Affect all users
                     *     - ADMIN: Affect only app administrators
                     *     - NONE: Disable
                     *
                     * @enum {string}
                     */
                    scope?: "ALL" | "ADMIN" | "NONE";
                };
            };
        };
        responses: {
            /** @description success case of preview/app/customize/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppDeployForGuestSpace: {
        parameters: {
            query: {
                /** @description The list of Apps to check the deploy statuses of.
                 *     The Maximum limit is 300.
                 *     If Apps in Guest Spaces are specified,
                 *     all Apps specified in the request must belong to that Guest Space.
                 *      */
                apps: number[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/deploy/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of objects with data of deploy statuses.
                         *      */
                        apps?: components["schemas"]["PreviewAppDeployGetAppForm"][];
                    };
                };
            };
        };
    };
    deployAppForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The list of Apps to deploy the pre-live settings to the live Apps.
                     *     The Maximum limit is 300.
                     *     If Apps are being deployed to Guest Spaces,
                     *     Apps can only be deployed to the same Guest Space.
                     *      */
                    apps: components["schemas"]["PreviewAppDeployPostAppForm"][];
                    /**
                     * Format: boolean
                     * @description Specify `true` to cancel all changes made to the pre-live settings.
                     *     The pre-live settings will be reverted back to the current settings of the live app.
                     *
                     */
                    revert?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/deploy/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getPreviewAppFormFieldsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names,
                 *       in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/fields/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object with data of the field settings.
                         *      */
                        properties?: {
                            [key: string]: components["schemas"]["PreviewAppFormFieldsGetCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetTableForm"] | components["schemas"]["PreviewAppFormFieldsGetTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetUserSelectFieldForm"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppFormFieldsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object with data of the field settings.
                     *      */
                    properties: {
                        [key: string]: components["schemas"]["PreviewAppFormFieldsPutCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutTableForm"] | components["schemas"]["PreviewAppFormFieldsPutTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutUserSelectFieldForm"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/fields/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postPreviewAppFormFieldsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object with data of the field settings.
                     *      */
                    properties: {
                        [key: string]: components["schemas"]["PreviewAppFormFieldsPostCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostTableForm"] | components["schemas"]["PreviewAppFormFieldsPostTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostUserSelectFieldForm"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/fields/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    deletePreviewAppFormFieldsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The list of field codes of the fields to delete.
                 *     Up to 100 field codes can be specified.
                 *      */
                fields: string[];
                /** @description Specify the revision number of the settings that will be deployed.
                 *     The request will fail if the revision number is not the latest revision.
                 *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                 *      */
                revision?: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/fields/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppFormLayoutForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/layout/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of field layouts for each row.
                         *      */
                        layout?: (components["schemas"]["PreviewAppFormLayoutGetRow"] | components["schemas"]["PreviewAppFormLayoutGetGroupRow"] | components["schemas"]["PreviewAppFormLayoutGetSubtableRow"])[];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppFormLayoutForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description A list of field layouts for each row.
                     *      */
                    layout: (components["schemas"]["PreviewAppFormLayoutPutRow"] | components["schemas"]["PreviewAppFormLayoutPutGroupRow"] | components["schemas"]["PreviewAppFormLayoutPutSubtableRow"])[];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/layout/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsGeneralForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/general/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of "Recipients and Conditions" options.
                         *     These options define who will receive the notifications.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsGeneralGetNotification"][];
                        /** @description Option to notify all commenters of a record when a comment is posted on that record.
                         *     This reflects the "Send updated comment notifications to all commenters" checkbox.
                         *     - true: Notify all commenters of the record when a comment is posted
                         *     - false: Do not notify all commenters of the record when a comment is posted
                         *      */
                        notifyToCommenter?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsGeneralForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects consisting of "Recipients and Conditions" options.
                     *     If an empty array is sent, all the recipients will be removed.
                     *     If this parameter is ignored, no changes will be made to the "Recipients and Conditions" options.
                     *      */
                    notifications?: components["schemas"]["PreviewAppNotificationsGeneralPutNotification"][];
                    /** Format: boolean */
                    notifyToCommenter?: boolean;
                    /** Format: long */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/general/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsPerRecordForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names.
                 *     The response parameter notifications[].filterCond will include the localized option names in the query string.
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/perRecord/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects containing data of the Per Record Notification settings.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsPerRecordGetNotification"][];
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsPerRecordForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects containing data of the Per Record Notification settings.
                     *     If the array is empty, all of the Per Record Notification settings will be deleted.
                     *     If ignored, this setting will not be changed.
                     *      */
                    notifications: components["schemas"]["PreviewAppNotificationsPerRecordPutNotification"][];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/perRecord/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsReminderForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names. For more information, refer to the following article:
                 *     Setting Localized Names (External link)
                 *     The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/reminder/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of Notification Trigger options.
                         *     These options define when the notifications will be sent out, under what conditions, and the recipients.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsReminderGetNotification"][];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * Format: timezone
                         * @description The timezone that determines the Reminder notification's timing. This reflects the Reminder Time Zone dropdown option.
                         *     If the App's Reminder Notification settings have never been configured, null will be returned.
                         *
                         */
                        timezone?: string;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsReminderForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects consisting of "Notification Trigger" options. These options define when the notifications will be sent out, under what conditions, and the recipients.
                     *     If an empty array is sent, all the recipients will be removed.
                     *     If this parameter is ignored, no changes will be made to the "Notification Trigger" options.
                     *      */
                    notifications?: components["schemas"]["PreviewAppNotificationsReminderPutNotification"][];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * Format: timezone
                     * @description The timezone that determines the Reminder notification's timing. This reflects the "Reminder Time Zone" dropdown option.
                     *     If the App's Reminder Notification settings have never been configured, the API executing user's timezone will be used.
                     *
                     */
                    timezone?: string;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/reminder/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppPluginsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - es: retrieves the localized Spanish names
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "JA" | "EN" | "ZH" | "ES";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins added to the App.
                         *      */
                        plugins?: components["schemas"]["PreviewAppPluginsGetPluginForm"][];
                        /**
                         * Format: long
                         * @description The revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postPreviewAppPluginsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The Plug-in IDs that will be added to the App.
                     *      */
                    ids: string[];
                    /**
                     * Format: long
                     * @description Specify the expected current revision number for the App.
                     *     The request will fail if the stated revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/plugins/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The updated revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppReportsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/reports/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Graph settings data.
                         *        The key of the object is the graph's unique identifier, which is set as the graph's name in its default language settings (this is regardless of the lang request parameter's value).
                         *        The values of the key are the various graph settings associated with that graph.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["PreviewAppReportsGetReport"] | components["schemas"]["PreviewAppReportsGetReportWithChartMode"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppReportsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object listing Graph information.
                     *     The key of the object is the graph's unique identifier,
                     *     which is equal to the name of the graph in its default language settings.
                     *     The values of the key are the various graph settings associated with that graph.
                     *      */
                    reports: {
                        [key: string]: components["schemas"]["PreviewAppReportsPutReport"] | components["schemas"]["PreviewAppReportsPutReportWithChartMode"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/reports/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object listing Graph information.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["PreviewAppReportsPutReportResult"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppSettingsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/settings/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The app description in HTML format.
                         *      */
                        description?: string;
                        /** @description The Enable bulk deletion of records setting.
                         *      */
                        enableBulkDeletion?: boolean;
                        /** @description The Enable comments setting.
                         *      */
                        enableComments?: boolean;
                        /** @description The Enable the feature to "duplicate record" setting.
                         *      */
                        enableDuplicateRecord?: boolean;
                        /** @description The Enable the feature to "Inline record editing on record list views" setting.
                         *      */
                        enableInlineRecordEditing?: boolean;
                        /** @description The Show thumbnails setting.
                         *      */
                        enableThumbnails?: boolean;
                        /** @description The First month of Fiscal Year setting. The number of the month will be returned.
                         *      */
                        firstMonthOfFiscalYear?: string;
                        icon?: components["schemas"]["PreviewAppSettingsGetIconPresetForm"] | components["schemas"]["PreviewAppSettingsGetIconFileForm"];
                        /** @description The App name.
                         *      */
                        name?: string;
                        numberPrecision?: components["schemas"]["PreviewAppSettingsGetNumberPrecision"];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The color theme.
                         *     - WHITE
                         *     - RED
                         *     - BLUE
                         *     - GREEN
                         *     - YELLOW
                         *     - BLACK
                         *
                         *     Apps created before February 2017 may respond with the following classic themes:
                         *     CLIPBOARD, BINDER, PENCIL, CLIPS.
                         *
                         * @enum {string}
                         */
                        theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                        titleField?: components["schemas"]["PreviewAppSettingsGetTitleField"];
                    };
                };
            };
        };
    };
    putPreviewAppSettingsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The App description.
                     *     The maximum character limit is 10,000. HTML tags can be used.
                     *      */
                    description?: string;
                    /** @description The Enable bulk deletion of records setting.
                     *      */
                    enableBulkDeletion?: string;
                    /** @description The Enable comments setting.
                     *      */
                    enableComments?: string;
                    /** @description The Enable the feature to "duplicate record" setting.
                     *      */
                    enableDuplicateRecord?: string;
                    /** @description The Enable the feature to "Inline record editing on record list views" setting.
                     *      */
                    enableInlineRecordEditing?: string;
                    /** @description The Show thumbnails setting.
                     *      */
                    enableThumbnails?: string;
                    /** @description The First month of Fiscal Year setting. Specify the number of the month.
                     *      */
                    firstMonthOfFiscalYear?: string;
                    icon?: components["schemas"]["PreviewAppSettingsPutIconPresetForm"] | components["schemas"]["PreviewAppSettingsPutIconFileForm"];
                    /** @description The App name.
                     *     The maximum character limit is 64.
                     *      */
                    name?: string;
                    numberPrecision?: components["schemas"]["PreviewAppSettingsPutNumberPrecision"];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * @description The color theme.
                     *     - WHITE
                     *     - RED
                     *     - BLUE
                     *     - GREEN
                     *     - YELLOW
                     *     - BLACK
                     *
                     * @enum {string}
                     */
                    theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                    titleField?: components["schemas"]["PreviewAppSettingsPutTitleField"];
                };
            };
        };
        responses: {
            /** @description success case of preview/app/settings/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppStatusForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/status/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array containing data of the Actions. They are listed in the same order as in the GUI.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        actions?: components["schemas"]["PreviewAppStatusGetActionForm"][];
                        /** @description The on/off settings of the process management settings.
                         *     - true: The process management settings is enabled.
                         *     - false: The process management settings is disabled.
                         *      */
                        enable?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the process management statuses.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        states?: {
                            [key: string]: components["schemas"]["PreviewAppStatusGetStateForm"];
                        };
                    };
                };
            };
        };
    };
    putPreviewAppStatusForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An array containing data of the Actions.
                     *      */
                    actions?: components["schemas"]["PreviewAppStatusPutActionForm"][];
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: boolean
                     * @description The on/off settings of the process management settings.
                     *     - true: The process management settings is enabled.
                     *     - false: The process management settings is disabled.
                     *
                     */
                    enable?: boolean;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An object containing data of the process management statuses.
                     *      */
                    states?: {
                        [key: string]: components["schemas"]["PreviewAppStatusPutStateForm"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of preview/app/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppViewsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/views/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object listing View information.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["PreviewAppViewsGetBuiltinListViewOutputForm"] | components["schemas"]["PreviewAppViewsGetBuiltinCalendarViewOutputForm"] | components["schemas"]["PreviewAppViewsGetListViewOutputForm"] | components["schemas"]["PreviewAppViewsGetCalendarViewOutputForm"] | components["schemas"]["PreviewAppViewsGetCustomViewOutputForm"];
                        };
                    };
                };
            };
        };
    };
    putPreviewAppViewsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An object of data of Views.
                     *      */
                    views: {
                        [key: string]: components["schemas"]["PreviewAppViewsPutListViewForm"] | components["schemas"]["PreviewAppViewsPutCalendarViewForm"] | components["schemas"]["PreviewAppViewsPutCustomViewForm"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of preview/app/views/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the Views.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["PreviewAppViewsPutResult"];
                        };
                    };
                };
            };
        };
    };
    getPreviewFieldAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/field/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of permission settings.
                         *      */
                        rights?: components["schemas"]["PreviewFieldAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewFieldAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of field permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["PreviewFieldAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/field/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewFormForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/form/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        properties?: (components["schemas"]["PreviewFormGetLayoutProperties"] | components["schemas"]["PreviewFormGetLabelProperties"] | components["schemas"]["PreviewFormGetBultinProperties"] | components["schemas"]["PreviewFormGetCalcSimpleProperties"] | components["schemas"]["PreviewFormGetDateSimpleProperties"] | components["schemas"]["PreviewFormGetDatetimeSimpleProperties"] | components["schemas"]["PreviewFormGetDecimalSimpleProperties"] | components["schemas"]["PreviewFormGetEditorSimpleProperties"] | components["schemas"]["PreviewFormGetFileSimpleProperties"] | components["schemas"]["PreviewFormGetLinkSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetSingleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetSingleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetTimeSimpleProperties"] | components["schemas"]["PreviewFormGetUserSelectSimpleProperties"] | components["schemas"]["PreviewFormGetOrganizationSelectSimpleProperties"] | components["schemas"]["PreviewFormGetGroupSelectSimpleProperties"] | components["schemas"]["PreviewFormGetLookupSimpleProperties"] | components["schemas"]["PreviewFormGetReferenceTableLayoutProperties"] | components["schemas"]["PreviewFormGetSubTableLayoutProperties"] | components["schemas"]["PreviewFormGetSpacerProperties"])[];
                    };
                };
            };
        };
    };
    getPreviewRecordAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/record/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of record permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["PreviewRecordAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewRecordAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of record permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["PreviewRecordAclPutRightForm"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/record/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecordForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The Record ID.
                 *      */
                id: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The type and value of all fields within the record are included in the object.
                         *      */
                        record?: {
                            [key: string]: components["schemas"]["RecordGetCalcSimpleValue"] | components["schemas"]["RecordGetCategorySimpleValue"] | components["schemas"]["RecordGetDateSimpleValue"] | components["schemas"]["RecordGetDatetimeSimpleValue"] | components["schemas"]["RecordGetDecimalSimpleValue"] | components["schemas"]["RecordGetEditorSimpleValue"] | components["schemas"]["RecordGetFileSimpleValue"] | components["schemas"]["RecordGetGroupSimpleValue"] | components["schemas"]["RecordGetLinkSimpleValue"] | components["schemas"]["RecordGetModifiedAtSimpleValue"] | components["schemas"]["RecordGetModifierSimpleValue"] | components["schemas"]["RecordGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordGetMultipleSelectSimpleValue"] | components["schemas"]["RecordGetRecordIdSimpleValue"] | components["schemas"]["RecordGetReferenceTableSimpleValue"] | components["schemas"]["RecordGetSimpleTableValue"] | components["schemas"]["RecordGetSingleLineTextSimpleValue"] | components["schemas"]["RecordGetSingleSelectSimpleValue"] | components["schemas"]["RecordGetStatusSimpleValue"] | components["schemas"]["RecordGetTimeSimpleValue"] | components["schemas"]["RecordGetUserSelectSimpleValue"] | components["schemas"]["RecordGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordGetGroupSelectSimpleValue"] | components["schemas"]["RecordGetRevisionSimpleValue"] | components["schemas"]["RecordGetRawRecordIdSimpleValue"];
                        };
                    };
                };
            };
        };
    };
    putRecordForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description The Record ID of the record to be updated.
                     *     Required, if updateKey will not be specified.
                     *
                     */
                    id?: number;
                    /** @description Field codes and values are specified in this object.
                     *     If ignored, the record will not be updated.
                     *      */
                    record?: {
                        [key: string]: components["schemas"]["RecordPutCalcSimpleValue"] | components["schemas"]["RecordPutCategorySimpleValue"] | components["schemas"]["RecordPutDateSimpleValue"] | components["schemas"]["RecordPutDatetimeSimpleValue"] | components["schemas"]["RecordPutDecimalSimpleValue"] | components["schemas"]["RecordPutEditorSimpleValue"] | components["schemas"]["RecordPutFileSimpleValue"] | components["schemas"]["RecordPutGroupSimpleValue"] | components["schemas"]["RecordPutLinkSimpleValue"] | components["schemas"]["RecordPutModifiedAtSimpleValue"] | components["schemas"]["RecordPutModifierSimpleValue"] | components["schemas"]["RecordPutMultipleLineTextSimpleValue"] | components["schemas"]["RecordPutMultipleSelectSimpleValue"] | components["schemas"]["RecordPutRecordIdSimpleValue"] | components["schemas"]["RecordPutReferenceTableSimpleValue"] | components["schemas"]["RecordPutSimpleTableValue"] | components["schemas"]["RecordPutSingleLineTextSimpleValue"] | components["schemas"]["RecordPutSingleSelectSimpleValue"] | components["schemas"]["RecordPutStatusSimpleValue"] | components["schemas"]["RecordPutTimeSimpleValue"] | components["schemas"]["RecordPutUserSelectSimpleValue"] | components["schemas"]["RecordPutOrganizationSelectSimpleValue"] | components["schemas"]["RecordPutGroupSelectSimpleValue"] | components["schemas"]["RecordPutRevisionSimpleValue"] | components["schemas"]["RecordPutRawRecordIdSimpleValue"];
                    };
                    /**
                     * Format: long
                     * @description The expected revision number.
                     *     If the value does not match, an error will occur and the record will not be updated.
                     *     If the value is not specified or is -1, the revision number will not be checked.
                     *
                     */
                    revision?: number;
                    updateKey?: components["schemas"]["RecordPutUpdateKey"];
                };
            };
        };
        responses: {
            /** @description success case of record/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    postRecordForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Field codes and values are specified in this object.
                     *     If ignored, the record will be added with default field values.
                     *     If field codes that don't exist are specified, these will be ignored.
                     *      */
                    record: {
                        [key: string]: components["schemas"]["RecordPostCalcSimpleValue"] | components["schemas"]["RecordPostCategorySimpleValue"] | components["schemas"]["RecordPostDateSimpleValue"] | components["schemas"]["RecordPostDatetimeSimpleValue"] | components["schemas"]["RecordPostDecimalSimpleValue"] | components["schemas"]["RecordPostEditorSimpleValue"] | components["schemas"]["RecordPostFileSimpleValue"] | components["schemas"]["RecordPostGroupSimpleValue"] | components["schemas"]["RecordPostLinkSimpleValue"] | components["schemas"]["RecordPostModifiedAtSimpleValue"] | components["schemas"]["RecordPostModifierSimpleValue"] | components["schemas"]["RecordPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordPostMultipleSelectSimpleValue"] | components["schemas"]["RecordPostRecordIdSimpleValue"] | components["schemas"]["RecordPostReferenceTableSimpleValue"] | components["schemas"]["RecordPostSimpleTableValue"] | components["schemas"]["RecordPostSingleLineTextSimpleValue"] | components["schemas"]["RecordPostSingleSelectSimpleValue"] | components["schemas"]["RecordPostStatusSimpleValue"] | components["schemas"]["RecordPostTimeSimpleValue"] | components["schemas"]["RecordPostUserSelectSimpleValue"] | components["schemas"]["RecordPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordPostGroupSelectSimpleValue"] | components["schemas"]["RecordPostRevisionSimpleValue"] | components["schemas"]["RecordPostRawRecordIdSimpleValue"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of record/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Record ID of the created Record.
                         *
                         */
                        id?: number;
                        /**
                         * Format: long
                         * @description The revision number of the Record.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecordAclForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of record permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["RecordAclGetRight"][];
                    };
                };
            };
        };
    };
    putRecordAclForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of record permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["RecordAclPutRightForm"][];
                };
            };
        };
        responses: {
            /** @description success case of record/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putRecordAssigneesForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The user code(s) (log in names) of the Assignee(s). If empty, no users will be assigned. The maximum number of Assignees is 100.
                     *      */
                    assignees: string[];
                    /**
                     * Format: long
                     * @description The record ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: long
                     * @description The revision number of the record before updating the Assignees.
                     *     If the specified revision is not the latest revision, the request will result in an error.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of record/assignees/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the record after updating the Assignees.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postRecordCommentForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object including comment details.
                     *      */
                    comment: {
                        /** @description An array including information to mention other users.
                         *      */
                        mentions?: components["schemas"]["RecordCommentPostMentionForm"][];
                        /** @description The comment text. The maximum characters of the comment is 65535.
                         *      */
                        text: string;
                    };
                    /**
                     * Format: long
                     * @description The Record ID.
                     *
                     */
                    record: number;
                };
            };
        };
        responses: {
            /** @description success case of record/comment/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Comment ID.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    deleteRecordCommentForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The Record ID.
                 *      */
                record: number;
                /** @description The Comment ID.
                 *      */
                comment: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/comment/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getRecordCommentsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description This skips the retrieval of the first number of comments.
                 *     "offset": 30 skips the first 30 comments, and retrieves from the 31st comment. There is no maximum for this value.
                 *      */
                offset?: number;
                /** @description The Record ID.
                 *      */
                record: number;
                /** @description The number of records to retrieve.
                 *     "limit": 5 will retrieve the first 5 comments. The default and maximum is 10 comments.
                 *      */
                limit?: number;
                /** @description The sort order of the Comment ID. Specifying "asc" will sort the comments in ascending order, and "desc" will sort the comments in descending order.
                 *     If ignored, "desc" will be set.
                 *      */
                order?: "ASC" | "DESC";
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/comments/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of comments. An empty array is returned if no conditions are met.
                         *      */
                        comments?: components["schemas"]["RecordCommentsGetCommentOutputForm"][];
                        /** @description Information of newer comments:
                         *     - true: Newer comments exist.
                         *     - false: Newer comments do not exist. (i.e. the last comment)
                         *      */
                        newer?: boolean;
                        /** @description Information of older comments:
                         *     - true: Older comments exist.
                         *     - false: Older comments do not exist (i.e. the first comment)
                         *      */
                        older?: boolean;
                    };
                };
            };
        };
    };
    putRecordStatusForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The Action name of the action to run.
                     *     If the localization feature has been used to apply multiple translations of the Action name,
                     *     specify the name of the Action in the language settings of the user that will run the API.
                     *     API Tokens follow the language settings set in the User & System Administration settings.
                     *      */
                    action: string;
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The next Assignee. Specify the Assignee's log in name.
                     *     Required, if the "Assignee List" of the current status is set to "User chooses one assignee from the list to take action",
                     *     and a selectable assignee exists.
                     *      */
                    assignee?: string;
                    /**
                     * Format: long
                     * @description The record ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: long
                     * @description The revision number of the record before updating the status.
                     *     If the specified revision is not the latest revision, the request will result in an error.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of record/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the record after updating the status.
                         *     The revision number will increase by 2, as two operations are preformed - running the action, and updating the status.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecordsForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The query string that specifies what records to include in the response.
                 *     Ignoring this parameter will return all accessible records from the App.
                 *      */
                query?: string;
                /** @description The field codes to be included in the response.
                 *     Ignoring this parameter will return all accessible fields that exist in the App.
                 *      */
                fields?: string[];
                /** @description If set to true, the total count of records that match the query conditions will be included in the response.
                 *     If ignored, null is returned for the totalCount value.
                 *      */
                totalCount?: boolean;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects, including field types and field values within the matching records.
                         *      */
                        records?: {
                            [key: string]: components["schemas"]["RecordsGetCalcSimpleValue"] | components["schemas"]["RecordsGetCategorySimpleValue"] | components["schemas"]["RecordsGetDateSimpleValue"] | components["schemas"]["RecordsGetDatetimeSimpleValue"] | components["schemas"]["RecordsGetDecimalSimpleValue"] | components["schemas"]["RecordsGetEditorSimpleValue"] | components["schemas"]["RecordsGetFileSimpleValue"] | components["schemas"]["RecordsGetGroupSimpleValue"] | components["schemas"]["RecordsGetLinkSimpleValue"] | components["schemas"]["RecordsGetModifiedAtSimpleValue"] | components["schemas"]["RecordsGetModifierSimpleValue"] | components["schemas"]["RecordsGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsGetRecordIdSimpleValue"] | components["schemas"]["RecordsGetReferenceTableSimpleValue"] | components["schemas"]["RecordsGetSimpleTableValue"] | components["schemas"]["RecordsGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsGetSingleSelectSimpleValue"] | components["schemas"]["RecordsGetStatusSimpleValue"] | components["schemas"]["RecordsGetTimeSimpleValue"] | components["schemas"]["RecordsGetUserSelectSimpleValue"] | components["schemas"]["RecordsGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsGetGroupSelectSimpleValue"] | components["schemas"]["RecordsGetRevisionSimpleValue"] | components["schemas"]["RecordsGetRawRecordIdSimpleValue"];
                        }[];
                        /**
                         * Format: long
                         * @description The total count of records that match the query conditions.
                         *     If the totalCount parameter is ignored or is set as `false` in the request, `null` is returned.
                         *
                         */
                        totalCount?: number;
                    };
                };
            };
        };
    };
    putRecordsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Holds an array of objects that include id/updateKey, revision and record objects.
                     *      */
                    records: components["schemas"]["RecordsPutRecordForm"][];
                    /**
                     * Format: boolean
                     * @description A mode where adding and updating records can be processed at the same time.
                     *
                     */
                    upsert?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of records/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        records?: components["schemas"]["RecordsPutRecordBean"][] | components["schemas"]["RecordsPutUpsertRecordBean"][];
                    };
                };
            };
        };
    };
    postRecordsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Holds an array of record objects, that contains field codes and their values.
                     *
                     *     Fields that are not included in the objects are added with their default value.
                     *     Objects containing field codes that do not exist are ignored.
                     *      */
                    records: {
                        [key: string]: components["schemas"]["RecordsPostCalcSimpleValue"] | components["schemas"]["RecordsPostCategorySimpleValue"] | components["schemas"]["RecordsPostDateSimpleValue"] | components["schemas"]["RecordsPostDatetimeSimpleValue"] | components["schemas"]["RecordsPostDecimalSimpleValue"] | components["schemas"]["RecordsPostEditorSimpleValue"] | components["schemas"]["RecordsPostFileSimpleValue"] | components["schemas"]["RecordsPostGroupSimpleValue"] | components["schemas"]["RecordsPostLinkSimpleValue"] | components["schemas"]["RecordsPostModifiedAtSimpleValue"] | components["schemas"]["RecordsPostModifierSimpleValue"] | components["schemas"]["RecordsPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordsPostMultipleSelectSimpleValue"] | components["schemas"]["RecordsPostRecordIdSimpleValue"] | components["schemas"]["RecordsPostReferenceTableSimpleValue"] | components["schemas"]["RecordsPostSimpleTableValue"] | components["schemas"]["RecordsPostSingleLineTextSimpleValue"] | components["schemas"]["RecordsPostSingleSelectSimpleValue"] | components["schemas"]["RecordsPostStatusSimpleValue"] | components["schemas"]["RecordsPostTimeSimpleValue"] | components["schemas"]["RecordsPostUserSelectSimpleValue"] | components["schemas"]["RecordsPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordsPostGroupSelectSimpleValue"] | components["schemas"]["RecordsPostRevisionSimpleValue"] | components["schemas"]["RecordsPostRawRecordIdSimpleValue"];
                    }[];
                };
            };
        };
        responses: {
            /** @description success case of records/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The Record IDs of the created records.
                         *      */
                        ids?: number[];
                        /** @description The revision numbers of the records.
                         *      */
                        revisions?: number[];
                    };
                };
            };
        };
    };
    deleteRecordsForGuestSpace: {
        parameters: {
            query: {
                /** @description The app ID.
                 *      */
                app: number;
                /** @description Array of record IDs that will be deleted.
                 *     Up to 100 records can be specified.
                 *      */
                ids: number[];
                /** @description The Expected revision number.
                 *     The first id number will correspond to the first revision number in the array, the second id to the second revision number, and so on.
                 *     If the revision number does not match, an error will occur and no records will be deleted.
                 *     If the revision number is left blank or is -1, the revision number will not be checked for the corresponding record ID.
                 *      */
                revisions?: number[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getRecordsAclEvaluateForGuestSpace: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description An array of record IDs that will be evaluated.
                 *     The maximum limit is 100 IDs.
                 *      */
                ids: number[];
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/acl/evaluate/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain permission settings of the specified records.
                         *      */
                        rights?: components["schemas"]["RecordsAclEvaluateGetRight"][];
                    };
                };
            };
        };
    };
    getRecordsCursorForGuestSpace: {
        parameters: {
            query: {
                /** @description The cursor ID.
                 *      */
                id: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/cursor/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description States whether there are more records that can be acquired from the cursor.
                         *     - true: There are still records to be acquired.
                         *     - false: There are no more records to be acquired.
                         *
                         *     Run this API again with the same parameters to obtain the next set of records.
                         *     The cursor will remain valid until all records have been obtained.
                         *      */
                        next?: boolean;
                        /** @description An array of objects that includes field data of records that match the query.
                         *     The response is the same as the response for the Get Records API.
                         *      */
                        records?: {
                            [key: string]: components["schemas"]["RecordsCursorGetCalcSimpleValue"] | components["schemas"]["RecordsCursorGetCategorySimpleValue"] | components["schemas"]["RecordsCursorGetDateSimpleValue"] | components["schemas"]["RecordsCursorGetDatetimeSimpleValue"] | components["schemas"]["RecordsCursorGetDecimalSimpleValue"] | components["schemas"]["RecordsCursorGetEditorSimpleValue"] | components["schemas"]["RecordsCursorGetFileSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSimpleValue"] | components["schemas"]["RecordsCursorGetLinkSimpleValue"] | components["schemas"]["RecordsCursorGetModifiedAtSimpleValue"] | components["schemas"]["RecordsCursorGetModifierSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRecordIdSimpleValue"] | components["schemas"]["RecordsCursorGetReferenceTableSimpleValue"] | components["schemas"]["RecordsCursorGetSimpleTableValue"] | components["schemas"]["RecordsCursorGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetSingleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetStatusSimpleValue"] | components["schemas"]["RecordsCursorGetTimeSimpleValue"] | components["schemas"]["RecordsCursorGetUserSelectSimpleValue"] | components["schemas"]["RecordsCursorGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRevisionSimpleValue"] | components["schemas"]["RecordsCursorGetRawRecordIdSimpleValue"];
                        }[];
                    };
                };
            };
        };
    };
    postRecordsCursorForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The field codes to be included in the response when using the Get Cursor API.
                     *     If ignored, all accessible fields in the app will be returned.
                     *      */
                    fields?: string[];
                    /**
                     * Format: query
                     * @description The query string that will specify what records will be responded when using the Get Cursor API.
                     *     If ignored, all accessible records from the App will be returned.
                     *
                     */
                    query?: string;
                    /**
                     * Format: long
                     * @description The maximum number of records the Get Cursor API can retrieve from this cursor with one request.
                     *     The maximum number is 500 records. If ignored, the default number of records to be retrieved is 100.
                     *
                     */
                    size?: number;
                };
            };
        };
        responses: {
            /** @description success case of records/cursor/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The cursor ID.
                         *      */
                        id?: string;
                        /**
                         * Format: long
                         * @description The total count of records that match the query conditions.
                         *
                         */
                        totalCount?: number;
                    };
                };
            };
        };
    };
    deleteRecordsCursorForGuestSpace: {
        parameters: {
            query: {
                /** @description The cursor ID.
                 *      */
                id: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/cursor/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putRecordsStatusForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array including information of the record to be updated. Up to 100 records can be specified.
                     *     Specifying more than 100 records will result in an error.
                     *      */
                    records: components["schemas"]["RecordsStatusPutRecordsStatusPutFormRecord"][];
                };
            };
        };
        responses: {
            /** @description success case of records/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array including information of the updated records.
                         *      */
                        records?: components["schemas"]["RecordsStatusPutRecordsStatusPutOutputFormRecord"][];
                    };
                };
            };
        };
    };
    getSpaceForGuestSpace: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *     The Space ID can be found in the URL of the Space.
                 *     A Space with the URL of https://{domainname}.cybozu.com/k/#/space/111 has a Space ID of 111.
                 *      */
                id: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Apps that are in the thread.
                         *     This does not include Apps that are not live yet.
                         *      */
                        attachedApps?: components["schemas"]["SpaceGetAttachedApp"][];
                        /** @description The HTML of the Space body.
                         *     Null is returned if the HTML in the body is empty.
                         *     However, if the body has been set before, the HTML tags may be set even if nothing is displayed on the screen and the string will be returned.
                         *      */
                        body?: string;
                        /** @description The key of the Cover Photo.
                         *      */
                        coverKey?: string;
                        /**
                         * @description The image type of the Cover Photo.
                         *     - BLOB: An uploaded image.
                         *     - PRESET: A preset image.
                         *
                         * @enum {string}
                         */
                        coverType?: "BLOB" | "PRESET";
                        /** @description The URL of the Cover Photo.
                         *      */
                        coverUrl?: string;
                        /** @description An object containing information of the creator of the Space.
                         *      */
                        creator?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /**
                         * Format: long
                         * @description The Thread ID of the default thread that was created when the Space was made.
                         *
                         */
                        defaultThread?: number;
                        /** @description The options set for the Block users from joining or leaving the space and following or unfollowing the threads setting.
                         *     - true: Users cannot join/leave the Space or follow/unfollow threads.
                         *     - false: Users can join/leave the Space and follow/unfollow threads.
                         *      */
                        fixedMember?: boolean;
                        /**
                         * Format: long
                         * @description The Space ID.
                         *
                         */
                        id?: number;
                        /** @description The Guest Space setting.
                         *     - true: The Space is a Guest Space.
                         *     - false: The Space is not a Guest Space.
                         *      */
                        isGuest?: boolean;
                        /** @description The "Private" settings of the Space.
                         *     - true: The Space is private.
                         *     - false: The Space is not private.
                         *      */
                        isPrivate?: boolean;
                        /**
                         * Format: long
                         * @description The number of members of the Space.
                         *
                         */
                        memberCount?: number;
                        /** @description An object containing information of the updater of the Space.
                         *      */
                        modifier?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The name of the Space
                         *      */
                        name?: string;
                        /** @description An object containing information of the space's permission settings.
                         *      */
                        permissions?: {
                            /**
                             * @description The option set for the Only Allow Space Administrators to Create Apps setting
                             *     - EVERYONE: all users can create Apps.
                             *     - ADMIN: only administrators can create Apps.
                             *
                             * @enum {string}
                             */
                            createApp?: "EVERYONE" | "ADMIN";
                        };
                        /** @description The display status for the Announcement widget.
                         *     - true: The Announcement widget is displayed.
                         *     - false: The Announcement widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showAnnouncement?: boolean;
                        /** @description The display status for the Apps widget.
                         *     - true: The Apps widget is displayed.
                         *     - false: The Apps widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showAppList?: boolean;
                        /** @description The display status for the People widget.
                         *     - true: The People widget is displayed.
                         *     - false: The People widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showMemberList?: boolean;
                        /** @description The display status for the Related Apps & Spaces widget.
                         *     - true: The Related Apps & Spaces widget is displayed.
                         *     - false: The Related Apps & Spaces widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showRelatedLinkList?: boolean;
                        /** @description The display status for the Threads widget.
                         *     - true: The Threads widget is displayed.
                         *     - false: The Threads widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showThreadList?: boolean;
                        /** @description The Enable multiple threads setting.
                         *     - true: The Space is a Multi-threaded Space.
                         *     - false: The Space is a Single-threaded Space.
                         *      */
                        useMultiThread?: boolean;
                    };
                };
            };
        };
    };
    putSpaceForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: boolean
                     * @description The options set for the Block users from joining or leaving the space and following or unfollowing the threads setting.
                     *     - true: Users cannot join/leave the Space or follow/unfollow threads.
                     *     - false: Users can join/leave the Space and follow/unfollow threads.
                     *
                     */
                    fixedMember?: boolean;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: boolean
                     * @description The Private settings of the Space.
                     *     - true: The Space is private.
                     *     - false: The Space is not private.
                     *
                     */
                    isPrivate?: boolean;
                    /** @description The new name of the Space.
                     *      */
                    name?: string;
                    /** @description An object containing information of the space's permission settings.
                     *      */
                    permissions?: {
                        /**
                         * @description The option set for the Only Allow Space Administrators to Create Apps setting
                         *     - EVERYONE: all users can create apps.
                         *     - ADMIN: only administrators can create apps.
                         *
                         * @enum {string}
                         */
                        createApp?: "EVERYONE" | "ADMIN";
                    };
                    /**
                     * Format: boolean
                     * @description The display status for the Announcement widget.
                     *     - true: The Announcement widget is displayed.
                     *     - false: The Announcement widget is not displayed.
                     *
                     */
                    showAnnouncement?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Apps widget.
                     *     - true: The Apps widget is displayed.
                     *     - false: The Apps widget is not displayed.
                     *
                     */
                    showAppList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the People widget.
                     *     - true: The People widget is displayed.
                     *     - false: The People widget is not displayed.
                     *
                     */
                    showMemberList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Related Apps & Spaces widget.
                     *     - true: The Related Apps & Spaces widget is displayed.
                     *     - false: The Related Apps & Spaces widget is not displayed.
                     *
                     */
                    showRelatedLinkList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Threads widget.
                     *     - true: The Threads widget is displayed.
                     *     - false: The Threads widget is not displayed.
                     *
                     */
                    showThreadList?: boolean;
                    /**
                     * Format: boolean
                     * @description The Enable multiple threads setting.
                     *     - true: The Space is a Multi-threaded Space.
                     *     - false: The setting will not be updated, as a Multi-Threaded Space can not be reverted to a Single-threaded Space.
                     *
                     */
                    useMultiThread?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of space/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    deleteSpaceForGuestSpace: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *      */
                id: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceBodyForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The contents of the body as an HTML string.
                     *     HTML tags that cannot be used will be automatically removed.
                     *     HTML can be used to attach Apps, files and Emoji.
                     *     The usage of the @ mark to mention a user will not notify that user.
                     *      */
                    body: string;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                };
            };
        };
        responses: {
            /** @description success case of space/body/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceGuestsForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description A list of email addresses of Guest users.
                     *     Guest users must first be added as a Guest user of Kintone before they can be affiliated with Spaces. To do this, use the Add Guests API.
                     *     Users who are not Guest users, or are inactive/deleted users cannot be added to the list.
                     *      */
                    guests: string[];
                    /**
                     * Format: long
                     * @description The Guest Space ID.
                     *
                     */
                    id: number;
                };
            };
        };
        responses: {
            /** @description success case of space/guests/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getSpaceMembersForGuestSpace: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *      */
                id: number;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/members/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Space members.
                         *     Guest users, inactive users and deleted users will not be included.
                         *      */
                        members?: (components["schemas"]["SpaceMembersGetUserBean"] | components["schemas"]["SpaceMembersGetOrganizationBean"] | components["schemas"]["SpaceMembersGetGroupBean"])[];
                    };
                };
            };
        };
    };
    putSpaceMembersForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                    /** @description A list of members of the Space.
                     *     At least one Space Administrator must be specified.
                     *     Inactive and deleted users cannot be specified.
                     *      */
                    members?: components["schemas"]["SpaceMembersPutMemberForm"][];
                };
            };
        };
        responses: {
            /** @description success case of space/members/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceThreadForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The contents of the Thread body.
                     *     Write the contents as an HTML string, within 65535 characters
                     *     HTML tags that cannot be used will be automatically removed.
                     *     HTML can be used to attach Apps, files and Emoji.
                     *     The usage of the @ mark to mention a user will not notify that user.
                     *      */
                    body?: string;
                    /**
                     * Format: long
                     * @description The Thread ID.
                     *     The Thread ID can be found in the URL of the Thread.
                     *     A Space with the URL of https://{domainname}.cybozu.com/k/#/space/111/thread/222 has a Space ID of 111 and a Thread ID of 222.
                     *
                     */
                    id: number;
                    /** @description The new name of the Thread.
                     *     Must be between 1 - 128 characters.
                     *     The name will not be updated if this parameter is ignored.
                     *     The Thread name of single threaded Spaces cannot be updated.
                     *      */
                    name?: string;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    postSpaceThreadForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The new name of the Thread.
                     *     Must be between 1 - 128 characters.
                     *      */
                    name: string;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    space: number;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Thread ID of the created Thread.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    postSpaceThreadCommentForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An object including comment details.
                     *      */
                    comment: {
                        /** @description An array including data of attachment files.
                         *     The maximum number of the files is 5.
                         *     Required, if comment.text is not set.
                         *      */
                        files?: components["schemas"]["SpaceThreadCommentPostFileForm"][];
                        /** @description An array including mentions, that notify other Kintone users.
                         *      */
                        mentions?: components["schemas"]["SpaceThreadCommentPostMentionForm"][];
                        /** @description The comment contents.
                         *     A line break can be specified by LF.
                         *     The maximum characters of the comment is 65535. Required, if comment.files is not set.
                         *      */
                        text?: string;
                    };
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    space: number;
                    /**
                     * Format: long
                     * @description The Thread ID.
                     *
                     */
                    thread: number;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/comment/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The comment ID of the created comment.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    getSpacesStatisticsForGuestSpace: {
        parameters: {
            query?: {
                offset?: string;
                limit?: string;
            };
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of spaces/statistics/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        spaces?: components["schemas"]["SpacesStatisticsGetSpaceForm"][];
                    };
                };
            };
        };
    };
    postTemplateSpaceForGuestSpace: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description guest space id */
                guestSpaceId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: boolean
                     * @description The "Block users from joining or leaving the space and following or unfollowing the threads." settings of the Space.
                     *     - true: Users will not be able to join/leave the Space or follow/unfollow threads.
                     *     - false: Users will be able to join/leave the Space and follow/unfollow threads.
                     *     If ignored, this value is false.
                     *
                     */
                    fixedMember?: boolean;
                    /**
                     * Format: long
                     * @description The Space Template ID.
                     *     The Space Template ID is listed on the Space Templates list page, found under https://{domainname}.cybozu.com/k/admin/system/spacetemplate/
                     *
                     */
                    id: number;
                    /**
                     * Format: boolean
                     * @description The Guest Space settings of the Space.
                     *     - true: The Space will be a Guest Space
                     *     - false: The Space will be a normal Space.
                     *     If ignored, this value is false.
                     *
                     */
                    isGuest?: boolean;
                    /**
                     * Format: boolean
                     * @description The "Private" settings of the Space.
                     *     - true: The Space will be Private.
                     *     - false: The Space will not be Private.
                     *     If the isGuest parameter is set to true, this value is also true.
                     *     If ignored, this value is false.
                     *
                     */
                    isPrivate?: boolean;
                    /** @description A list of members of the Space.
                     *     At least one Space Administrator must be specified.
                     *     Inactive and deleted users cannot be specified.
                     *      */
                    members?: components["schemas"]["TemplateSpacePostMemberForm"][];
                    /** @description The new name of the Space.
                     *      */
                    name: string;
                };
            };
        };
        responses: {
            /** @description success case of template/space/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Space ID of the created Space.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    getApp: {
        parameters: {
            query: {
                /** @description The App ID */
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The App ID
                         *
                         */
                        appId?: number;
                        /** @description The App Code of the App.
                         *     An empty string is returned if an App Code is not set in the App's settings.
                         *      */
                        code?: string;
                        /**
                         * Format: date-time
                         * @description The date of when the App was created.
                         *
                         */
                        createdAt?: string;
                        /** @description The information of the user who created the App.
                         *      */
                        creator?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The description of the App.
                         *     If Localization settings are enabled, the localized name will be returned.
                         *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
                         *      */
                        description?: string;
                        /**
                         * Format: date-time
                         * @description The date of when the App was last modified.
                         *
                         */
                        modifiedAt?: string;
                        /** @description The information of the user who last updated the App.
                         *      */
                        modifier?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The name of the App.
                         *     If Localization settings are enabled, the localized name will be returned.
                         *     The localization language will be dependent on the language settings of the Kintone user authenticating this API.
                         *      */
                        name?: string;
                        /**
                         * Format: long
                         * @description If the App was created inside a Space,
                         *     it will return the Space ID. If not, null is returned.
                         *
                         */
                        spaceId?: number;
                        /**
                         * Format: long
                         * @description If the App was created inside a Space,
                         *     it will return the Thread ID of the Thread of the space it belongs to.
                         *     Apps that are created inside Spaces using the GUI will be automatically allocated to the default Thread.
                         *     If the App was not created in a Space, null is returned.
                         *
                         */
                        threadId?: number;
                    };
                };
            };
        };
    };
    getAppAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of App permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["AppAclGetRight"][];
                    };
                };
            };
        };
    };
    putAppAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of App permissions, in order of priority.
                     *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
                     *      */
                    rights: components["schemas"]["AppAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of app/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppActions: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/actions/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Action settings.
                         *     The object's key is the Action's unique identifier, which is set as the Action's name in its default language settings (this is regardless of the lang request parameter's value).
                         *     The values of the key are the various Action settings associated with that Action.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["AppActionsGetAction"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppAdminNotes: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/adminNotes/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The content of the notes. If not set, an empty string is returned.
                         *      */
                        content?: string;
                        /** @description The permission settings to include this note in app templates or duplicates
                         *     - true: include
                         *     - false: do not include
                         *      */
                        includeInTemplateAndDuplicates?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppCustomize: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/customize/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object containing data of JavaScript and CSS files for the desktop.
                         *      */
                        desktop?: {
                            /** @description An array listing data of CSS files for desktop.
                             *      */
                            css?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files.
                             *      */
                            js?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                        };
                        /** @description An object containing data of JavaScript and CSS files for the mobile.
                         *      */
                        mobile?: {
                            /** @description An array listing data of CSS files for mobile.
                             *      */
                            css?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files for mobile.
                             *      */
                            js?: (components["schemas"]["AppCustomizeGetUrlContentForm"] | components["schemas"]["AppCustomizeGetFileContentForm"])[];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the app settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The scope of customization
                         *     - ALL: Affect all users
                         *     - ADMIN: Affect only app administrators
                         *     - NONE: Disable
                         *
                         * @enum {string}
                         */
                        scope?: "ALL" | "ADMIN" | "NONE";
                    };
                };
            };
        };
    };
    getAppFormFields: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names,
                 *       in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/form/fields/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object with data of the field settings.
                         *      */
                        properties?: {
                            [key: string]: components["schemas"]["AppFormFieldsGetCalcFieldForm"] | components["schemas"]["AppFormFieldsGetCategoryFieldForm"] | components["schemas"]["AppFormFieldsGetDateFieldForm"] | components["schemas"]["AppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["AppFormFieldsGetDecimalFieldForm"] | components["schemas"]["AppFormFieldsGetEditorFieldForm"] | components["schemas"]["AppFormFieldsGetFileFieldForm"] | components["schemas"]["AppFormFieldsGetGroupFieldForm"] | components["schemas"]["AppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["AppFormFieldsGetLinkFieldForm"] | components["schemas"]["AppFormFieldsGetLookupFieldForm"] | components["schemas"]["AppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["AppFormFieldsGetModifierFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["AppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["AppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["AppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["AppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["AppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["AppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["AppFormFieldsGetStatusFieldForm"] | components["schemas"]["AppFormFieldsGetTableForm"] | components["schemas"]["AppFormFieldsGetTimeFieldForm"] | components["schemas"]["AppFormFieldsGetUserSelectFieldForm"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppFormLayout: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/form/layout/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of field layouts for each row.
                         *      */
                        layout?: (components["schemas"]["AppFormLayoutGetRow"] | components["schemas"]["AppFormLayoutGetGroupRow"] | components["schemas"]["AppFormLayoutGetSubtableRow"])[];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postAppMove: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description The Space ID of where the App will be moved to.
                     *     To remove an App from its current space, null can be specified.
                     *
                     */
                    space?: number;
                };
            };
        };
        responses: {
            /** @description success case of app/move/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getAppNotificationsGeneral: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/general/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of "Recipients and Conditions" options.
                         *     These options define who will receive the notifications.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsGeneralGetNotification"][];
                        /** @description Option to notify all commenters of a record when a comment is posted on that record.
                         *     This reflects the "Send updated comment notifications to all commenters" checkbox.
                         *     - true: Notify all commenters of the record when a comment is posted
                         *     - false: Do not notify all commenters of the record when a comment is posted
                         *      */
                        notifyToCommenter?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppNotificationsPerRecord: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names.
                 *     The response parameter notifications[].filterCond will include the localized option names in the query string.
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/perRecord/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects containing data of the Per Record Notification settings.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsPerRecordGetNotification"][];
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppNotificationsReminder: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names. For more information, refer to the following article:
                 *     Setting Localized Names (External link)
                 *     The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/notifications/reminder/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of Notification Trigger options.
                         *     These options define when the notifications will be sent out, under what conditions, and the recipients.
                         *      */
                        notifications?: components["schemas"]["AppNotificationsReminderGetNotification"][];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * Format: timezone
                         * @description The timezone that determines the Reminder notification's timing. This reflects the Reminder Time Zone dropdown option.
                         *     If the App's Reminder Notification settings have never been configured, null will be returned.
                         *
                         */
                        timezone?: string;
                    };
                };
            };
        };
    };
    getAppPlugins: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - es: retrieves the localized Spanish names
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "JA" | "EN" | "ZH" | "ES";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins added to the App.
                         *      */
                        plugins?: components["schemas"]["AppPluginsGetPluginForm"][];
                        /**
                         * Format: long
                         * @description The revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppReports: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/reports/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Graph settings data.
                         *        The key of the object is the graph's unique identifier, which is set as the graph's name in its default language settings (this is regardless of the lang request parameter's value).
                         *        The values of the key are the various graph settings associated with that graph.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["AppReportsGetReport"] | components["schemas"]["AppReportsGetReportWithChartMode"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getAppSettings: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/settings/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The app description in HTML format.
                         *      */
                        description?: string;
                        /** @description The Enable bulk deletion of records setting.
                         *      */
                        enableBulkDeletion?: boolean;
                        /** @description The Enable comments setting.
                         *      */
                        enableComments?: boolean;
                        /** @description The Enable the feature to "duplicate record" setting.
                         *      */
                        enableDuplicateRecord?: boolean;
                        /** @description The Enable the feature to "Inline record editing on record list views" setting.
                         *      */
                        enableInlineRecordEditing?: boolean;
                        /** @description The Show thumbnails setting.
                         *      */
                        enableThumbnails?: boolean;
                        /** @description The First month of Fiscal Year setting. The number of the month will be returned.
                         *      */
                        firstMonthOfFiscalYear?: string;
                        icon?: components["schemas"]["AppSettingsGetIconPresetForm"] | components["schemas"]["AppSettingsGetIconFileForm"];
                        /** @description The App name.
                         *      */
                        name?: string;
                        numberPrecision?: components["schemas"]["AppSettingsGetNumberPrecision"];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The color theme.
                         *     - WHITE
                         *     - RED
                         *     - BLUE
                         *     - GREEN
                         *     - YELLOW
                         *     - BLACK
                         *
                         *     Apps created before February 2017 may respond with the following classic themes:
                         *     CLIPBOARD, BINDER, PENCIL, CLIPS.
                         *
                         * @enum {string}
                         */
                        theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                        titleField?: components["schemas"]["AppSettingsGetTitleField"];
                    };
                };
            };
        };
    };
    getAppStatus: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/status/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array containing data of the Actions. They are listed in the same order as in the GUI.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        actions?: components["schemas"]["AppStatusGetActionForm"][];
                        /** @description The on/off settings of the process management settings.
                         *     - true: The process management settings is enabled.
                         *     - false: The process management settings is disabled.
                         *      */
                        enable?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the process management statuses.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        states?: {
                            [key: string]: components["schemas"]["AppStatusGetStateForm"];
                        };
                    };
                };
            };
        };
    };
    getAppViews: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of app/views/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object listing View information.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["AppViewsGetBuiltinListViewOutputForm"] | components["schemas"]["AppViewsGetBuiltinCalendarViewOutputForm"] | components["schemas"]["AppViewsGetListViewOutputForm"] | components["schemas"]["AppViewsGetCalendarViewOutputForm"] | components["schemas"]["AppViewsGetCustomViewOutputForm"];
                        };
                    };
                };
            };
        };
    };
    getApps: {
        parameters: {
            query?: {
                /** @description The App Code.
                 *     Up to 100 App Codes can be specified.
                 *     Each App Code must be between 1 to 64 characters.
                 *     An exact match search will be used, and will be case sensitive.
                 *      */
                codes?: string[];
                /** @description The number of retrievals that will be skipped.
                 *     Must be between 0 and 2147483647. If nothing is specified, it will default to 0.
                 *      */
                offset?: number;
                /** @description The App Name.
                 *     A partial search will be used, and the search will be case insensitive.
                 *     The localized name of the App in the user's locale will also be included in the search.
                 *      */
                name?: string;
                /** @description The number of Apps to retrieve.
                 *     Must be between 1 and 100.
                 *     If nothing is specified, it will default to 100.
                 *      */
                limit?: number;
                /** @description The App IDs.
                 *     Up to 100 IDs can be specified.
                 *      */
                ids?: number[];
                /** @description The Space ID of where the App resides in.
                 *     Up to 100 IDs can be specified.
                 *      */
                spaceIds?: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of apps/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain general information of Apps.
                         *      */
                        apps?: components["schemas"]["AppsGetAppWithSpaceIdForm"][];
                    };
                };
            };
        };
    };
    getAppsStatistics: {
        parameters: {
            query?: {
                /** @description The number of retrievals that will be skipped.
                 *     Must be between 0 and 2147483647. If nothing is specified, it will default to 0.
                 *      */
                offset?: string;
                /** @description The number of Apps to retrieve.
                 *     Must be between 1 and 100.
                 *     If nothing is specified, it will default to 100.
                 *      */
                limit?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of apps/statistics/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain the information of Apps.
                         *      */
                        apps?: components["schemas"]["AppsStatisticsGetAppForm"][];
                    };
                };
            };
        };
    };
    postBulkRequest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An array of requests. The maximum number of requests is 20.
                     *      */
                    requests: components["schemas"]["BulkRequestPostRequestForm"][];
                };
            };
        };
        responses: {
            /** @description success case of bulkRequest/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response from each API request. The order of the response is the same as the order of the requests.
                         *     If an API request fails, an error will be included in the index of the failed API.
                         *     In this case, all other indexes will be responded with {} (empty objects).
                         *      */
                        results?: (components["schemas"]["BulkRequestPostRecordPostOutputForm"] | components["schemas"]["BulkRequestPostRecordPutOutputForm"] | components["schemas"]["BulkRequestPostRecordStatusPutOutputForm"] | components["schemas"]["BulkRequestPostRecordAssigneesPutOutputForm"] | components["schemas"]["BulkRequestPostRecordsDeleteOutputForm"] | components["schemas"]["BulkRequestPostRecordsPostOutputForm"] | components["schemas"]["BulkRequestPostRecordsPutOutputForm"] | components["schemas"]["BulkRequestPostRecordsStatusPutOutputForm"])[];
                    };
                };
            };
        };
    };
    getFieldAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of field/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of permission settings.
                         *      */
                        rights?: components["schemas"]["FieldAclGetRight"][];
                    };
                };
            };
        };
    };
    putFieldAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of field permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["FieldAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of field/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    downloadFile: {
        parameters: {
            query: {
                /** @description The value that is set on the Attachment field in the response data returned when using the Get Record API.
                 *      */
                fileKey: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of file/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadFile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    file?: unknown;
                };
            };
        };
        responses: {
            /** @description success case of file/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The fileKey representing an uploaded file.
                         *     Use this fileKey with the following APIs to attach it to an Attachment field of an app:
                         *     - Add Record
                         *     - Add Records
                         *     - Update Record
                         *     - Update Records
                         *      */
                        fileKey?: string;
                    };
                };
            };
        };
    };
    getForm: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of form/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        properties?: (components["schemas"]["FormGetLayoutProperties"] | components["schemas"]["FormGetLabelProperties"] | components["schemas"]["FormGetBultinProperties"] | components["schemas"]["FormGetCalcSimpleProperties"] | components["schemas"]["FormGetDateSimpleProperties"] | components["schemas"]["FormGetDatetimeSimpleProperties"] | components["schemas"]["FormGetDecimalSimpleProperties"] | components["schemas"]["FormGetEditorSimpleProperties"] | components["schemas"]["FormGetFileSimpleProperties"] | components["schemas"]["FormGetLinkSimpleProperties"] | components["schemas"]["FormGetMultipleLineTextSimpleProperties"] | components["schemas"]["FormGetMultipleSelectSimpleProperties"] | components["schemas"]["FormGetSingleLineTextSimpleProperties"] | components["schemas"]["FormGetSingleSelectSimpleProperties"] | components["schemas"]["FormGetTimeSimpleProperties"] | components["schemas"]["FormGetUserSelectSimpleProperties"] | components["schemas"]["FormGetOrganizationSelectSimpleProperties"] | components["schemas"]["FormGetGroupSelectSimpleProperties"] | components["schemas"]["FormGetLookupSimpleProperties"] | components["schemas"]["FormGetReferenceTableLayoutProperties"] | components["schemas"]["FormGetSubTableLayoutProperties"] | components["schemas"]["FormGetSpacerProperties"])[];
                    };
                };
            };
        };
    };
    postGuests: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description A list of Guest user data.
                     *      */
                    guests: components["schemas"]["GuestsPostGuestUserForm"][];
                };
            };
        };
        responses: {
            /** @description success case of guests/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    deleteGuests: {
        parameters: {
            query: {
                /** @description A list of email addresses of Guest users.
                 *     Up to 100 Guests can be deleted.
                 *      */
                guests: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of guests/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putPlugin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
                     *      */
                    fileKey: string;
                    /** @description The ID of the plug-in to be updated.
                     *      */
                    id: string;
                };
            };
        };
        responses: {
            /** @description success case of plugin/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The plug-in ID of the updated plug-in.
                         *      */
                        id?: string;
                        /** @description The version number of the plug-in.
                         *      */
                        version?: string;
                    };
                };
            };
        };
    };
    installPlugin: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The fileKey representing an uploaded file. Use the Upload File API to upload the file and retrieve the fileKey.
                     *      */
                    fileKey: string;
                };
            };
        };
        responses: {
            /** @description success case of plugin/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The installed plug-in ID.
                         *      */
                        id?: string;
                        /** @description The version number of the plug-in.
                         *      */
                        version?: string;
                    };
                };
            };
        };
    };
    uninstallPlugin: {
        parameters: {
            query: {
                /** @description The ID of the plug-in.
                 *      */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugin/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getPluginApps: {
        parameters: {
            query: {
                /** @description The number of plug-ins to skip from the list of plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 500.
                 *     The default number is 100.
                 *      */
                limit?: string;
                /** @description The ID of the plug-in.
                 *      */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugin/apps/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of objects containing the plug-in ID and name.
                         *     Objects are listed in ascending order of their App IDs.
                         *      */
                        apps?: components["schemas"]["PluginAppsGetAppDto"][];
                    };
                };
            };
        };
    };
    getPlugins: {
        parameters: {
            query?: {
                /** @description The number of plug-ins to skip from the list of installed plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 100.
                 *     The default number is 100.
                 *      */
                limit?: string;
                /** @description The plug-in ids. The maximum limit of ids that can be specified is 100.
                 *     If null or an empty array is specified, this parameter will be ignored, and a list of plug-ins will be returned.
                 *      */
                ids?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of plug-ins added to the App.<br>Plug-ins are listed in descending order of the datetime they are added.
                         *      */
                        plugins?: components["schemas"]["PluginsGetPluginDto"][];
                    };
                };
            };
        };
    };
    getPluginsRequired: {
        parameters: {
            query?: {
                /** @description The number of plug-ins to skip from the list of required plug-ins.
                 *     If ignored, this value is 0.
                 *      */
                offset?: string;
                /** @description The maximum number of plug-ins to retrieve.
                 *     Must be between 1 and 100.
                 *     The default number is 100.
                 *      */
                limit?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of plugins/required/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins that needs to be installed.
                         *      */
                        plugins?: components["schemas"]["PluginsRequiredGetPluginDto"][];
                    };
                };
            };
        };
    };
    postPreviewApp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The App name.
                     *     The maximum length is 64 characters.
                     *      */
                    name: string;
                    /**
                     * Format: long
                     * @description The Space ID of where the App will be created.
                     *
                     */
                    space?: number;
                    /**
                     * Format: long
                     * @description The Thread ID of the thread in the Space where the App will be created.
                     *     *It is recommended to ignore this parameter so that Apps are created in the default thread.
                     *     There is currently no helpful reason to create Apps in threads other than the default thread,
                     *     as there are no visual representations in Kintone of Apps being related to threads.
                     *     There are only visual representations of Apps being related to Spaces.
                     *
                     */
                    thread?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The App ID of the created preview App.
                         *
                         */
                        app?: number;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of App permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["PreviewAppAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewAppAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of App permissions, in order of priority.
                     *     The "Everyone" group will be treated with the lowest priority, wherever it is placed in the list.
                     *      */
                    rights: components["schemas"]["PreviewAppAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/app/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppActions: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/actions/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Action settings.
                         *     The object's key is the Action's unique identifier, which is set as the Action's name in its default language settings (this is regardless of the lang request parameter's value).
                         *     The values of the key are the various Action settings associated with that Action.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["PreviewAppActionsGetAction"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppActions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An object listing Action settings.
                     *     The object's key is the Action's unique identifier, which is equal to the Action's name in its default language settings.
                     *     The values of the key are the various Action settings associated with that Action.
                     *      */
                    actions: {
                        [key: string]: components["schemas"]["PreviewAppActionsPutAction"];
                    };
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/actions/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object listing Action settings.
                         *      */
                        actions?: {
                            [key: string]: components["schemas"]["PreviewAppActionsPutActionResult"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppAdminNotes: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/adminNotes/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The content of the notes. If not set, an empty string is returned.
                         *      */
                        content?: string;
                        /** @description The permission settings to include this note in app templates or duplicates
                         *     - true: include
                         *     - false: do not include
                         *      */
                        includeInTemplateAndDuplicates?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppAdminNotes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The permission settings to include this note in app templates or duplicates
                     *     - true: include
                     *     - false: do not include
                     *
                     *     If the parameter is omitted, the content will not change.
                     *      */
                    content?: string;
                    /** @description The revision number of the App settings.
                     *     If the parameter does not match the actual revision number, it will be considered an error, and the content will not be updated.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *      */
                    includeInTemplateAndDuplicates?: string;
                    /**
                     * Format: long
                     * @description The content of the notes.
                     *     The content must be between 0 to 10000 characters.
                     *     If the parameter is omitted, the content will not change.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/adminNotes/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number after changing the app settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppCustomize: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/customize/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object containing data of JavaScript and CSS files for the desktop.
                         *      */
                        desktop?: {
                            /** @description An array listing data of CSS files for desktop.
                             *      */
                            css?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files.
                             *      */
                            js?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                        };
                        /** @description An object containing data of JavaScript and CSS files for the mobile.
                         *      */
                        mobile?: {
                            /** @description An array listing data of CSS files for mobile.
                             *      */
                            css?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                            /** @description An array listing data of JavaScript files for mobile.
                             *      */
                            js?: (components["schemas"]["PreviewAppCustomizeGetUrlContentForm"] | components["schemas"]["PreviewAppCustomizeGetFileContentForm"])[];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the app settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The scope of customization
                         *     - ALL: Affect all users
                         *     - ADMIN: Affect only app administrators
                         *     - NONE: Disable
                         *
                         * @enum {string}
                         */
                        scope?: "ALL" | "ADMIN" | "NONE";
                    };
                };
            };
        };
    };
    putPreviewAppCustomize: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object containing data of JavaScript and CSS files for the desktop.
                     *      */
                    desktop?: {
                        /** @description An array listing data of CSS files for desktop.
                         *      */
                        css?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                        /** @description An array listing data of JavaScript files.
                         *      */
                        js?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                    };
                    /** @description An object containing data of JavaScript and CSS files for the mobile.
                     *      */
                    mobile?: {
                        /** @description An array listing data of CSS files for mobile.
                         *      */
                        css?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                        /** @description An array listing data of JavaScript files for mobile.
                         *      */
                        js?: (components["schemas"]["PreviewAppCustomizePutUrlContentForm"] | components["schemas"]["PreviewAppCustomizePutFileContentForm"])[];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * @description The scope of customization
                     *     - ALL: Affect all users
                     *     - ADMIN: Affect only app administrators
                     *     - NONE: Disable
                     *
                     * @enum {string}
                     */
                    scope?: "ALL" | "ADMIN" | "NONE";
                };
            };
        };
        responses: {
            /** @description success case of preview/app/customize/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppDeploy: {
        parameters: {
            query: {
                /** @description The list of Apps to check the deploy statuses of.
                 *     The Maximum limit is 300.
                 *     If Apps in Guest Spaces are specified,
                 *     all Apps specified in the request must belong to that Guest Space.
                 *      */
                apps: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/deploy/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of objects with data of deploy statuses.
                         *      */
                        apps?: components["schemas"]["PreviewAppDeployGetAppForm"][];
                    };
                };
            };
        };
    };
    deployApp: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The list of Apps to deploy the pre-live settings to the live Apps.
                     *     The Maximum limit is 300.
                     *     If Apps are being deployed to Guest Spaces,
                     *     Apps can only be deployed to the same Guest Space.
                     *      */
                    apps: components["schemas"]["PreviewAppDeployPostAppForm"][];
                    /**
                     * Format: boolean
                     * @description Specify `true` to cancel all changes made to the pre-live settings.
                     *     The pre-live settings will be reverted back to the current settings of the live app.
                     *
                     */
                    revert?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/deploy/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getPreviewAppFormFields: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names,
                 *       in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/fields/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object with data of the field settings.
                         *      */
                        properties?: {
                            [key: string]: components["schemas"]["PreviewAppFormFieldsGetCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetTableForm"] | components["schemas"]["PreviewAppFormFieldsGetTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsGetUserSelectFieldForm"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppFormFields: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object with data of the field settings.
                     *      */
                    properties: {
                        [key: string]: components["schemas"]["PreviewAppFormFieldsPutCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutTableForm"] | components["schemas"]["PreviewAppFormFieldsPutTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPutUserSelectFieldForm"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/fields/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postPreviewAppFormFields: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object with data of the field settings.
                     *      */
                    properties: {
                        [key: string]: components["schemas"]["PreviewAppFormFieldsPostCalcFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostCategoryFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDateFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDatetimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostDecimalFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostEditorFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostFileFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostGroupSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLinkFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostLookupFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifiedAtFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostModifierFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostMultipleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostOrganizationSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostRecordIdFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostReferenceTableFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleCheckFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleLineTextFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostSingleSelectFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusAssigneeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostStatusFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostTableForm"] | components["schemas"]["PreviewAppFormFieldsPostTimeFieldForm"] | components["schemas"]["PreviewAppFormFieldsPostUserSelectFieldForm"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/fields/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    deletePreviewAppFormFields: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The list of field codes of the fields to delete.
                 *     Up to 100 field codes can be specified.
                 *      */
                fields: string[];
                /** @description Specify the revision number of the settings that will be deployed.
                 *     The request will fail if the revision number is not the latest revision.
                 *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                 *      */
                revision?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/fields/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppFormLayout: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/form/layout/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of field layouts for each row.
                         *      */
                        layout?: (components["schemas"]["PreviewAppFormLayoutGetRow"] | components["schemas"]["PreviewAppFormLayoutGetGroupRow"] | components["schemas"]["PreviewAppFormLayoutGetSubtableRow"])[];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppFormLayout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description A list of field layouts for each row.
                     *      */
                    layout: (components["schemas"]["PreviewAppFormLayoutPutRow"] | components["schemas"]["PreviewAppFormLayoutPutGroupRow"] | components["schemas"]["PreviewAppFormLayoutPutSubtableRow"])[];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/form/layout/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsGeneral: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/general/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of "Recipients and Conditions" options.
                         *     These options define who will receive the notifications.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsGeneralGetNotification"][];
                        /** @description Option to notify all commenters of a record when a comment is posted on that record.
                         *     This reflects the "Send updated comment notifications to all commenters" checkbox.
                         *     - true: Notify all commenters of the record when a comment is posted
                         *     - false: Do not notify all commenters of the record when a comment is posted
                         *      */
                        notifyToCommenter?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsGeneral: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects consisting of "Recipients and Conditions" options.
                     *     If an empty array is sent, all the recipients will be removed.
                     *     If this parameter is ignored, no changes will be made to the "Recipients and Conditions" options.
                     *      */
                    notifications?: components["schemas"]["PreviewAppNotificationsGeneralPutNotification"][];
                    /** Format: boolean */
                    notifyToCommenter?: boolean;
                    /** Format: long */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/general/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsPerRecord: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names.
                 *     The response parameter notifications[].filterCond will include the localized option names in the query string.
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/perRecord/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects containing data of the Per Record Notification settings.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsPerRecordGetNotification"][];
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsPerRecord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects containing data of the Per Record Notification settings.
                     *     If the array is empty, all of the Per Record Notification settings will be deleted.
                     *     If ignored, this setting will not be changed.
                     *      */
                    notifications: components["schemas"]["PreviewAppNotificationsPerRecordPutNotification"][];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/perRecord/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppNotificationsReminder: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description Set this parameter if there are fields that contain multiple options, and the Localization Settings have been set for those option names. For more information, refer to the following article:
                 *     Setting Localized Names (External link)
                 *     The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/notifications/reminder/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects consisting of Notification Trigger options.
                         *     These options define when the notifications will be sent out, under what conditions, and the recipients.
                         *      */
                        notifications?: components["schemas"]["PreviewAppNotificationsReminderGetNotification"][];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * Format: timezone
                         * @description The timezone that determines the Reminder notification's timing. This reflects the Reminder Time Zone dropdown option.
                         *     If the App's Reminder Notification settings have never been configured, null will be returned.
                         *
                         */
                        timezone?: string;
                    };
                };
            };
        };
    };
    putPreviewAppNotificationsReminder: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array of objects consisting of "Notification Trigger" options. These options define when the notifications will be sent out, under what conditions, and the recipients.
                     *     If an empty array is sent, all the recipients will be removed.
                     *     If this parameter is ignored, no changes will be made to the "Notification Trigger" options.
                     *      */
                    notifications?: components["schemas"]["PreviewAppNotificationsReminderPutNotification"][];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * Format: timezone
                     * @description The timezone that determines the Reminder notification's timing. This reflects the "Reminder Time Zone" dropdown option.
                     *     If the App's Reminder Notification settings have never been configured, the API executing user's timezone will be used.
                     *
                     */
                    timezone?: string;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/notifications/reminder/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppPlugins: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - es: retrieves the localized Spanish names
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "JA" | "EN" | "ZH" | "ES";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/plugins/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Plug-ins added to the App.
                         *      */
                        plugins?: components["schemas"]["PreviewAppPluginsGetPluginForm"][];
                        /**
                         * Format: long
                         * @description The revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postPreviewAppPlugins: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The Plug-in IDs that will be added to the App.
                     *      */
                    ids: string[];
                    /**
                     * Format: long
                     * @description Specify the expected current revision number for the App.
                     *     The request will fail if the stated revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/plugins/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The updated revision number of the App.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppReports: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/reports/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object of Graph settings data.
                         *        The key of the object is the graph's unique identifier, which is set as the graph's name in its default language settings (this is regardless of the lang request parameter's value).
                         *        The values of the key are the various graph settings associated with that graph.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["PreviewAppReportsGetReport"] | components["schemas"]["PreviewAppReportsGetReportWithChartMode"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putPreviewAppReports: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object listing Graph information.
                     *     The key of the object is the graph's unique identifier,
                     *     which is equal to the name of the graph in its default language settings.
                     *     The values of the key are the various graph settings associated with that graph.
                     *      */
                    reports: {
                        [key: string]: components["schemas"]["PreviewAppReportsPutReport"] | components["schemas"]["PreviewAppReportsPutReportWithChartMode"];
                    };
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of preview/app/reports/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An object listing Graph information.
                         *      */
                        reports?: {
                            [key: string]: components["schemas"]["PreviewAppReportsPutReportResult"];
                        };
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppSettings: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/settings/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The app description in HTML format.
                         *      */
                        description?: string;
                        /** @description The Enable bulk deletion of records setting.
                         *      */
                        enableBulkDeletion?: boolean;
                        /** @description The Enable comments setting.
                         *      */
                        enableComments?: boolean;
                        /** @description The Enable the feature to "duplicate record" setting.
                         *      */
                        enableDuplicateRecord?: boolean;
                        /** @description The Enable the feature to "Inline record editing on record list views" setting.
                         *      */
                        enableInlineRecordEditing?: boolean;
                        /** @description The Show thumbnails setting.
                         *      */
                        enableThumbnails?: boolean;
                        /** @description The First month of Fiscal Year setting. The number of the month will be returned.
                         *      */
                        firstMonthOfFiscalYear?: string;
                        icon?: components["schemas"]["PreviewAppSettingsGetIconPresetForm"] | components["schemas"]["PreviewAppSettingsGetIconFileForm"];
                        /** @description The App name.
                         *      */
                        name?: string;
                        numberPrecision?: components["schemas"]["PreviewAppSettingsGetNumberPrecision"];
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /**
                         * @description The color theme.
                         *     - WHITE
                         *     - RED
                         *     - BLUE
                         *     - GREEN
                         *     - YELLOW
                         *     - BLACK
                         *
                         *     Apps created before February 2017 may respond with the following classic themes:
                         *     CLIPBOARD, BINDER, PENCIL, CLIPS.
                         *
                         * @enum {string}
                         */
                        theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                        titleField?: components["schemas"]["PreviewAppSettingsGetTitleField"];
                    };
                };
            };
        };
    };
    putPreviewAppSettings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The App description.
                     *     The maximum character limit is 10,000. HTML tags can be used.
                     *      */
                    description?: string;
                    /** @description The Enable bulk deletion of records setting.
                     *      */
                    enableBulkDeletion?: string;
                    /** @description The Enable comments setting.
                     *      */
                    enableComments?: string;
                    /** @description The Enable the feature to "duplicate record" setting.
                     *      */
                    enableDuplicateRecord?: string;
                    /** @description The Enable the feature to "Inline record editing on record list views" setting.
                     *      */
                    enableInlineRecordEditing?: string;
                    /** @description The Show thumbnails setting.
                     *      */
                    enableThumbnails?: string;
                    /** @description The First month of Fiscal Year setting. Specify the number of the month.
                     *      */
                    firstMonthOfFiscalYear?: string;
                    icon?: components["schemas"]["PreviewAppSettingsPutIconPresetForm"] | components["schemas"]["PreviewAppSettingsPutIconFileForm"];
                    /** @description The App name.
                     *     The maximum character limit is 64.
                     *      */
                    name?: string;
                    numberPrecision?: components["schemas"]["PreviewAppSettingsPutNumberPrecision"];
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /**
                     * @description The color theme.
                     *     - WHITE
                     *     - RED
                     *     - BLUE
                     *     - GREEN
                     *     - YELLOW
                     *     - BLACK
                     *
                     * @enum {string}
                     */
                    theme?: "WHITE" | "CLIPBOARD" | "BINDER" | "PENCIL" | "CLIPS" | "RED" | "GREEN" | "BLUE" | "YELLOW" | "BLACK";
                    titleField?: components["schemas"]["PreviewAppSettingsPutTitleField"];
                };
            };
        };
        responses: {
            /** @description success case of preview/app/settings/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppStatus: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/status/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array containing data of the Actions. They are listed in the same order as in the GUI.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        actions?: components["schemas"]["PreviewAppStatusGetActionForm"][];
                        /** @description The on/off settings of the process management settings.
                         *     - true: The process management settings is enabled.
                         *     - false: The process management settings is disabled.
                         *      */
                        enable?: boolean;
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the process management statuses.
                         *     `null` is returned for Apps that have never enabled the process management settings before.
                         *      */
                        states?: {
                            [key: string]: components["schemas"]["PreviewAppStatusGetStateForm"];
                        };
                    };
                };
            };
        };
    };
    putPreviewAppStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An array containing data of the Actions.
                     *      */
                    actions?: components["schemas"]["PreviewAppStatusPutActionForm"][];
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: boolean
                     * @description The on/off settings of the process management settings.
                     *     - true: The process management settings is enabled.
                     *     - false: The process management settings is disabled.
                     *
                     */
                    enable?: boolean;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An object containing data of the process management statuses.
                     *      */
                    states?: {
                        [key: string]: components["schemas"]["PreviewAppStatusPutStateForm"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of preview/app/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewAppViews: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/app/views/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object listing View information.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["PreviewAppViewsGetBuiltinListViewOutputForm"] | components["schemas"]["PreviewAppViewsGetBuiltinCalendarViewOutputForm"] | components["schemas"]["PreviewAppViewsGetListViewOutputForm"] | components["schemas"]["PreviewAppViewsGetCalendarViewOutputForm"] | components["schemas"]["PreviewAppViewsGetCustomViewOutputForm"];
                        };
                    };
                };
            };
        };
    };
    putPreviewAppViews: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An object of data of Views.
                     *      */
                    views: {
                        [key: string]: components["schemas"]["PreviewAppViewsPutListViewForm"] | components["schemas"]["PreviewAppViewsPutCalendarViewForm"] | components["schemas"]["PreviewAppViewsPutCustomViewForm"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of preview/app/views/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An object containing data of the Views.
                         *      */
                        views?: {
                            [key: string]: components["schemas"]["PreviewAppViewsPutResult"];
                        };
                    };
                };
            };
        };
    };
    getPreviewFieldAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/field/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of permission settings.
                         *      */
                        rights?: components["schemas"]["PreviewFieldAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewFieldAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of field permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["PreviewFieldAclPutRight"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/field/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getPreviewForm: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/form/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        properties?: (components["schemas"]["PreviewFormGetLayoutProperties"] | components["schemas"]["PreviewFormGetLabelProperties"] | components["schemas"]["PreviewFormGetBultinProperties"] | components["schemas"]["PreviewFormGetCalcSimpleProperties"] | components["schemas"]["PreviewFormGetDateSimpleProperties"] | components["schemas"]["PreviewFormGetDatetimeSimpleProperties"] | components["schemas"]["PreviewFormGetDecimalSimpleProperties"] | components["schemas"]["PreviewFormGetEditorSimpleProperties"] | components["schemas"]["PreviewFormGetFileSimpleProperties"] | components["schemas"]["PreviewFormGetLinkSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetMultipleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetSingleLineTextSimpleProperties"] | components["schemas"]["PreviewFormGetSingleSelectSimpleProperties"] | components["schemas"]["PreviewFormGetTimeSimpleProperties"] | components["schemas"]["PreviewFormGetUserSelectSimpleProperties"] | components["schemas"]["PreviewFormGetOrganizationSelectSimpleProperties"] | components["schemas"]["PreviewFormGetGroupSelectSimpleProperties"] | components["schemas"]["PreviewFormGetLookupSimpleProperties"] | components["schemas"]["PreviewFormGetReferenceTableLayoutProperties"] | components["schemas"]["PreviewFormGetSubTableLayoutProperties"] | components["schemas"]["PreviewFormGetSpacerProperties"])[];
                    };
                };
            };
        };
    };
    getPreviewRecordAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of preview/record/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of record permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["PreviewRecordAclGetRight"][];
                    };
                };
            };
        };
    };
    putPreviewRecordAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of record permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["PreviewRecordAclPutRightForm"][];
                };
            };
        };
        responses: {
            /** @description success case of preview/record/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecord: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The Record ID.
                 *      */
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The type and value of all fields within the record are included in the object.
                         *      */
                        record?: {
                            [key: string]: components["schemas"]["RecordGetCalcSimpleValue"] | components["schemas"]["RecordGetCategorySimpleValue"] | components["schemas"]["RecordGetDateSimpleValue"] | components["schemas"]["RecordGetDatetimeSimpleValue"] | components["schemas"]["RecordGetDecimalSimpleValue"] | components["schemas"]["RecordGetEditorSimpleValue"] | components["schemas"]["RecordGetFileSimpleValue"] | components["schemas"]["RecordGetGroupSimpleValue"] | components["schemas"]["RecordGetLinkSimpleValue"] | components["schemas"]["RecordGetModifiedAtSimpleValue"] | components["schemas"]["RecordGetModifierSimpleValue"] | components["schemas"]["RecordGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordGetMultipleSelectSimpleValue"] | components["schemas"]["RecordGetRecordIdSimpleValue"] | components["schemas"]["RecordGetReferenceTableSimpleValue"] | components["schemas"]["RecordGetSimpleTableValue"] | components["schemas"]["RecordGetSingleLineTextSimpleValue"] | components["schemas"]["RecordGetSingleSelectSimpleValue"] | components["schemas"]["RecordGetStatusSimpleValue"] | components["schemas"]["RecordGetTimeSimpleValue"] | components["schemas"]["RecordGetUserSelectSimpleValue"] | components["schemas"]["RecordGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordGetGroupSelectSimpleValue"] | components["schemas"]["RecordGetRevisionSimpleValue"] | components["schemas"]["RecordGetRawRecordIdSimpleValue"];
                        };
                    };
                };
            };
        };
    };
    putRecord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /**
                     * Format: long
                     * @description The Record ID of the record to be updated.
                     *     Required, if updateKey will not be specified.
                     *
                     */
                    id?: number;
                    /** @description Field codes and values are specified in this object.
                     *     If ignored, the record will not be updated.
                     *      */
                    record?: {
                        [key: string]: components["schemas"]["RecordPutCalcSimpleValue"] | components["schemas"]["RecordPutCategorySimpleValue"] | components["schemas"]["RecordPutDateSimpleValue"] | components["schemas"]["RecordPutDatetimeSimpleValue"] | components["schemas"]["RecordPutDecimalSimpleValue"] | components["schemas"]["RecordPutEditorSimpleValue"] | components["schemas"]["RecordPutFileSimpleValue"] | components["schemas"]["RecordPutGroupSimpleValue"] | components["schemas"]["RecordPutLinkSimpleValue"] | components["schemas"]["RecordPutModifiedAtSimpleValue"] | components["schemas"]["RecordPutModifierSimpleValue"] | components["schemas"]["RecordPutMultipleLineTextSimpleValue"] | components["schemas"]["RecordPutMultipleSelectSimpleValue"] | components["schemas"]["RecordPutRecordIdSimpleValue"] | components["schemas"]["RecordPutReferenceTableSimpleValue"] | components["schemas"]["RecordPutSimpleTableValue"] | components["schemas"]["RecordPutSingleLineTextSimpleValue"] | components["schemas"]["RecordPutSingleSelectSimpleValue"] | components["schemas"]["RecordPutStatusSimpleValue"] | components["schemas"]["RecordPutTimeSimpleValue"] | components["schemas"]["RecordPutUserSelectSimpleValue"] | components["schemas"]["RecordPutOrganizationSelectSimpleValue"] | components["schemas"]["RecordPutGroupSelectSimpleValue"] | components["schemas"]["RecordPutRevisionSimpleValue"] | components["schemas"]["RecordPutRawRecordIdSimpleValue"];
                    };
                    /**
                     * Format: long
                     * @description The expected revision number.
                     *     If the value does not match, an error will occur and the record will not be updated.
                     *     If the value is not specified or is -1, the revision number will not be checked.
                     *
                     */
                    revision?: number;
                    updateKey?: components["schemas"]["RecordPutUpdateKey"];
                };
            };
        };
        responses: {
            /** @description success case of record/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: long */
                        revision?: number;
                    };
                };
            };
        };
    };
    postRecord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Field codes and values are specified in this object.
                     *     If ignored, the record will be added with default field values.
                     *     If field codes that don't exist are specified, these will be ignored.
                     *      */
                    record: {
                        [key: string]: components["schemas"]["RecordPostCalcSimpleValue"] | components["schemas"]["RecordPostCategorySimpleValue"] | components["schemas"]["RecordPostDateSimpleValue"] | components["schemas"]["RecordPostDatetimeSimpleValue"] | components["schemas"]["RecordPostDecimalSimpleValue"] | components["schemas"]["RecordPostEditorSimpleValue"] | components["schemas"]["RecordPostFileSimpleValue"] | components["schemas"]["RecordPostGroupSimpleValue"] | components["schemas"]["RecordPostLinkSimpleValue"] | components["schemas"]["RecordPostModifiedAtSimpleValue"] | components["schemas"]["RecordPostModifierSimpleValue"] | components["schemas"]["RecordPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordPostMultipleSelectSimpleValue"] | components["schemas"]["RecordPostRecordIdSimpleValue"] | components["schemas"]["RecordPostReferenceTableSimpleValue"] | components["schemas"]["RecordPostSimpleTableValue"] | components["schemas"]["RecordPostSingleLineTextSimpleValue"] | components["schemas"]["RecordPostSingleSelectSimpleValue"] | components["schemas"]["RecordPostStatusSimpleValue"] | components["schemas"]["RecordPostTimeSimpleValue"] | components["schemas"]["RecordPostUserSelectSimpleValue"] | components["schemas"]["RecordPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordPostGroupSelectSimpleValue"] | components["schemas"]["RecordPostRevisionSimpleValue"] | components["schemas"]["RecordPostRawRecordIdSimpleValue"];
                    };
                };
            };
        };
        responses: {
            /** @description success case of record/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Record ID of the created Record.
                         *
                         */
                        id?: number;
                        /**
                         * Format: long
                         * @description The revision number of the Record.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecordAcl: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The localized language to retrieve the data in:
                 *     - default: retrieves the default names
                 *     - en: retrieves the localized English names
                 *     - zh: retrieves the localized Chinese names
                 *     - ja: retrieves the localized Japanese names
                 *     - user: retrieves the localized names, in the same language as the language setting* set on the user used for the authentication.
                 *
                 *     If ignored, the default names will be retrieved.
                 *      */
                lang?: "default" | "user" | "ja" | "en" | "zh";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/acl/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                        /** @description An array of objects that contain data of record permissions, in order of priority.
                         *      */
                        rights?: components["schemas"]["RecordAclGetRight"][];
                    };
                };
            };
        };
    };
    putRecordAcl: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app?: number;
                    /** Format: long */
                    id?: number;
                    /**
                     * Format: long
                     * @description Specify the revision number of the settings that will be deployed.
                     *     The request will fail if the revision number is not the latest revision.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                    /** @description An array listing data of record permissions. List in order of priority.
                     *      */
                    rights: components["schemas"]["RecordAclPutRightForm"][];
                };
            };
        };
        responses: {
            /** @description success case of record/acl/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the App settings.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    putRecordAssignees: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The user code(s) (log in names) of the Assignee(s). If empty, no users will be assigned. The maximum number of Assignees is 100.
                     *      */
                    assignees: string[];
                    /**
                     * Format: long
                     * @description The record ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: long
                     * @description The revision number of the record before updating the Assignees.
                     *     If the specified revision is not the latest revision, the request will result in an error.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of record/assignees/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the record after updating the Assignees.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    postRecordComment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An object including comment details.
                     *      */
                    comment: {
                        /** @description An array including information to mention other users.
                         *      */
                        mentions?: components["schemas"]["RecordCommentPostMentionForm"][];
                        /** @description The comment text. The maximum characters of the comment is 65535.
                         *      */
                        text: string;
                    };
                    /**
                     * Format: long
                     * @description The Record ID.
                     *
                     */
                    record: number;
                };
            };
        };
        responses: {
            /** @description success case of record/comment/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Comment ID.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    deleteRecordComment: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The Record ID.
                 *      */
                record: number;
                /** @description The Comment ID.
                 *      */
                comment: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/comment/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getRecordComments: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description This skips the retrieval of the first number of comments.
                 *     "offset": 30 skips the first 30 comments, and retrieves from the 31st comment. There is no maximum for this value.
                 *      */
                offset?: number;
                /** @description The Record ID.
                 *      */
                record: number;
                /** @description The number of records to retrieve.
                 *     "limit": 5 will retrieve the first 5 comments. The default and maximum is 10 comments.
                 *      */
                limit?: number;
                /** @description The sort order of the Comment ID. Specifying "asc" will sort the comments in ascending order, and "desc" will sort the comments in descending order.
                 *     If ignored, "desc" will be set.
                 *      */
                order?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of record/comments/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of comments. An empty array is returned if no conditions are met.
                         *      */
                        comments?: components["schemas"]["RecordCommentsGetCommentOutputForm"][];
                        /** @description Information of newer comments:
                         *     - true: Newer comments exist.
                         *     - false: Newer comments do not exist. (i.e. the last comment)
                         *      */
                        newer?: boolean;
                        /** @description Information of older comments:
                         *     - true: Older comments exist.
                         *     - false: Older comments do not exist (i.e. the first comment)
                         *      */
                        older?: boolean;
                    };
                };
            };
        };
    };
    putRecordStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The Action name of the action to run.
                     *     If the localization feature has been used to apply multiple translations of the Action name,
                     *     specify the name of the Action in the language settings of the user that will run the API.
                     *     API Tokens follow the language settings set in the User & System Administration settings.
                     *      */
                    action: string;
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The next Assignee. Specify the Assignee's log in name.
                     *     Required, if the "Assignee List" of the current status is set to "User chooses one assignee from the list to take action",
                     *     and a selectable assignee exists.
                     *      */
                    assignee?: string;
                    /**
                     * Format: long
                     * @description The record ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: long
                     * @description The revision number of the record before updating the status.
                     *     If the specified revision is not the latest revision, the request will result in an error.
                     *     The revision will not be checked if this parameter is ignored, or -1 is specified.
                     *
                     */
                    revision?: number;
                };
            };
        };
        responses: {
            /** @description success case of record/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The revision number of the record after updating the status.
                         *     The revision number will increase by 2, as two operations are preformed - running the action, and updating the status.
                         *
                         */
                        revision?: number;
                    };
                };
            };
        };
    };
    getRecords: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description The query string that specifies what records to include in the response.
                 *     Ignoring this parameter will return all accessible records from the App.
                 *      */
                query?: string;
                /** @description The field codes to be included in the response.
                 *     Ignoring this parameter will return all accessible fields that exist in the App.
                 *      */
                fields?: string[];
                /** @description If set to true, the total count of records that match the query conditions will be included in the response.
                 *     If ignored, null is returned for the totalCount value.
                 *      */
                totalCount?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects, including field types and field values within the matching records.
                         *      */
                        records?: {
                            [key: string]: components["schemas"]["RecordsGetCalcSimpleValue"] | components["schemas"]["RecordsGetCategorySimpleValue"] | components["schemas"]["RecordsGetDateSimpleValue"] | components["schemas"]["RecordsGetDatetimeSimpleValue"] | components["schemas"]["RecordsGetDecimalSimpleValue"] | components["schemas"]["RecordsGetEditorSimpleValue"] | components["schemas"]["RecordsGetFileSimpleValue"] | components["schemas"]["RecordsGetGroupSimpleValue"] | components["schemas"]["RecordsGetLinkSimpleValue"] | components["schemas"]["RecordsGetModifiedAtSimpleValue"] | components["schemas"]["RecordsGetModifierSimpleValue"] | components["schemas"]["RecordsGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsGetRecordIdSimpleValue"] | components["schemas"]["RecordsGetReferenceTableSimpleValue"] | components["schemas"]["RecordsGetSimpleTableValue"] | components["schemas"]["RecordsGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsGetSingleSelectSimpleValue"] | components["schemas"]["RecordsGetStatusSimpleValue"] | components["schemas"]["RecordsGetTimeSimpleValue"] | components["schemas"]["RecordsGetUserSelectSimpleValue"] | components["schemas"]["RecordsGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsGetGroupSelectSimpleValue"] | components["schemas"]["RecordsGetRevisionSimpleValue"] | components["schemas"]["RecordsGetRawRecordIdSimpleValue"];
                        }[];
                        /**
                         * Format: long
                         * @description The total count of records that match the query conditions.
                         *     If the totalCount parameter is ignored or is set as `false` in the request, `null` is returned.
                         *
                         */
                        totalCount?: number;
                    };
                };
            };
        };
    };
    putRecords: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Holds an array of objects that include id/updateKey, revision and record objects.
                     *      */
                    records: components["schemas"]["RecordsPutRecordForm"][];
                    /**
                     * Format: boolean
                     * @description A mode where adding and updating records can be processed at the same time.
                     *
                     */
                    upsert?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of records/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        records?: components["schemas"]["RecordsPutRecordBean"][] | components["schemas"]["RecordsPutUpsertRecordBean"][];
                    };
                };
            };
        };
    };
    postRecords: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description Holds an array of record objects, that contains field codes and their values.
                     *
                     *     Fields that are not included in the objects are added with their default value.
                     *     Objects containing field codes that do not exist are ignored.
                     *      */
                    records: {
                        [key: string]: components["schemas"]["RecordsPostCalcSimpleValue"] | components["schemas"]["RecordsPostCategorySimpleValue"] | components["schemas"]["RecordsPostDateSimpleValue"] | components["schemas"]["RecordsPostDatetimeSimpleValue"] | components["schemas"]["RecordsPostDecimalSimpleValue"] | components["schemas"]["RecordsPostEditorSimpleValue"] | components["schemas"]["RecordsPostFileSimpleValue"] | components["schemas"]["RecordsPostGroupSimpleValue"] | components["schemas"]["RecordsPostLinkSimpleValue"] | components["schemas"]["RecordsPostModifiedAtSimpleValue"] | components["schemas"]["RecordsPostModifierSimpleValue"] | components["schemas"]["RecordsPostMultipleLineTextSimpleValue"] | components["schemas"]["RecordsPostMultipleSelectSimpleValue"] | components["schemas"]["RecordsPostRecordIdSimpleValue"] | components["schemas"]["RecordsPostReferenceTableSimpleValue"] | components["schemas"]["RecordsPostSimpleTableValue"] | components["schemas"]["RecordsPostSingleLineTextSimpleValue"] | components["schemas"]["RecordsPostSingleSelectSimpleValue"] | components["schemas"]["RecordsPostStatusSimpleValue"] | components["schemas"]["RecordsPostTimeSimpleValue"] | components["schemas"]["RecordsPostUserSelectSimpleValue"] | components["schemas"]["RecordsPostOrganizationSelectSimpleValue"] | components["schemas"]["RecordsPostGroupSelectSimpleValue"] | components["schemas"]["RecordsPostRevisionSimpleValue"] | components["schemas"]["RecordsPostRawRecordIdSimpleValue"];
                    }[];
                };
            };
        };
        responses: {
            /** @description success case of records/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The Record IDs of the created records.
                         *      */
                        ids?: number[];
                        /** @description The revision numbers of the records.
                         *      */
                        revisions?: number[];
                    };
                };
            };
        };
    };
    deleteRecords: {
        parameters: {
            query: {
                /** @description The app ID.
                 *      */
                app: number;
                /** @description Array of record IDs that will be deleted.
                 *     Up to 100 records can be specified.
                 *      */
                ids: number[];
                /** @description The Expected revision number.
                 *     The first id number will correspond to the first revision number in the array, the second id to the second revision number, and so on.
                 *     If the revision number does not match, an error will occur and no records will be deleted.
                 *     If the revision number is left blank or is -1, the revision number will not be checked for the corresponding record ID.
                 *      */
                revisions?: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getRecordsAclEvaluate: {
        parameters: {
            query: {
                /** @description The App ID.
                 *      */
                app: number;
                /** @description An array of record IDs that will be evaluated.
                 *     The maximum limit is 100 IDs.
                 *      */
                ids: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/acl/evaluate/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array of objects that contain permission settings of the specified records.
                         *      */
                        rights?: components["schemas"]["RecordsAclEvaluateGetRight"][];
                    };
                };
            };
        };
    };
    getRecordsCursor: {
        parameters: {
            query: {
                /** @description The cursor ID.
                 *      */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/cursor/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description States whether there are more records that can be acquired from the cursor.
                         *     - true: There are still records to be acquired.
                         *     - false: There are no more records to be acquired.
                         *
                         *     Run this API again with the same parameters to obtain the next set of records.
                         *     The cursor will remain valid until all records have been obtained.
                         *      */
                        next?: boolean;
                        /** @description An array of objects that includes field data of records that match the query.
                         *     The response is the same as the response for the Get Records API.
                         *      */
                        records?: {
                            [key: string]: components["schemas"]["RecordsCursorGetCalcSimpleValue"] | components["schemas"]["RecordsCursorGetCategorySimpleValue"] | components["schemas"]["RecordsCursorGetDateSimpleValue"] | components["schemas"]["RecordsCursorGetDatetimeSimpleValue"] | components["schemas"]["RecordsCursorGetDecimalSimpleValue"] | components["schemas"]["RecordsCursorGetEditorSimpleValue"] | components["schemas"]["RecordsCursorGetFileSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSimpleValue"] | components["schemas"]["RecordsCursorGetLinkSimpleValue"] | components["schemas"]["RecordsCursorGetModifiedAtSimpleValue"] | components["schemas"]["RecordsCursorGetModifierSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetMultipleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRecordIdSimpleValue"] | components["schemas"]["RecordsCursorGetReferenceTableSimpleValue"] | components["schemas"]["RecordsCursorGetSimpleTableValue"] | components["schemas"]["RecordsCursorGetSingleLineTextSimpleValue"] | components["schemas"]["RecordsCursorGetSingleSelectSimpleValue"] | components["schemas"]["RecordsCursorGetStatusSimpleValue"] | components["schemas"]["RecordsCursorGetTimeSimpleValue"] | components["schemas"]["RecordsCursorGetUserSelectSimpleValue"] | components["schemas"]["RecordsCursorGetOrganizationSelectSimpleValue"] | components["schemas"]["RecordsCursorGetGroupSelectSimpleValue"] | components["schemas"]["RecordsCursorGetRevisionSimpleValue"] | components["schemas"]["RecordsCursorGetRawRecordIdSimpleValue"];
                        }[];
                    };
                };
            };
        };
    };
    postRecordsCursor: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description The field codes to be included in the response when using the Get Cursor API.
                     *     If ignored, all accessible fields in the app will be returned.
                     *      */
                    fields?: string[];
                    /**
                     * Format: query
                     * @description The query string that will specify what records will be responded when using the Get Cursor API.
                     *     If ignored, all accessible records from the App will be returned.
                     *
                     */
                    query?: string;
                    /**
                     * Format: long
                     * @description The maximum number of records the Get Cursor API can retrieve from this cursor with one request.
                     *     The maximum number is 500 records. If ignored, the default number of records to be retrieved is 100.
                     *
                     */
                    size?: number;
                };
            };
        };
        responses: {
            /** @description success case of records/cursor/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The cursor ID.
                         *      */
                        id?: string;
                        /**
                         * Format: long
                         * @description The total count of records that match the query conditions.
                         *
                         */
                        totalCount?: number;
                    };
                };
            };
        };
    };
    deleteRecordsCursor: {
        parameters: {
            query: {
                /** @description The cursor ID.
                 *      */
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of records/cursor/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putRecordsStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The App ID.
                     *
                     */
                    app: number;
                    /** @description An array including information of the record to be updated. Up to 100 records can be specified.
                     *     Specifying more than 100 records will result in an error.
                     *      */
                    records: components["schemas"]["RecordsStatusPutRecordsStatusPutFormRecord"][];
                };
            };
        };
        responses: {
            /** @description success case of records/status/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description An array including information of the updated records.
                         *      */
                        records?: components["schemas"]["RecordsStatusPutRecordsStatusPutOutputFormRecord"][];
                    };
                };
            };
        };
    };
    getSpace: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *     The Space ID can be found in the URL of the Space.
                 *     A Space with the URL of https://{domainname}.cybozu.com/k/#/space/111 has a Space ID of 111.
                 *      */
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Apps that are in the thread.
                         *     This does not include Apps that are not live yet.
                         *      */
                        attachedApps?: components["schemas"]["SpaceGetAttachedApp"][];
                        /** @description The HTML of the Space body.
                         *     Null is returned if the HTML in the body is empty.
                         *     However, if the body has been set before, the HTML tags may be set even if nothing is displayed on the screen and the string will be returned.
                         *      */
                        body?: string;
                        /** @description The key of the Cover Photo.
                         *      */
                        coverKey?: string;
                        /**
                         * @description The image type of the Cover Photo.
                         *     - BLOB: An uploaded image.
                         *     - PRESET: A preset image.
                         *
                         * @enum {string}
                         */
                        coverType?: "BLOB" | "PRESET";
                        /** @description The URL of the Cover Photo.
                         *      */
                        coverUrl?: string;
                        /** @description An object containing information of the creator of the Space.
                         *      */
                        creator?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /**
                         * Format: long
                         * @description The Thread ID of the default thread that was created when the Space was made.
                         *
                         */
                        defaultThread?: number;
                        /** @description The options set for the Block users from joining or leaving the space and following or unfollowing the threads setting.
                         *     - true: Users cannot join/leave the Space or follow/unfollow threads.
                         *     - false: Users can join/leave the Space and follow/unfollow threads.
                         *      */
                        fixedMember?: boolean;
                        /**
                         * Format: long
                         * @description The Space ID.
                         *
                         */
                        id?: number;
                        /** @description The Guest Space setting.
                         *     - true: The Space is a Guest Space.
                         *     - false: The Space is not a Guest Space.
                         *      */
                        isGuest?: boolean;
                        /** @description The "Private" settings of the Space.
                         *     - true: The Space is private.
                         *     - false: The Space is not private.
                         *      */
                        isPrivate?: boolean;
                        /**
                         * Format: long
                         * @description The number of members of the Space.
                         *
                         */
                        memberCount?: number;
                        /** @description An object containing information of the updater of the Space.
                         *      */
                        modifier?: {
                            /** @description The log in name of the creator.
                             *      */
                            code?: string;
                            /** @description The display name of the creator.
                             *      */
                            name?: string;
                        };
                        /** @description The name of the Space
                         *      */
                        name?: string;
                        /** @description An object containing information of the space's permission settings.
                         *      */
                        permissions?: {
                            /**
                             * @description The option set for the Only Allow Space Administrators to Create Apps setting
                             *     - EVERYONE: all users can create Apps.
                             *     - ADMIN: only administrators can create Apps.
                             *
                             * @enum {string}
                             */
                            createApp?: "EVERYONE" | "ADMIN";
                        };
                        /** @description The display status for the Announcement widget.
                         *     - true: The Announcement widget is displayed.
                         *     - false: The Announcement widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showAnnouncement?: boolean;
                        /** @description The display status for the Apps widget.
                         *     - true: The Apps widget is displayed.
                         *     - false: The Apps widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showAppList?: boolean;
                        /** @description The display status for the People widget.
                         *     - true: The People widget is displayed.
                         *     - false: The People widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showMemberList?: boolean;
                        /** @description The display status for the Related Apps & Spaces widget.
                         *     - true: The Related Apps & Spaces widget is displayed.
                         *     - false: The Related Apps & Spaces widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showRelatedLinkList?: boolean;
                        /** @description The display status for the Threads widget.
                         *     - true: The Threads widget is displayed.
                         *     - false: The Threads widget is not displayed.
                         *     - null is returned for Spaces with the Enable multiple threads option turned off.
                         *      */
                        showThreadList?: boolean;
                        /** @description The Enable multiple threads setting.
                         *     - true: The Space is a Multi-threaded Space.
                         *     - false: The Space is a Single-threaded Space.
                         *      */
                        useMultiThread?: boolean;
                    };
                };
            };
        };
    };
    putSpace: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: boolean
                     * @description The options set for the Block users from joining or leaving the space and following or unfollowing the threads setting.
                     *     - true: Users cannot join/leave the Space or follow/unfollow threads.
                     *     - false: Users can join/leave the Space and follow/unfollow threads.
                     *
                     */
                    fixedMember?: boolean;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                    /**
                     * Format: boolean
                     * @description The Private settings of the Space.
                     *     - true: The Space is private.
                     *     - false: The Space is not private.
                     *
                     */
                    isPrivate?: boolean;
                    /** @description The new name of the Space.
                     *      */
                    name?: string;
                    /** @description An object containing information of the space's permission settings.
                     *      */
                    permissions?: {
                        /**
                         * @description The option set for the Only Allow Space Administrators to Create Apps setting
                         *     - EVERYONE: all users can create apps.
                         *     - ADMIN: only administrators can create apps.
                         *
                         * @enum {string}
                         */
                        createApp?: "EVERYONE" | "ADMIN";
                    };
                    /**
                     * Format: boolean
                     * @description The display status for the Announcement widget.
                     *     - true: The Announcement widget is displayed.
                     *     - false: The Announcement widget is not displayed.
                     *
                     */
                    showAnnouncement?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Apps widget.
                     *     - true: The Apps widget is displayed.
                     *     - false: The Apps widget is not displayed.
                     *
                     */
                    showAppList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the People widget.
                     *     - true: The People widget is displayed.
                     *     - false: The People widget is not displayed.
                     *
                     */
                    showMemberList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Related Apps & Spaces widget.
                     *     - true: The Related Apps & Spaces widget is displayed.
                     *     - false: The Related Apps & Spaces widget is not displayed.
                     *
                     */
                    showRelatedLinkList?: boolean;
                    /**
                     * Format: boolean
                     * @description The display status for the Threads widget.
                     *     - true: The Threads widget is displayed.
                     *     - false: The Threads widget is not displayed.
                     *
                     */
                    showThreadList?: boolean;
                    /**
                     * Format: boolean
                     * @description The Enable multiple threads setting.
                     *     - true: The Space is a Multi-threaded Space.
                     *     - false: The setting will not be updated, as a Multi-Threaded Space can not be reverted to a Single-threaded Space.
                     *
                     */
                    useMultiThread?: boolean;
                };
            };
        };
        responses: {
            /** @description success case of space/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    deleteSpace: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *      */
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/delete */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceBody: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The contents of the body as an HTML string.
                     *     HTML tags that cannot be used will be automatically removed.
                     *     HTML can be used to attach Apps, files and Emoji.
                     *     The usage of the @ mark to mention a user will not notify that user.
                     *      */
                    body: string;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                };
            };
        };
        responses: {
            /** @description success case of space/body/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceGuests: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description A list of email addresses of Guest users.
                     *     Guest users must first be added as a Guest user of Kintone before they can be affiliated with Spaces. To do this, use the Add Guests API.
                     *     Users who are not Guest users, or are inactive/deleted users cannot be added to the list.
                     *      */
                    guests: string[];
                    /**
                     * Format: long
                     * @description The Guest Space ID.
                     *
                     */
                    id: number;
                };
            };
        };
        responses: {
            /** @description success case of space/guests/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    getSpaceMembers: {
        parameters: {
            query: {
                /** @description The Space ID.
                 *      */
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of space/members/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description A list of Space members.
                         *     Guest users, inactive users and deleted users will not be included.
                         *      */
                        members?: (components["schemas"]["SpaceMembersGetUserBean"] | components["schemas"]["SpaceMembersGetOrganizationBean"] | components["schemas"]["SpaceMembersGetGroupBean"])[];
                    };
                };
            };
        };
    };
    putSpaceMembers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    id: number;
                    /** @description A list of members of the Space.
                     *     At least one Space Administrator must be specified.
                     *     Inactive and deleted users cannot be specified.
                     *      */
                    members?: components["schemas"]["SpaceMembersPutMemberForm"][];
                };
            };
        };
        responses: {
            /** @description success case of space/members/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    putSpaceThread: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The contents of the Thread body.
                     *     Write the contents as an HTML string, within 65535 characters
                     *     HTML tags that cannot be used will be automatically removed.
                     *     HTML can be used to attach Apps, files and Emoji.
                     *     The usage of the @ mark to mention a user will not notify that user.
                     *      */
                    body?: string;
                    /**
                     * Format: long
                     * @description The Thread ID.
                     *     The Thread ID can be found in the URL of the Thread.
                     *     A Space with the URL of https://{domainname}.cybozu.com/k/#/space/111/thread/222 has a Space ID of 111 and a Thread ID of 222.
                     *
                     */
                    id: number;
                    /** @description The new name of the Thread.
                     *     Must be between 1 - 128 characters.
                     *     The name will not be updated if this parameter is ignored.
                     *     The Thread name of single threaded Spaces cannot be updated.
                     *      */
                    name?: string;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/put */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    postSpaceThread: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The new name of the Thread.
                     *     Must be between 1 - 128 characters.
                     *      */
                    name: string;
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    space: number;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Thread ID of the created Thread.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    postSpaceThreadComment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description An object including comment details.
                     *      */
                    comment: {
                        /** @description An array including data of attachment files.
                         *     The maximum number of the files is 5.
                         *     Required, if comment.text is not set.
                         *      */
                        files?: components["schemas"]["SpaceThreadCommentPostFileForm"][];
                        /** @description An array including mentions, that notify other Kintone users.
                         *      */
                        mentions?: components["schemas"]["SpaceThreadCommentPostMentionForm"][];
                        /** @description The comment contents.
                         *     A line break can be specified by LF.
                         *     The maximum characters of the comment is 65535. Required, if comment.files is not set.
                         *      */
                        text?: string;
                    };
                    /**
                     * Format: long
                     * @description The Space ID.
                     *
                     */
                    space: number;
                    /**
                     * Format: long
                     * @description The Thread ID.
                     *
                     */
                    thread: number;
                };
            };
        };
        responses: {
            /** @description success case of space/thread/comment/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The comment ID of the created comment.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
    getSpacesStatistics: {
        parameters: {
            query?: {
                offset?: string;
                limit?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description success case of spaces/statistics/get */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        spaces?: components["schemas"]["SpacesStatisticsGetSpaceForm"][];
                    };
                };
            };
        };
    };
    postTemplateSpace: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: boolean
                     * @description The "Block users from joining or leaving the space and following or unfollowing the threads." settings of the Space.
                     *     - true: Users will not be able to join/leave the Space or follow/unfollow threads.
                     *     - false: Users will be able to join/leave the Space and follow/unfollow threads.
                     *     If ignored, this value is false.
                     *
                     */
                    fixedMember?: boolean;
                    /**
                     * Format: long
                     * @description The Space Template ID.
                     *     The Space Template ID is listed on the Space Templates list page, found under https://{domainname}.cybozu.com/k/admin/system/spacetemplate/
                     *
                     */
                    id: number;
                    /**
                     * Format: boolean
                     * @description The Guest Space settings of the Space.
                     *     - true: The Space will be a Guest Space
                     *     - false: The Space will be a normal Space.
                     *     If ignored, this value is false.
                     *
                     */
                    isGuest?: boolean;
                    /**
                     * Format: boolean
                     * @description The "Private" settings of the Space.
                     *     - true: The Space will be Private.
                     *     - false: The Space will not be Private.
                     *     If the isGuest parameter is set to true, this value is also true.
                     *     If ignored, this value is false.
                     *
                     */
                    isPrivate?: boolean;
                    /** @description A list of members of the Space.
                     *     At least one Space Administrator must be specified.
                     *     Inactive and deleted users cannot be specified.
                     *      */
                    members?: components["schemas"]["TemplateSpacePostMemberForm"][];
                    /** @description The new name of the Space.
                     *      */
                    name: string;
                };
            };
        };
        responses: {
            /** @description success case of template/space/post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * Format: long
                         * @description The Space ID of the created Space.
                         *
                         */
                        id?: number;
                    };
                };
            };
        };
    };
}
