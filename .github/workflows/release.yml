name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create release
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: create-iat
        with:
          app-id: ${{ secrets.RELEASE_GITHUB_APP_ID}}
          private-key: ${{ secrets.RELEASE_GITHUB_APP_KEY }}
      - uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4
        id: release
        with:
          token: ${{ steps.create-iat.outputs.token }}

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.releases_created == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3

      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - run: pnpm install --frozen-lockfile
      - name: Configure npm user
        run: npm config set "//registry.npmjs.org/:_authToken=${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: pnpm build
      - run: pnpm -r publish --access public
        env:
          NPM_CONFIG_PROVENANCE: true

  actions-timeline:
    needs: [publish]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@da70beff098ff89b15d279e8bf2f60519a8dadd7 # v2
